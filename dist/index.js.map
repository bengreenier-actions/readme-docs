{"version":3,"file":"index.js","sources":["../webpack://readme-docs/./lib/lib.js","../webpack://readme-docs/./lib/main.js","../webpack://readme-docs/./node_modules/@actions/core/lib/command.js","../webpack://readme-docs/./node_modules/@actions/core/lib/core.js","../webpack://readme-docs/./node_modules/@actions/core/lib/file-command.js","../webpack://readme-docs/./node_modules/@actions/core/lib/oidc-utils.js","../webpack://readme-docs/./node_modules/@actions/core/lib/utils.js","../webpack://readme-docs/./node_modules/@actions/glob/lib/glob.js","../webpack://readme-docs/./node_modules/@actions/glob/lib/internal-glob-options-helper.js","../webpack://readme-docs/./node_modules/@actions/glob/lib/internal-globber.js","../webpack://readme-docs/./node_modules/@actions/glob/lib/internal-hash-files.js","../webpack://readme-docs/./node_modules/@actions/glob/lib/internal-match-kind.js","../webpack://readme-docs/./node_modules/@actions/glob/lib/internal-path-helper.js","../webpack://readme-docs/./node_modules/@actions/glob/lib/internal-path.js","../webpack://readme-docs/./node_modules/@actions/glob/lib/internal-pattern-helper.js","../webpack://readme-docs/./node_modules/@actions/glob/lib/internal-pattern.js","../webpack://readme-docs/./node_modules/@actions/glob/lib/internal-search-state.js","../webpack://readme-docs/./node_modules/@actions/http-client/auth.js","../webpack://readme-docs/./node_modules/@actions/http-client/index.js","../webpack://readme-docs/./node_modules/@actions/http-client/proxy.js","../webpack://readme-docs/./node_modules/balanced-match/index.js","../webpack://readme-docs/./node_modules/boolean/build/lib/boolean.js","../webpack://readme-docs/./node_modules/brace-expansion/index.js","../webpack://readme-docs/./node_modules/concat-map/index.js","../webpack://readme-docs/./node_modules/define-properties/index.js","../webpack://readme-docs/./node_modules/detect-node/index.js","../webpack://readme-docs/./node_modules/es6-error/lib/index.js","../webpack://readme-docs/./node_modules/global-agent/bootstrap.js","../webpack://readme-docs/./node_modules/global-agent/dist/Logger.js","../webpack://readme-docs/./node_modules/global-agent/dist/classes/Agent.js","../webpack://readme-docs/./node_modules/global-agent/dist/classes/HttpProxyAgent.js","../webpack://readme-docs/./node_modules/global-agent/dist/classes/HttpsProxyAgent.js","../webpack://readme-docs/./node_modules/global-agent/dist/classes/index.js","../webpack://readme-docs/./node_modules/global-agent/dist/errors.js","../webpack://readme-docs/./node_modules/global-agent/dist/factories/createGlobalProxyAgent.js","../webpack://readme-docs/./node_modules/global-agent/dist/factories/createProxyController.js","../webpack://readme-docs/./node_modules/global-agent/dist/factories/index.js","../webpack://readme-docs/./node_modules/global-agent/dist/index.js","../webpack://readme-docs/./node_modules/global-agent/dist/routines/bootstrap.js","../webpack://readme-docs/./node_modules/global-agent/dist/routines/index.js","../webpack://readme-docs/./node_modules/global-agent/dist/utilities/bindHttpMethod.js","../webpack://readme-docs/./node_modules/global-agent/dist/utilities/index.js","../webpack://readme-docs/./node_modules/global-agent/dist/utilities/isUrlMatchingNoProxy.js","../webpack://readme-docs/./node_modules/global-agent/dist/utilities/parseProxyUrl.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/classes/comparator.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/classes/range.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/classes/semver.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/clean.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/cmp.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/coerce.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/compare-build.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/compare-loose.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/compare.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/diff.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/eq.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/gt.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/gte.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/inc.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/lt.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/lte.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/major.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/minor.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/neq.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/parse.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/patch.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/prerelease.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/rcompare.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/rsort.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/satisfies.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/sort.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/functions/valid.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/index.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/internal/constants.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/internal/debug.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/internal/identifiers.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/internal/parse-options.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/internal/re.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/ranges/gtr.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/ranges/intersects.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/ranges/ltr.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/ranges/max-satisfying.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/ranges/min-satisfying.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/ranges/min-version.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/ranges/outside.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/ranges/simplify.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/ranges/subset.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/ranges/to-comparators.js","../webpack://readme-docs/./node_modules/global-agent/node_modules/semver/ranges/valid.js","../webpack://readme-docs/./node_modules/globalthis/implementation.js","../webpack://readme-docs/./node_modules/globalthis/index.js","../webpack://readme-docs/./node_modules/globalthis/polyfill.js","../webpack://readme-docs/./node_modules/globalthis/shim.js","../webpack://readme-docs/./node_modules/json-stringify-safe/stringify.js","../webpack://readme-docs/./node_modules/lru-cache/index.js","../webpack://readme-docs/./node_modules/matcher/index.js","../webpack://readme-docs/./node_modules/matcher/node_modules/escape-string-regexp/index.js","../webpack://readme-docs/./node_modules/minimatch/minimatch.js","../webpack://readme-docs/./node_modules/node-fetch-cjs/dist/index.js","../webpack://readme-docs/./node_modules/object-keys/implementation.js","../webpack://readme-docs/./node_modules/object-keys/index.js","../webpack://readme-docs/./node_modules/object-keys/isArguments.js","../webpack://readme-docs/./node_modules/roarr/dist/constants.js","../webpack://readme-docs/./node_modules/roarr/dist/factories/createLogger.js","../webpack://readme-docs/./node_modules/roarr/dist/factories/createMockLogger.js","../webpack://readme-docs/./node_modules/roarr/dist/factories/createNodeWriter.js","../webpack://readme-docs/./node_modules/roarr/dist/factories/createRoarrInititialGlobalState.js","../webpack://readme-docs/./node_modules/roarr/dist/factories/index.js","../webpack://readme-docs/./node_modules/roarr/dist/log.js","../webpack://readme-docs/./node_modules/roarr/node_modules/sprintf-js/src/sprintf.js","../webpack://readme-docs/./node_modules/semver-compare/index.js","../webpack://readme-docs/./node_modules/serialize-error/index.js","../webpack://readme-docs/./node_modules/tunnel/index.js","../webpack://readme-docs/./node_modules/tunnel/lib/tunnel.js","../webpack://readme-docs/./node_modules/yallist/iterator.js","../webpack://readme-docs/./node_modules/yallist/yallist.js","../webpack://readme-docs/./node_modules/@vercel/ncc/dist/ncc/@@notfound.js","../webpack://readme-docs/external \"assert\"","../webpack://readme-docs/external \"buffer\"","../webpack://readme-docs/external \"crypto\"","../webpack://readme-docs/external \"domain\"","../webpack://readme-docs/external \"events\"","../webpack://readme-docs/external \"fs\"","../webpack://readme-docs/external \"http\"","../webpack://readme-docs/external \"https\"","../webpack://readme-docs/external \"net\"","../webpack://readme-docs/external \"os\"","../webpack://readme-docs/external \"path\"","../webpack://readme-docs/external \"process\"","../webpack://readme-docs/external \"stream\"","../webpack://readme-docs/external \"tls\"","../webpack://readme-docs/external \"url\"","../webpack://readme-docs/external \"util\"","../webpack://readme-docs/external \"worker_threads\"","../webpack://readme-docs/external \"zlib\"","../webpack://readme-docs/webpack/bootstrap","../webpack://readme-docs/webpack/runtime/compat","../webpack://readme-docs/webpack/startup"],"sourcesContent":["\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.processRequest = void 0;\r\n/* eslint-disable github/no-then */\r\nrequire(\"global-agent/bootstrap\");\r\nconst core = __importStar(require(\"@actions/core\"));\r\nconst glob = __importStar(require(\"@actions/glob\"));\r\nconst node_fetch_cjs_1 = __importDefault(require(\"node-fetch-cjs\"));\r\nconst fs_1 = __importDefault(require(\"fs\"));\r\nconst path_1 = __importDefault(require(\"path\"));\r\nconst True = 'true';\r\nfunction processRequest(input) {\r\n    var _a;\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const options = {\r\n            method: 'GET',\r\n            headers: {\r\n                'x-readme-version': input.version,\r\n                Accept: 'application/json',\r\n                Authorization: `Basic ${input.apiKey}`\r\n            }\r\n        };\r\n        let parentDocId = undefined;\r\n        // we'll clear first if desired\r\n        if (input.clear === True) {\r\n            core.info(`📃 Attempting category '${input.categorySlug}' enumeration...`);\r\n            const docs = (yield (0, node_fetch_cjs_1.default)(`https://dash.readme.com/api/v1/categories/${input.categorySlug}/docs`, options)\r\n                .then((res) => __awaiter(this, void 0, void 0, function* () {\r\n                if (!res.ok) {\r\n                    const body = yield res.text();\r\n                    throw new Error(`${res.status}: ${body}`);\r\n                }\r\n                else {\r\n                    return res;\r\n                }\r\n            }))\r\n                .then((res) => __awaiter(this, void 0, void 0, function* () { return yield res.json(); })));\r\n            let childDocs = docs.flatMap(d => d.children);\r\n            core.info(`📃 Found ${docs.length} category docs with ${childDocs.length} children.`);\r\n            if (input.parentSlug && input.parentSlug.length > 0) {\r\n                const parentDoc = docs.find(d => d.slug === input.parentSlug);\r\n                if (!parentDoc) {\r\n                    throw new Error(`❌ Unable to find parent doc ${input.parentSlug} under category ${input.categorySlug}`);\r\n                }\r\n                // update child docs to just those under parentSlug\r\n                parentDocId = parentDoc._id;\r\n                childDocs = parentDoc.children;\r\n                core.info(`📃 Limiting to ${input.parentSlug} with ${childDocs.length} children. Attempting to remove children...`);\r\n            }\r\n            else {\r\n                core.info(`Attempting '${input.categorySlug}' clear...`);\r\n            }\r\n            yield Promise.all(childDocs.map((d) => __awaiter(this, void 0, void 0, function* () {\r\n                return (0, node_fetch_cjs_1.default)(`https://dash.readme.com/api/v1/docs/${d.slug}`, Object.assign(Object.assign({}, options), { method: 'DELETE' })).then((res) => __awaiter(this, void 0, void 0, function* () {\r\n                    if (!res.ok) {\r\n                        const body = yield res.text();\r\n                        throw new Error(`${res.status}: ${body}`);\r\n                    }\r\n                    else {\r\n                        return res;\r\n                    }\r\n                }));\r\n            })));\r\n            core.info(`📃 Children destroyed`);\r\n            if (!input.parentSlug || input.parentSlug.length === 0) {\r\n                yield Promise.all(docs.map((d) => __awaiter(this, void 0, void 0, function* () {\r\n                    return (0, node_fetch_cjs_1.default)(`https://dash.readme.com/api/v1/docs/${d.slug}`, Object.assign(Object.assign({}, options), { method: 'DELETE' })).then((res) => __awaiter(this, void 0, void 0, function* () {\r\n                        if (!res.ok) {\r\n                            const body = yield res.text();\r\n                            throw new Error(`${res.status}: ${body}`);\r\n                        }\r\n                        else {\r\n                            return res;\r\n                        }\r\n                    }));\r\n                })));\r\n                core.info(`📃 Parents destroyed`);\r\n                core.info(`📃 Category '${input.categorySlug}' cleared`);\r\n            }\r\n            else {\r\n                core.info(`📃 Parent doc '${input.parentSlug}' cleared`);\r\n            }\r\n        }\r\n        else {\r\n            core.info(`📃 Skipping clear (clear input was '${input.clear}' categorySlug was '${input.categorySlug}' parentSlug was '${input.parentSlug}')`);\r\n        }\r\n        // find all the docs from path\r\n        const globber = yield glob.create(input.path);\r\n        const files = yield globber.glob();\r\n        if (files.length === 0) {\r\n            core.warning(`⚠️  No files found to upload. Searched with glob '${input.path}'.`);\r\n            // exit early, no further work needed\r\n            return;\r\n        }\r\n        core.info(`📃 Attempting to get info for category '${input.categorySlug}'...`);\r\n        const category = (yield (0, node_fetch_cjs_1.default)(`https://dash.readme.com/api/v1/categories/${input.categorySlug}`, options)\r\n            .then((res) => __awaiter(this, void 0, void 0, function* () {\r\n            if (!res.ok) {\r\n                const body = yield res.text();\r\n                throw new Error(`${res.status}: ${body}`);\r\n            }\r\n            else {\r\n                return res;\r\n            }\r\n        }))\r\n            .then((res) => __awaiter(this, void 0, void 0, function* () { return yield res.json(); })));\r\n        core.info(`📃 Attempting to parse titleRegex '${input.titleRegex}'`);\r\n        const titleRegex = new RegExp(input.titleRegex);\r\n        const titlePrefix = (_a = input.titlePrefix) !== null && _a !== void 0 ? _a : '';\r\n        core.info(`📃 Attempting to parse additionalJson '${input.additionalJson}'`);\r\n        const baseRequest = parentDocId\r\n            ? Object.assign(Object.assign({}, JSON.parse(input.additionalJson)), { parentDoc: parentDocId }) : JSON.parse(input.additionalJson);\r\n        core.info(`📃 Attempting to upload ${files.length} docs...`);\r\n        // create a helper func for the creation/update work\r\n        const createOrUpdate = (file) => __awaiter(this, void 0, void 0, function* () {\r\n            const fileContents = yield fs_1.default.promises.readFile(file, { encoding: 'utf8' });\r\n            const fileTileMatches = titleRegex.exec(fileContents);\r\n            // if we can't find a title, fail\r\n            if (!fileTileMatches || fileTileMatches.length <= 1) {\r\n                throw new Error(`❌  Unable to find title for file '${file}' using regex '${input.titleRegex}'.`);\r\n            }\r\n            const fileTitle = fileTileMatches[1].trim();\r\n            try {\r\n                if (input.create === True) {\r\n                    core.info(`📃 Attempting to create '${file}' as a document...`);\r\n                    yield (0, node_fetch_cjs_1.default)('https://dash.readme.com/api/v1/docs', Object.assign(Object.assign({}, options), { method: 'POST', headers: Object.assign(Object.assign({}, options.headers), { 'Content-Type': 'application/json' }), body: JSON.stringify(Object.assign(Object.assign({}, baseRequest), { title: `${titlePrefix}${fileTitle}`, slug: path_1.default.basename(file, path_1.default.extname(file)).trim(), category: category._id, body: fileContents })) })).then((res) => __awaiter(this, void 0, void 0, function* () {\r\n                        if (!res.ok) {\r\n                            const body = yield res.text();\r\n                            throw new Error(`${res.status}: ${body}`);\r\n                        }\r\n                        else {\r\n                            return res;\r\n                        }\r\n                    }));\r\n                }\r\n                else {\r\n                    // throw an empty error to enter the catch clause and attempt update\r\n                    throw new Error();\r\n                }\r\n            }\r\n            catch (e) {\r\n                if (e instanceof Error && e.message.length > 0) {\r\n                    core.warning(`⚠️  Creating doc failed: ${e}`);\r\n                }\r\n                if (input.overwrite === True) {\r\n                    core.info(`📃 Attempting to update '${file}' document...`);\r\n                    yield (0, node_fetch_cjs_1.default)(`https://dash.readme.com/api/v1/docs/${path_1.default\r\n                        .basename(file, path_1.default.extname(file))\r\n                        .trim()}`, Object.assign(Object.assign({}, options), { method: 'PUT', headers: Object.assign(Object.assign({}, options.headers), { 'Content-Type': 'application/json' }), body: JSON.stringify(Object.assign(Object.assign({}, baseRequest), { title: `${titlePrefix}${fileTitle}`, category: category._id, body: fileContents })) })).then((res) => __awaiter(this, void 0, void 0, function* () {\r\n                        if (!res.ok) {\r\n                            const body = yield res.text();\r\n                            throw new Error(`${res.status}: ${body}`);\r\n                        }\r\n                        else {\r\n                            return res;\r\n                        }\r\n                    }));\r\n                }\r\n                else if (input.create !== True) {\r\n                    // swallow\r\n                    core.warning(`⚠️  No documentation creation occurring - neither create '${input.create}' nor overwrite '${input.overwrite}' are true`);\r\n                }\r\n                else {\r\n                    // rethrow\r\n                    throw e;\r\n                }\r\n            }\r\n        }); // end createOrUpdate\r\n        // call create or update on each file\r\n        yield Promise.all(files.map((f) => __awaiter(this, void 0, void 0, function* () { return createOrUpdate(f); })));\r\n        core.info(`📃 Upload complete`);\r\n    });\r\n}\r\nexports.processRequest = processRequest;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst core = __importStar(require(\"@actions/core\"));\r\nconst lib_1 = require(\"./lib\");\r\n/// action.yml name mappings\r\n// allows us to change the yaml without rewriting code\r\nconst paramNames = {\r\n    apiKey: 'apiKey',\r\n    version: 'version',\r\n    categorySlug: 'categorySlug',\r\n    parentSlug: 'parentSlug',\r\n    titleRegex: 'titleRegex',\r\n    titlePrefix: 'titlePrefix',\r\n    path: 'path',\r\n    additionalJson: 'additionalJson',\r\n    create: 'create',\r\n    overwrite: 'overwrite',\r\n    clear: 'clear'\r\n};\r\n// params that are allowed to be empty\r\nconst allowedEmptyParams = ['parentSlug', 'titlePrefix'];\r\nclass InputMissingError extends Error {\r\n    constructor(inputName) {\r\n        super(`❌ Missing required input: ${inputName}`);\r\n    }\r\n}\r\nfunction run() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            // parse the inputs\r\n            const inputs = Object.entries(paramNames).reduce((prev, curr) => {\r\n                const nxt = Object.assign({}, prev);\r\n                const [paramId, inputName] = curr;\r\n                nxt[paramId] = core.getInput(inputName);\r\n                return nxt;\r\n            }, {});\r\n            // check the inputs\r\n            // this assumes that non-required action.yml inputs have default values\r\n            for (const paramId in paramNames) {\r\n                if ((!inputs[paramId] ||\r\n                    inputs[paramId].length === 0) &&\r\n                    !allowedEmptyParams.includes(paramId)) {\r\n                    throw new InputMissingError(paramId);\r\n                }\r\n            }\r\n            // execute work\r\n            yield (0, lib_1.processRequest)(inputs);\r\n            core.info('🚀 Complete.');\r\n        }\r\n        catch (error) {\r\n            if (error instanceof Error) {\r\n                core.setFailed(error.message);\r\n            }\r\n            else if (typeof error === 'object') {\r\n                core.setFailed(`Failed with error: ${JSON.stringify(error)}`);\r\n            }\r\n            else {\r\n                core.setFailed(`Failed with error: ${error}`);\r\n            }\r\n        }\r\n    });\r\n}\r\nprocess.on('exit', (code) => {\r\n    if (code !== 0) {\r\n        core.setFailed(`Exiting with code: ${code}`);\r\n    }\r\n    else {\r\n        core.info(`Exiting with code: ${code}`);\r\n    }\r\n});\r\n// begin - actions entrypoint\r\n// eslint-disable-next-line github/no-then\r\nrun().catch(error => core.setFailed(`Failed with error: ${error}`));\r\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issue = exports.issueCommand = void 0;\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\nconst oidc_utils_1 = require(\"./oidc-utils\");\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n        return val;\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Gets the values of an multiline input.  Each value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string[]\n *\n */\nfunction getMultilineInput(name, options) {\n    const inputs = getInput(name, options)\n        .split('\\n')\n        .filter(x => x !== '');\n    return inputs;\n}\nexports.getMultilineInput = getMultilineInput;\n/**\n * Gets the input value of the boolean type in the YAML 1.2 \"core schema\" specification.\n * Support boolean input list: `true | True | TRUE | false | False | FALSE` .\n * The return value is also in boolean type.\n * ref: https://yaml.org/spec/1.2/spec.html#id2804923\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   boolean\n */\nfunction getBooleanInput(name, options) {\n    const trueValue = ['true', 'True', 'TRUE'];\n    const falseValue = ['false', 'False', 'FALSE'];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n        return true;\n    if (falseValue.includes(val))\n        return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` +\n        `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n}\nexports.getBooleanInput = getBooleanInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction error(message, properties = {}) {\n    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds a warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction warning(message, properties = {}) {\n    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Adds a notice issue\n * @param message notice issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction notice(message, properties = {}) {\n    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.notice = notice;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\nfunction getIDToken(aud) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield oidc_utils_1.OidcClient.getIDToken(aud);\n    });\n}\nexports.getIDToken = getIDToken;\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issueCommand = void 0;\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OidcClient = void 0;\nconst http_client_1 = require(\"@actions/http-client\");\nconst auth_1 = require(\"@actions/http-client/auth\");\nconst core_1 = require(\"./core\");\nclass OidcClient {\n    static createHttpClient(allowRetry = true, maxRetry = 10) {\n        const requestOptions = {\n            allowRetries: allowRetry,\n            maxRetries: maxRetry\n        };\n        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);\n    }\n    static getRequestToken() {\n        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];\n        if (!token) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');\n        }\n        return token;\n    }\n    static getIDTokenUrl() {\n        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];\n        if (!runtimeUrl) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');\n        }\n        return runtimeUrl;\n    }\n    static getCall(id_token_url) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const httpclient = OidcClient.createHttpClient();\n            const res = yield httpclient\n                .getJson(id_token_url)\n                .catch(error => {\n                throw new Error(`Failed to get ID Token. \\n \n        Error Code : ${error.statusCode}\\n \n        Error Message: ${error.result.message}`);\n            });\n            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;\n            if (!id_token) {\n                throw new Error('Response json body do not have ID Token field');\n            }\n            return id_token;\n        });\n    }\n    static getIDToken(audience) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // New ID Token is requested from action service\n                let id_token_url = OidcClient.getIDTokenUrl();\n                if (audience) {\n                    const encodedAudience = encodeURIComponent(audience);\n                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;\n                }\n                core_1.debug(`ID token url is ${id_token_url}`);\n                const id_token = yield OidcClient.getCall(id_token_url);\n                core_1.setSecret(id_token);\n                return id_token;\n            }\n            catch (error) {\n                throw new Error(`Error message: ${error.message}`);\n            }\n        });\n    }\n}\nexports.OidcClient = OidcClient;\n//# sourceMappingURL=oidc-utils.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCommandProperties = exports.toCommandValue = void 0;\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n/**\n *\n * @param annotationProperties\n * @returns The command properties to send with the actual annotation command\n * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646\n */\nfunction toCommandProperties(annotationProperties) {\n    if (!Object.keys(annotationProperties).length) {\n        return {};\n    }\n    return {\n        title: annotationProperties.title,\n        file: annotationProperties.file,\n        line: annotationProperties.startLine,\n        endLine: annotationProperties.endLine,\n        col: annotationProperties.startColumn,\n        endColumn: annotationProperties.endColumn\n    };\n}\nexports.toCommandProperties = toCommandProperties;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashFiles = exports.create = void 0;\nconst internal_globber_1 = require(\"./internal-globber\");\nconst internal_hash_files_1 = require(\"./internal-hash-files\");\n/**\n * Constructs a globber\n *\n * @param patterns  Patterns separated by newlines\n * @param options   Glob options\n */\nfunction create(patterns, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield internal_globber_1.DefaultGlobber.create(patterns, options);\n    });\n}\nexports.create = create;\n/**\n * Computes the sha256 hash of a glob\n *\n * @param patterns  Patterns separated by newlines\n * @param options   Glob options\n */\nfunction hashFiles(patterns, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let followSymbolicLinks = true;\n        if (options && typeof options.followSymbolicLinks === 'boolean') {\n            followSymbolicLinks = options.followSymbolicLinks;\n        }\n        const globber = yield create(patterns, { followSymbolicLinks });\n        return internal_hash_files_1.hashFiles(globber);\n    });\n}\nexports.hashFiles = hashFiles;\n//# sourceMappingURL=glob.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOptions = void 0;\nconst core = __importStar(require(\"@actions/core\"));\n/**\n * Returns a copy with defaults filled in.\n */\nfunction getOptions(copy) {\n    const result = {\n        followSymbolicLinks: true,\n        implicitDescendants: true,\n        matchDirectories: true,\n        omitBrokenSymbolicLinks: true\n    };\n    if (copy) {\n        if (typeof copy.followSymbolicLinks === 'boolean') {\n            result.followSymbolicLinks = copy.followSymbolicLinks;\n            core.debug(`followSymbolicLinks '${result.followSymbolicLinks}'`);\n        }\n        if (typeof copy.implicitDescendants === 'boolean') {\n            result.implicitDescendants = copy.implicitDescendants;\n            core.debug(`implicitDescendants '${result.implicitDescendants}'`);\n        }\n        if (typeof copy.matchDirectories === 'boolean') {\n            result.matchDirectories = copy.matchDirectories;\n            core.debug(`matchDirectories '${result.matchDirectories}'`);\n        }\n        if (typeof copy.omitBrokenSymbolicLinks === 'boolean') {\n            result.omitBrokenSymbolicLinks = copy.omitBrokenSymbolicLinks;\n            core.debug(`omitBrokenSymbolicLinks '${result.omitBrokenSymbolicLinks}'`);\n        }\n    }\n    return result;\n}\nexports.getOptions = getOptions;\n//# sourceMappingURL=internal-glob-options-helper.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultGlobber = void 0;\nconst core = __importStar(require(\"@actions/core\"));\nconst fs = __importStar(require(\"fs\"));\nconst globOptionsHelper = __importStar(require(\"./internal-glob-options-helper\"));\nconst path = __importStar(require(\"path\"));\nconst patternHelper = __importStar(require(\"./internal-pattern-helper\"));\nconst internal_match_kind_1 = require(\"./internal-match-kind\");\nconst internal_pattern_1 = require(\"./internal-pattern\");\nconst internal_search_state_1 = require(\"./internal-search-state\");\nconst IS_WINDOWS = process.platform === 'win32';\nclass DefaultGlobber {\n    constructor(options) {\n        this.patterns = [];\n        this.searchPaths = [];\n        this.options = globOptionsHelper.getOptions(options);\n    }\n    getSearchPaths() {\n        // Return a copy\n        return this.searchPaths.slice();\n    }\n    glob() {\n        var e_1, _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = [];\n            try {\n                for (var _b = __asyncValues(this.globGenerator()), _c; _c = yield _b.next(), !_c.done;) {\n                    const itemPath = _c.value;\n                    result.push(itemPath);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return result;\n        });\n    }\n    globGenerator() {\n        return __asyncGenerator(this, arguments, function* globGenerator_1() {\n            // Fill in defaults options\n            const options = globOptionsHelper.getOptions(this.options);\n            // Implicit descendants?\n            const patterns = [];\n            for (const pattern of this.patterns) {\n                patterns.push(pattern);\n                if (options.implicitDescendants &&\n                    (pattern.trailingSeparator ||\n                        pattern.segments[pattern.segments.length - 1] !== '**')) {\n                    patterns.push(new internal_pattern_1.Pattern(pattern.negate, true, pattern.segments.concat('**')));\n                }\n            }\n            // Push the search paths\n            const stack = [];\n            for (const searchPath of patternHelper.getSearchPaths(patterns)) {\n                core.debug(`Search path '${searchPath}'`);\n                // Exists?\n                try {\n                    // Intentionally using lstat. Detection for broken symlink\n                    // will be performed later (if following symlinks).\n                    yield __await(fs.promises.lstat(searchPath));\n                }\n                catch (err) {\n                    if (err.code === 'ENOENT') {\n                        continue;\n                    }\n                    throw err;\n                }\n                stack.unshift(new internal_search_state_1.SearchState(searchPath, 1));\n            }\n            // Search\n            const traversalChain = []; // used to detect cycles\n            while (stack.length) {\n                // Pop\n                const item = stack.pop();\n                // Match?\n                const match = patternHelper.match(patterns, item.path);\n                const partialMatch = !!match || patternHelper.partialMatch(patterns, item.path);\n                if (!match && !partialMatch) {\n                    continue;\n                }\n                // Stat\n                const stats = yield __await(DefaultGlobber.stat(item, options, traversalChain)\n                // Broken symlink, or symlink cycle detected, or no longer exists\n                );\n                // Broken symlink, or symlink cycle detected, or no longer exists\n                if (!stats) {\n                    continue;\n                }\n                // Directory\n                if (stats.isDirectory()) {\n                    // Matched\n                    if (match & internal_match_kind_1.MatchKind.Directory && options.matchDirectories) {\n                        yield yield __await(item.path);\n                    }\n                    // Descend?\n                    else if (!partialMatch) {\n                        continue;\n                    }\n                    // Push the child items in reverse\n                    const childLevel = item.level + 1;\n                    const childItems = (yield __await(fs.promises.readdir(item.path))).map(x => new internal_search_state_1.SearchState(path.join(item.path, x), childLevel));\n                    stack.push(...childItems.reverse());\n                }\n                // File\n                else if (match & internal_match_kind_1.MatchKind.File) {\n                    yield yield __await(item.path);\n                }\n            }\n        });\n    }\n    /**\n     * Constructs a DefaultGlobber\n     */\n    static create(patterns, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new DefaultGlobber(options);\n            if (IS_WINDOWS) {\n                patterns = patterns.replace(/\\r\\n/g, '\\n');\n                patterns = patterns.replace(/\\r/g, '\\n');\n            }\n            const lines = patterns.split('\\n').map(x => x.trim());\n            for (const line of lines) {\n                // Empty or comment\n                if (!line || line.startsWith('#')) {\n                    continue;\n                }\n                // Pattern\n                else {\n                    result.patterns.push(new internal_pattern_1.Pattern(line));\n                }\n            }\n            result.searchPaths.push(...patternHelper.getSearchPaths(result.patterns));\n            return result;\n        });\n    }\n    static stat(item, options, traversalChain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Note:\n            // `stat` returns info about the target of a symlink (or symlink chain)\n            // `lstat` returns info about a symlink itself\n            let stats;\n            if (options.followSymbolicLinks) {\n                try {\n                    // Use `stat` (following symlinks)\n                    stats = yield fs.promises.stat(item.path);\n                }\n                catch (err) {\n                    if (err.code === 'ENOENT') {\n                        if (options.omitBrokenSymbolicLinks) {\n                            core.debug(`Broken symlink '${item.path}'`);\n                            return undefined;\n                        }\n                        throw new Error(`No information found for the path '${item.path}'. This may indicate a broken symbolic link.`);\n                    }\n                    throw err;\n                }\n            }\n            else {\n                // Use `lstat` (not following symlinks)\n                stats = yield fs.promises.lstat(item.path);\n            }\n            // Note, isDirectory() returns false for the lstat of a symlink\n            if (stats.isDirectory() && options.followSymbolicLinks) {\n                // Get the realpath\n                const realPath = yield fs.promises.realpath(item.path);\n                // Fixup the traversal chain to match the item level\n                while (traversalChain.length >= item.level) {\n                    traversalChain.pop();\n                }\n                // Test for a cycle\n                if (traversalChain.some((x) => x === realPath)) {\n                    core.debug(`Symlink cycle detected for path '${item.path}' and realpath '${realPath}'`);\n                    return undefined;\n                }\n                // Update the traversal chain\n                traversalChain.push(realPath);\n            }\n            return stats;\n        });\n    }\n}\nexports.DefaultGlobber = DefaultGlobber;\n//# sourceMappingURL=internal-globber.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashFiles = void 0;\nconst crypto = __importStar(require(\"crypto\"));\nconst core = __importStar(require(\"@actions/core\"));\nconst fs = __importStar(require(\"fs\"));\nconst stream = __importStar(require(\"stream\"));\nconst util = __importStar(require(\"util\"));\nconst path = __importStar(require(\"path\"));\nfunction hashFiles(globber) {\n    var e_1, _a;\n    var _b;\n    return __awaiter(this, void 0, void 0, function* () {\n        let hasMatch = false;\n        const githubWorkspace = (_b = process.env['GITHUB_WORKSPACE']) !== null && _b !== void 0 ? _b : process.cwd();\n        const result = crypto.createHash('sha256');\n        let count = 0;\n        try {\n            for (var _c = __asyncValues(globber.globGenerator()), _d; _d = yield _c.next(), !_d.done;) {\n                const file = _d.value;\n                core.debug(file);\n                if (!file.startsWith(`${githubWorkspace}${path.sep}`)) {\n                    core.debug(`Ignore '${file}' since it is not under GITHUB_WORKSPACE.`);\n                    continue;\n                }\n                if (fs.statSync(file).isDirectory()) {\n                    core.debug(`Skip directory '${file}'.`);\n                    continue;\n                }\n                const hash = crypto.createHash('sha256');\n                const pipeline = util.promisify(stream.pipeline);\n                yield pipeline(fs.createReadStream(file), hash);\n                result.write(hash.digest());\n                count++;\n                if (!hasMatch) {\n                    hasMatch = true;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) yield _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        result.end();\n        if (hasMatch) {\n            core.debug(`Found ${count} files to hash.`);\n            return result.digest('hex');\n        }\n        else {\n            core.debug(`No matches found for glob`);\n            return '';\n        }\n    });\n}\nexports.hashFiles = hashFiles;\n//# sourceMappingURL=internal-hash-files.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MatchKind = void 0;\n/**\n * Indicates whether a pattern matches a path\n */\nvar MatchKind;\n(function (MatchKind) {\n    /** Not matched */\n    MatchKind[MatchKind[\"None\"] = 0] = \"None\";\n    /** Matched if the path is a directory */\n    MatchKind[MatchKind[\"Directory\"] = 1] = \"Directory\";\n    /** Matched if the path is a regular file */\n    MatchKind[MatchKind[\"File\"] = 2] = \"File\";\n    /** Matched */\n    MatchKind[MatchKind[\"All\"] = 3] = \"All\";\n})(MatchKind = exports.MatchKind || (exports.MatchKind = {}));\n//# sourceMappingURL=internal-match-kind.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeTrimTrailingSeparator = exports.normalizeSeparators = exports.hasRoot = exports.hasAbsoluteRoot = exports.ensureAbsoluteRoot = exports.dirname = void 0;\nconst path = __importStar(require(\"path\"));\nconst assert_1 = __importDefault(require(\"assert\"));\nconst IS_WINDOWS = process.platform === 'win32';\n/**\n * Similar to path.dirname except normalizes the path separators and slightly better handling for Windows UNC paths.\n *\n * For example, on Linux/macOS:\n * - `/               => /`\n * - `/hello          => /`\n *\n * For example, on Windows:\n * - `C:\\             => C:\\`\n * - `C:\\hello        => C:\\`\n * - `C:              => C:`\n * - `C:hello         => C:`\n * - `\\               => \\`\n * - `\\hello          => \\`\n * - `\\\\hello         => \\\\hello`\n * - `\\\\hello\\world   => \\\\hello\\world`\n */\nfunction dirname(p) {\n    // Normalize slashes and trim unnecessary trailing slash\n    p = safeTrimTrailingSeparator(p);\n    // Windows UNC root, e.g. \\\\hello or \\\\hello\\world\n    if (IS_WINDOWS && /^\\\\\\\\[^\\\\]+(\\\\[^\\\\]+)?$/.test(p)) {\n        return p;\n    }\n    // Get dirname\n    let result = path.dirname(p);\n    // Trim trailing slash for Windows UNC root, e.g. \\\\hello\\world\\\n    if (IS_WINDOWS && /^\\\\\\\\[^\\\\]+\\\\[^\\\\]+\\\\$/.test(result)) {\n        result = safeTrimTrailingSeparator(result);\n    }\n    return result;\n}\nexports.dirname = dirname;\n/**\n * Roots the path if not already rooted. On Windows, relative roots like `\\`\n * or `C:` are expanded based on the current working directory.\n */\nfunction ensureAbsoluteRoot(root, itemPath) {\n    assert_1.default(root, `ensureAbsoluteRoot parameter 'root' must not be empty`);\n    assert_1.default(itemPath, `ensureAbsoluteRoot parameter 'itemPath' must not be empty`);\n    // Already rooted\n    if (hasAbsoluteRoot(itemPath)) {\n        return itemPath;\n    }\n    // Windows\n    if (IS_WINDOWS) {\n        // Check for itemPath like C: or C:foo\n        if (itemPath.match(/^[A-Z]:[^\\\\/]|^[A-Z]:$/i)) {\n            let cwd = process.cwd();\n            assert_1.default(cwd.match(/^[A-Z]:\\\\/i), `Expected current directory to start with an absolute drive root. Actual '${cwd}'`);\n            // Drive letter matches cwd? Expand to cwd\n            if (itemPath[0].toUpperCase() === cwd[0].toUpperCase()) {\n                // Drive only, e.g. C:\n                if (itemPath.length === 2) {\n                    // Preserve specified drive letter case (upper or lower)\n                    return `${itemPath[0]}:\\\\${cwd.substr(3)}`;\n                }\n                // Drive + path, e.g. C:foo\n                else {\n                    if (!cwd.endsWith('\\\\')) {\n                        cwd += '\\\\';\n                    }\n                    // Preserve specified drive letter case (upper or lower)\n                    return `${itemPath[0]}:\\\\${cwd.substr(3)}${itemPath.substr(2)}`;\n                }\n            }\n            // Different drive\n            else {\n                return `${itemPath[0]}:\\\\${itemPath.substr(2)}`;\n            }\n        }\n        // Check for itemPath like \\ or \\foo\n        else if (normalizeSeparators(itemPath).match(/^\\\\$|^\\\\[^\\\\]/)) {\n            const cwd = process.cwd();\n            assert_1.default(cwd.match(/^[A-Z]:\\\\/i), `Expected current directory to start with an absolute drive root. Actual '${cwd}'`);\n            return `${cwd[0]}:\\\\${itemPath.substr(1)}`;\n        }\n    }\n    assert_1.default(hasAbsoluteRoot(root), `ensureAbsoluteRoot parameter 'root' must have an absolute root`);\n    // Otherwise ensure root ends with a separator\n    if (root.endsWith('/') || (IS_WINDOWS && root.endsWith('\\\\'))) {\n        // Intentionally empty\n    }\n    else {\n        // Append separator\n        root += path.sep;\n    }\n    return root + itemPath;\n}\nexports.ensureAbsoluteRoot = ensureAbsoluteRoot;\n/**\n * On Linux/macOS, true if path starts with `/`. On Windows, true for paths like:\n * `\\\\hello\\share` and `C:\\hello` (and using alternate separator).\n */\nfunction hasAbsoluteRoot(itemPath) {\n    assert_1.default(itemPath, `hasAbsoluteRoot parameter 'itemPath' must not be empty`);\n    // Normalize separators\n    itemPath = normalizeSeparators(itemPath);\n    // Windows\n    if (IS_WINDOWS) {\n        // E.g. \\\\hello\\share or C:\\hello\n        return itemPath.startsWith('\\\\\\\\') || /^[A-Z]:\\\\/i.test(itemPath);\n    }\n    // E.g. /hello\n    return itemPath.startsWith('/');\n}\nexports.hasAbsoluteRoot = hasAbsoluteRoot;\n/**\n * On Linux/macOS, true if path starts with `/`. On Windows, true for paths like:\n * `\\`, `\\hello`, `\\\\hello\\share`, `C:`, and `C:\\hello` (and using alternate separator).\n */\nfunction hasRoot(itemPath) {\n    assert_1.default(itemPath, `isRooted parameter 'itemPath' must not be empty`);\n    // Normalize separators\n    itemPath = normalizeSeparators(itemPath);\n    // Windows\n    if (IS_WINDOWS) {\n        // E.g. \\ or \\hello or \\\\hello\n        // E.g. C: or C:\\hello\n        return itemPath.startsWith('\\\\') || /^[A-Z]:/i.test(itemPath);\n    }\n    // E.g. /hello\n    return itemPath.startsWith('/');\n}\nexports.hasRoot = hasRoot;\n/**\n * Removes redundant slashes and converts `/` to `\\` on Windows\n */\nfunction normalizeSeparators(p) {\n    p = p || '';\n    // Windows\n    if (IS_WINDOWS) {\n        // Convert slashes on Windows\n        p = p.replace(/\\//g, '\\\\');\n        // Remove redundant slashes\n        const isUnc = /^\\\\\\\\+[^\\\\]/.test(p); // e.g. \\\\hello\n        return (isUnc ? '\\\\' : '') + p.replace(/\\\\\\\\+/g, '\\\\'); // preserve leading \\\\ for UNC\n    }\n    // Remove redundant slashes\n    return p.replace(/\\/\\/+/g, '/');\n}\nexports.normalizeSeparators = normalizeSeparators;\n/**\n * Normalizes the path separators and trims the trailing separator (when safe).\n * For example, `/foo/ => /foo` but `/ => /`\n */\nfunction safeTrimTrailingSeparator(p) {\n    // Short-circuit if empty\n    if (!p) {\n        return '';\n    }\n    // Normalize separators\n    p = normalizeSeparators(p);\n    // No trailing slash\n    if (!p.endsWith(path.sep)) {\n        return p;\n    }\n    // Check '/' on Linux/macOS and '\\' on Windows\n    if (p === path.sep) {\n        return p;\n    }\n    // On Windows check if drive root. E.g. C:\\\n    if (IS_WINDOWS && /^[A-Z]:\\\\$/i.test(p)) {\n        return p;\n    }\n    // Otherwise trim trailing slash\n    return p.substr(0, p.length - 1);\n}\nexports.safeTrimTrailingSeparator = safeTrimTrailingSeparator;\n//# sourceMappingURL=internal-path-helper.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Path = void 0;\nconst path = __importStar(require(\"path\"));\nconst pathHelper = __importStar(require(\"./internal-path-helper\"));\nconst assert_1 = __importDefault(require(\"assert\"));\nconst IS_WINDOWS = process.platform === 'win32';\n/**\n * Helper class for parsing paths into segments\n */\nclass Path {\n    /**\n     * Constructs a Path\n     * @param itemPath Path or array of segments\n     */\n    constructor(itemPath) {\n        this.segments = [];\n        // String\n        if (typeof itemPath === 'string') {\n            assert_1.default(itemPath, `Parameter 'itemPath' must not be empty`);\n            // Normalize slashes and trim unnecessary trailing slash\n            itemPath = pathHelper.safeTrimTrailingSeparator(itemPath);\n            // Not rooted\n            if (!pathHelper.hasRoot(itemPath)) {\n                this.segments = itemPath.split(path.sep);\n            }\n            // Rooted\n            else {\n                // Add all segments, while not at the root\n                let remaining = itemPath;\n                let dir = pathHelper.dirname(remaining);\n                while (dir !== remaining) {\n                    // Add the segment\n                    const basename = path.basename(remaining);\n                    this.segments.unshift(basename);\n                    // Truncate the last segment\n                    remaining = dir;\n                    dir = pathHelper.dirname(remaining);\n                }\n                // Remainder is the root\n                this.segments.unshift(remaining);\n            }\n        }\n        // Array\n        else {\n            // Must not be empty\n            assert_1.default(itemPath.length > 0, `Parameter 'itemPath' must not be an empty array`);\n            // Each segment\n            for (let i = 0; i < itemPath.length; i++) {\n                let segment = itemPath[i];\n                // Must not be empty\n                assert_1.default(segment, `Parameter 'itemPath' must not contain any empty segments`);\n                // Normalize slashes\n                segment = pathHelper.normalizeSeparators(itemPath[i]);\n                // Root segment\n                if (i === 0 && pathHelper.hasRoot(segment)) {\n                    segment = pathHelper.safeTrimTrailingSeparator(segment);\n                    assert_1.default(segment === pathHelper.dirname(segment), `Parameter 'itemPath' root segment contains information for multiple segments`);\n                    this.segments.push(segment);\n                }\n                // All other segments\n                else {\n                    // Must not contain slash\n                    assert_1.default(!segment.includes(path.sep), `Parameter 'itemPath' contains unexpected path separators`);\n                    this.segments.push(segment);\n                }\n            }\n        }\n    }\n    /**\n     * Converts the path to it's string representation\n     */\n    toString() {\n        // First segment\n        let result = this.segments[0];\n        // All others\n        let skipSlash = result.endsWith(path.sep) || (IS_WINDOWS && /^[A-Z]:$/i.test(result));\n        for (let i = 1; i < this.segments.length; i++) {\n            if (skipSlash) {\n                skipSlash = false;\n            }\n            else {\n                result += path.sep;\n            }\n            result += this.segments[i];\n        }\n        return result;\n    }\n}\nexports.Path = Path;\n//# sourceMappingURL=internal-path.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.partialMatch = exports.match = exports.getSearchPaths = void 0;\nconst pathHelper = __importStar(require(\"./internal-path-helper\"));\nconst internal_match_kind_1 = require(\"./internal-match-kind\");\nconst IS_WINDOWS = process.platform === 'win32';\n/**\n * Given an array of patterns, returns an array of paths to search.\n * Duplicates and paths under other included paths are filtered out.\n */\nfunction getSearchPaths(patterns) {\n    // Ignore negate patterns\n    patterns = patterns.filter(x => !x.negate);\n    // Create a map of all search paths\n    const searchPathMap = {};\n    for (const pattern of patterns) {\n        const key = IS_WINDOWS\n            ? pattern.searchPath.toUpperCase()\n            : pattern.searchPath;\n        searchPathMap[key] = 'candidate';\n    }\n    const result = [];\n    for (const pattern of patterns) {\n        // Check if already included\n        const key = IS_WINDOWS\n            ? pattern.searchPath.toUpperCase()\n            : pattern.searchPath;\n        if (searchPathMap[key] === 'included') {\n            continue;\n        }\n        // Check for an ancestor search path\n        let foundAncestor = false;\n        let tempKey = key;\n        let parent = pathHelper.dirname(tempKey);\n        while (parent !== tempKey) {\n            if (searchPathMap[parent]) {\n                foundAncestor = true;\n                break;\n            }\n            tempKey = parent;\n            parent = pathHelper.dirname(tempKey);\n        }\n        // Include the search pattern in the result\n        if (!foundAncestor) {\n            result.push(pattern.searchPath);\n            searchPathMap[key] = 'included';\n        }\n    }\n    return result;\n}\nexports.getSearchPaths = getSearchPaths;\n/**\n * Matches the patterns against the path\n */\nfunction match(patterns, itemPath) {\n    let result = internal_match_kind_1.MatchKind.None;\n    for (const pattern of patterns) {\n        if (pattern.negate) {\n            result &= ~pattern.match(itemPath);\n        }\n        else {\n            result |= pattern.match(itemPath);\n        }\n    }\n    return result;\n}\nexports.match = match;\n/**\n * Checks whether to descend further into the directory\n */\nfunction partialMatch(patterns, itemPath) {\n    return patterns.some(x => !x.negate && x.partialMatch(itemPath));\n}\nexports.partialMatch = partialMatch;\n//# sourceMappingURL=internal-pattern-helper.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Pattern = void 0;\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\nconst pathHelper = __importStar(require(\"./internal-path-helper\"));\nconst assert_1 = __importDefault(require(\"assert\"));\nconst minimatch_1 = require(\"minimatch\");\nconst internal_match_kind_1 = require(\"./internal-match-kind\");\nconst internal_path_1 = require(\"./internal-path\");\nconst IS_WINDOWS = process.platform === 'win32';\nclass Pattern {\n    constructor(patternOrNegate, isImplicitPattern = false, segments, homedir) {\n        /**\n         * Indicates whether matches should be excluded from the result set\n         */\n        this.negate = false;\n        // Pattern overload\n        let pattern;\n        if (typeof patternOrNegate === 'string') {\n            pattern = patternOrNegate.trim();\n        }\n        // Segments overload\n        else {\n            // Convert to pattern\n            segments = segments || [];\n            assert_1.default(segments.length, `Parameter 'segments' must not empty`);\n            const root = Pattern.getLiteral(segments[0]);\n            assert_1.default(root && pathHelper.hasAbsoluteRoot(root), `Parameter 'segments' first element must be a root path`);\n            pattern = new internal_path_1.Path(segments).toString().trim();\n            if (patternOrNegate) {\n                pattern = `!${pattern}`;\n            }\n        }\n        // Negate\n        while (pattern.startsWith('!')) {\n            this.negate = !this.negate;\n            pattern = pattern.substr(1).trim();\n        }\n        // Normalize slashes and ensures absolute root\n        pattern = Pattern.fixupPattern(pattern, homedir);\n        // Segments\n        this.segments = new internal_path_1.Path(pattern).segments;\n        // Trailing slash indicates the pattern should only match directories, not regular files\n        this.trailingSeparator = pathHelper\n            .normalizeSeparators(pattern)\n            .endsWith(path.sep);\n        pattern = pathHelper.safeTrimTrailingSeparator(pattern);\n        // Search path (literal path prior to the first glob segment)\n        let foundGlob = false;\n        const searchSegments = this.segments\n            .map(x => Pattern.getLiteral(x))\n            .filter(x => !foundGlob && !(foundGlob = x === ''));\n        this.searchPath = new internal_path_1.Path(searchSegments).toString();\n        // Root RegExp (required when determining partial match)\n        this.rootRegExp = new RegExp(Pattern.regExpEscape(searchSegments[0]), IS_WINDOWS ? 'i' : '');\n        this.isImplicitPattern = isImplicitPattern;\n        // Create minimatch\n        const minimatchOptions = {\n            dot: true,\n            nobrace: true,\n            nocase: IS_WINDOWS,\n            nocomment: true,\n            noext: true,\n            nonegate: true\n        };\n        pattern = IS_WINDOWS ? pattern.replace(/\\\\/g, '/') : pattern;\n        this.minimatch = new minimatch_1.Minimatch(pattern, minimatchOptions);\n    }\n    /**\n     * Matches the pattern against the specified path\n     */\n    match(itemPath) {\n        // Last segment is globstar?\n        if (this.segments[this.segments.length - 1] === '**') {\n            // Normalize slashes\n            itemPath = pathHelper.normalizeSeparators(itemPath);\n            // Append a trailing slash. Otherwise Minimatch will not match the directory immediately\n            // preceding the globstar. For example, given the pattern `/foo/**`, Minimatch returns\n            // false for `/foo` but returns true for `/foo/`. Append a trailing slash to handle that quirk.\n            if (!itemPath.endsWith(path.sep) && this.isImplicitPattern === false) {\n                // Note, this is safe because the constructor ensures the pattern has an absolute root.\n                // For example, formats like C: and C:foo on Windows are resolved to an absolute root.\n                itemPath = `${itemPath}${path.sep}`;\n            }\n        }\n        else {\n            // Normalize slashes and trim unnecessary trailing slash\n            itemPath = pathHelper.safeTrimTrailingSeparator(itemPath);\n        }\n        // Match\n        if (this.minimatch.match(itemPath)) {\n            return this.trailingSeparator ? internal_match_kind_1.MatchKind.Directory : internal_match_kind_1.MatchKind.All;\n        }\n        return internal_match_kind_1.MatchKind.None;\n    }\n    /**\n     * Indicates whether the pattern may match descendants of the specified path\n     */\n    partialMatch(itemPath) {\n        // Normalize slashes and trim unnecessary trailing slash\n        itemPath = pathHelper.safeTrimTrailingSeparator(itemPath);\n        // matchOne does not handle root path correctly\n        if (pathHelper.dirname(itemPath) === itemPath) {\n            return this.rootRegExp.test(itemPath);\n        }\n        return this.minimatch.matchOne(itemPath.split(IS_WINDOWS ? /\\\\+/ : /\\/+/), this.minimatch.set[0], true);\n    }\n    /**\n     * Escapes glob patterns within a path\n     */\n    static globEscape(s) {\n        return (IS_WINDOWS ? s : s.replace(/\\\\/g, '\\\\\\\\')) // escape '\\' on Linux/macOS\n            .replace(/(\\[)(?=[^/]+\\])/g, '[[]') // escape '[' when ']' follows within the path segment\n            .replace(/\\?/g, '[?]') // escape '?'\n            .replace(/\\*/g, '[*]'); // escape '*'\n    }\n    /**\n     * Normalizes slashes and ensures absolute root\n     */\n    static fixupPattern(pattern, homedir) {\n        // Empty\n        assert_1.default(pattern, 'pattern cannot be empty');\n        // Must not contain `.` segment, unless first segment\n        // Must not contain `..` segment\n        const literalSegments = new internal_path_1.Path(pattern).segments.map(x => Pattern.getLiteral(x));\n        assert_1.default(literalSegments.every((x, i) => (x !== '.' || i === 0) && x !== '..'), `Invalid pattern '${pattern}'. Relative pathing '.' and '..' is not allowed.`);\n        // Must not contain globs in root, e.g. Windows UNC path \\\\foo\\b*r\n        assert_1.default(!pathHelper.hasRoot(pattern) || literalSegments[0], `Invalid pattern '${pattern}'. Root segment must not contain globs.`);\n        // Normalize slashes\n        pattern = pathHelper.normalizeSeparators(pattern);\n        // Replace leading `.` segment\n        if (pattern === '.' || pattern.startsWith(`.${path.sep}`)) {\n            pattern = Pattern.globEscape(process.cwd()) + pattern.substr(1);\n        }\n        // Replace leading `~` segment\n        else if (pattern === '~' || pattern.startsWith(`~${path.sep}`)) {\n            homedir = homedir || os.homedir();\n            assert_1.default(homedir, 'Unable to determine HOME directory');\n            assert_1.default(pathHelper.hasAbsoluteRoot(homedir), `Expected HOME directory to be a rooted path. Actual '${homedir}'`);\n            pattern = Pattern.globEscape(homedir) + pattern.substr(1);\n        }\n        // Replace relative drive root, e.g. pattern is C: or C:foo\n        else if (IS_WINDOWS &&\n            (pattern.match(/^[A-Z]:$/i) || pattern.match(/^[A-Z]:[^\\\\]/i))) {\n            let root = pathHelper.ensureAbsoluteRoot('C:\\\\dummy-root', pattern.substr(0, 2));\n            if (pattern.length > 2 && !root.endsWith('\\\\')) {\n                root += '\\\\';\n            }\n            pattern = Pattern.globEscape(root) + pattern.substr(2);\n        }\n        // Replace relative root, e.g. pattern is \\ or \\foo\n        else if (IS_WINDOWS && (pattern === '\\\\' || pattern.match(/^\\\\[^\\\\]/))) {\n            let root = pathHelper.ensureAbsoluteRoot('C:\\\\dummy-root', '\\\\');\n            if (!root.endsWith('\\\\')) {\n                root += '\\\\';\n            }\n            pattern = Pattern.globEscape(root) + pattern.substr(1);\n        }\n        // Otherwise ensure absolute root\n        else {\n            pattern = pathHelper.ensureAbsoluteRoot(Pattern.globEscape(process.cwd()), pattern);\n        }\n        return pathHelper.normalizeSeparators(pattern);\n    }\n    /**\n     * Attempts to unescape a pattern segment to create a literal path segment.\n     * Otherwise returns empty string.\n     */\n    static getLiteral(segment) {\n        let literal = '';\n        for (let i = 0; i < segment.length; i++) {\n            const c = segment[i];\n            // Escape\n            if (c === '\\\\' && !IS_WINDOWS && i + 1 < segment.length) {\n                literal += segment[++i];\n                continue;\n            }\n            // Wildcard\n            else if (c === '*' || c === '?') {\n                return '';\n            }\n            // Character set\n            else if (c === '[' && i + 1 < segment.length) {\n                let set = '';\n                let closed = -1;\n                for (let i2 = i + 1; i2 < segment.length; i2++) {\n                    const c2 = segment[i2];\n                    // Escape\n                    if (c2 === '\\\\' && !IS_WINDOWS && i2 + 1 < segment.length) {\n                        set += segment[++i2];\n                        continue;\n                    }\n                    // Closed\n                    else if (c2 === ']') {\n                        closed = i2;\n                        break;\n                    }\n                    // Otherwise\n                    else {\n                        set += c2;\n                    }\n                }\n                // Closed?\n                if (closed >= 0) {\n                    // Cannot convert\n                    if (set.length > 1) {\n                        return '';\n                    }\n                    // Convert to literal\n                    if (set) {\n                        literal += set;\n                        i = closed;\n                        continue;\n                    }\n                }\n                // Otherwise fall thru\n            }\n            // Append\n            literal += c;\n        }\n        return literal;\n    }\n    /**\n     * Escapes regexp special characters\n     * https://javascript.info/regexp-escaping\n     */\n    static regExpEscape(s) {\n        return s.replace(/[[\\\\^$.|?*+()]/g, '\\\\$&');\n    }\n}\nexports.Pattern = Pattern;\n//# sourceMappingURL=internal-pattern.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SearchState = void 0;\nclass SearchState {\n    constructor(path, level) {\n        this.path = path;\n        this.level = level;\n    }\n}\nexports.SearchState = SearchState;\n//# sourceMappingURL=internal-search-state.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BasicCredentialHandler {\n    constructor(username, password) {\n        this.username = username;\n        this.password = password;\n    }\n    prepareRequest(options) {\n        options.headers['Authorization'] =\n            'Basic ' +\n                Buffer.from(this.username + ':' + this.password).toString('base64');\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication(response) {\n        return false;\n    }\n    handleAuthentication(httpClient, requestInfo, objs) {\n        return null;\n    }\n}\nexports.BasicCredentialHandler = BasicCredentialHandler;\nclass BearerCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        options.headers['Authorization'] = 'Bearer ' + this.token;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication(response) {\n        return false;\n    }\n    handleAuthentication(httpClient, requestInfo, objs) {\n        return null;\n    }\n}\nexports.BearerCredentialHandler = BearerCredentialHandler;\nclass PersonalAccessTokenCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        options.headers['Authorization'] =\n            'Basic ' + Buffer.from('PAT:' + this.token).toString('base64');\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication(response) {\n        return false;\n    }\n    handleAuthentication(httpClient, requestInfo, objs) {\n        return null;\n    }\n}\nexports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst pm = require(\"./proxy\");\nlet tunnel;\nvar HttpCodes;\n(function (HttpCodes) {\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\nvar Headers;\n(function (Headers) {\n    Headers[\"Accept\"] = \"accept\";\n    Headers[\"ContentType\"] = \"content-type\";\n})(Headers = exports.Headers || (exports.Headers = {}));\nvar MediaTypes;\n(function (MediaTypes) {\n    MediaTypes[\"ApplicationJson\"] = \"application/json\";\n})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n/**\n * Returns the proxy URL, depending upon the supplied url and proxy environment variables.\n * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n */\nfunction getProxyUrl(serverUrl) {\n    let proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : '';\n}\nexports.getProxyUrl = getProxyUrl;\nconst HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n];\nconst HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n];\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\nconst ExponentialBackoffCeiling = 10;\nconst ExponentialBackoffTimeSlice = 5;\nclass HttpClientError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = 'HttpClientError';\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n}\nexports.HttpClientError = HttpClientError;\nclass HttpClientResponse {\n    constructor(message) {\n        this.message = message;\n    }\n    readBody() {\n        return new Promise(async (resolve, reject) => {\n            let output = Buffer.alloc(0);\n            this.message.on('data', (chunk) => {\n                output = Buffer.concat([output, chunk]);\n            });\n            this.message.on('end', () => {\n                resolve(output.toString());\n            });\n        });\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\nfunction isHttps(requestUrl) {\n    let parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === 'https:';\n}\nexports.isHttps = isHttps;\nclass HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n        this._ignoreSslError = false;\n        this._allowRedirects = true;\n        this._allowRedirectDowngrade = false;\n        this._maxRedirects = 50;\n        this._allowRetries = false;\n        this._maxRetries = 1;\n        this._keepAlive = false;\n        this._disposed = false;\n        this.userAgent = userAgent;\n        this.handlers = handlers || [];\n        this.requestOptions = requestOptions;\n        if (requestOptions) {\n            if (requestOptions.ignoreSslError != null) {\n                this._ignoreSslError = requestOptions.ignoreSslError;\n            }\n            this._socketTimeout = requestOptions.socketTimeout;\n            if (requestOptions.allowRedirects != null) {\n                this._allowRedirects = requestOptions.allowRedirects;\n            }\n            if (requestOptions.allowRedirectDowngrade != null) {\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n            }\n            if (requestOptions.maxRedirects != null) {\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n            }\n            if (requestOptions.keepAlive != null) {\n                this._keepAlive = requestOptions.keepAlive;\n            }\n            if (requestOptions.allowRetries != null) {\n                this._allowRetries = requestOptions.allowRetries;\n            }\n            if (requestOptions.maxRetries != null) {\n                this._maxRetries = requestOptions.maxRetries;\n            }\n        }\n    }\n    options(requestUrl, additionalHeaders) {\n        return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\n    }\n    get(requestUrl, additionalHeaders) {\n        return this.request('GET', requestUrl, null, additionalHeaders || {});\n    }\n    del(requestUrl, additionalHeaders) {\n        return this.request('DELETE', requestUrl, null, additionalHeaders || {});\n    }\n    post(requestUrl, data, additionalHeaders) {\n        return this.request('POST', requestUrl, data, additionalHeaders || {});\n    }\n    patch(requestUrl, data, additionalHeaders) {\n        return this.request('PATCH', requestUrl, data, additionalHeaders || {});\n    }\n    put(requestUrl, data, additionalHeaders) {\n        return this.request('PUT', requestUrl, data, additionalHeaders || {});\n    }\n    head(requestUrl, additionalHeaders) {\n        return this.request('HEAD', requestUrl, null, additionalHeaders || {});\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n        return this.request(verb, requestUrl, stream, additionalHeaders);\n    }\n    /**\n     * Gets a typed object from an endpoint\n     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise\n     */\n    async getJson(requestUrl, additionalHeaders = {}) {\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        let res = await this.get(requestUrl, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async postJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.post(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async putJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.put(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async patchJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.patch(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    /**\n     * Makes a raw http request.\n     * All other methods such as get, post, patch, and request ultimately call this.\n     * Prefer get, del, post and patch\n     */\n    async request(verb, requestUrl, data, headers) {\n        if (this._disposed) {\n            throw new Error('Client has already been disposed.');\n        }\n        let parsedUrl = new URL(requestUrl);\n        let info = this._prepareRequest(verb, parsedUrl, headers);\n        // Only perform retries on reads since writes may not be idempotent.\n        let maxTries = this._allowRetries && RetryableHttpVerbs.indexOf(verb) != -1\n            ? this._maxRetries + 1\n            : 1;\n        let numTries = 0;\n        let response;\n        while (numTries < maxTries) {\n            response = await this.requestRaw(info, data);\n            // Check if it's an authentication challenge\n            if (response &&\n                response.message &&\n                response.message.statusCode === HttpCodes.Unauthorized) {\n                let authenticationHandler;\n                for (let i = 0; i < this.handlers.length; i++) {\n                    if (this.handlers[i].canHandleAuthentication(response)) {\n                        authenticationHandler = this.handlers[i];\n                        break;\n                    }\n                }\n                if (authenticationHandler) {\n                    return authenticationHandler.handleAuthentication(this, info, data);\n                }\n                else {\n                    // We have received an unauthorized response but have no handlers to handle it.\n                    // Let the response return to the caller.\n                    return response;\n                }\n            }\n            let redirectsRemaining = this._maxRedirects;\n            while (HttpRedirectCodes.indexOf(response.message.statusCode) != -1 &&\n                this._allowRedirects &&\n                redirectsRemaining > 0) {\n                const redirectUrl = response.message.headers['location'];\n                if (!redirectUrl) {\n                    // if there's no location to redirect to, we won't\n                    break;\n                }\n                let parsedRedirectUrl = new URL(redirectUrl);\n                if (parsedUrl.protocol == 'https:' &&\n                    parsedUrl.protocol != parsedRedirectUrl.protocol &&\n                    !this._allowRedirectDowngrade) {\n                    throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');\n                }\n                // we need to finish reading the response before reassigning response\n                // which will leak the open socket.\n                await response.readBody();\n                // strip authorization header if redirected to a different hostname\n                if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n                    for (let header in headers) {\n                        // header names are case insensitive\n                        if (header.toLowerCase() === 'authorization') {\n                            delete headers[header];\n                        }\n                    }\n                }\n                // let's make the request with the new redirectUrl\n                info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n                response = await this.requestRaw(info, data);\n                redirectsRemaining--;\n            }\n            if (HttpResponseRetryCodes.indexOf(response.message.statusCode) == -1) {\n                // If not a retry code, return immediately instead of retrying\n                return response;\n            }\n            numTries += 1;\n            if (numTries < maxTries) {\n                await response.readBody();\n                await this._performExponentialBackoff(numTries);\n            }\n        }\n        return response;\n    }\n    /**\n     * Needs to be called if keepAlive is set to true in request options.\n     */\n    dispose() {\n        if (this._agent) {\n            this._agent.destroy();\n        }\n        this._disposed = true;\n    }\n    /**\n     * Raw request.\n     * @param info\n     * @param data\n     */\n    requestRaw(info, data) {\n        return new Promise((resolve, reject) => {\n            let callbackForResult = function (err, res) {\n                if (err) {\n                    reject(err);\n                }\n                resolve(res);\n            };\n            this.requestRawWithCallback(info, data, callbackForResult);\n        });\n    }\n    /**\n     * Raw request with callback.\n     * @param info\n     * @param data\n     * @param onResult\n     */\n    requestRawWithCallback(info, data, onResult) {\n        let socket;\n        if (typeof data === 'string') {\n            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n        }\n        let callbackCalled = false;\n        let handleResult = (err, res) => {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                onResult(err, res);\n            }\n        };\n        let req = info.httpModule.request(info.options, (msg) => {\n            let res = new HttpClientResponse(msg);\n            handleResult(null, res);\n        });\n        req.on('socket', sock => {\n            socket = sock;\n        });\n        // If we ever get disconnected, we want the socket to timeout eventually\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n            if (socket) {\n                socket.end();\n            }\n            handleResult(new Error('Request timeout: ' + info.options.path), null);\n        });\n        req.on('error', function (err) {\n            // err has statusCode property\n            // res should have headers\n            handleResult(err, null);\n        });\n        if (data && typeof data === 'string') {\n            req.write(data, 'utf8');\n        }\n        if (data && typeof data !== 'string') {\n            data.on('close', function () {\n                req.end();\n            });\n            data.pipe(req);\n        }\n        else {\n            req.end();\n        }\n    }\n    /**\n     * Gets an http agent. This function is useful when you need an http agent that handles\n     * routing through a proxy server - depending upon the url and proxy environment variables.\n     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n     */\n    getAgent(serverUrl) {\n        let parsedUrl = new URL(serverUrl);\n        return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n        const info = {};\n        info.parsedUrl = requestUrl;\n        const usingSsl = info.parsedUrl.protocol === 'https:';\n        info.httpModule = usingSsl ? https : http;\n        const defaultPort = usingSsl ? 443 : 80;\n        info.options = {};\n        info.options.host = info.parsedUrl.hostname;\n        info.options.port = info.parsedUrl.port\n            ? parseInt(info.parsedUrl.port)\n            : defaultPort;\n        info.options.path =\n            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\n        info.options.method = method;\n        info.options.headers = this._mergeHeaders(headers);\n        if (this.userAgent != null) {\n            info.options.headers['user-agent'] = this.userAgent;\n        }\n        info.options.agent = this._getAgent(info.parsedUrl);\n        // gives handlers an opportunity to participate\n        if (this.handlers) {\n            this.handlers.forEach(handler => {\n                handler.prepareRequest(info.options);\n            });\n        }\n        return info;\n    }\n    _mergeHeaders(headers) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        if (this.requestOptions && this.requestOptions.headers) {\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers));\n        }\n        return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        let clientHeader;\n        if (this.requestOptions && this.requestOptions.headers) {\n            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n        }\n        return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n        let agent;\n        let proxyUrl = pm.getProxyUrl(parsedUrl);\n        let useProxy = proxyUrl && proxyUrl.hostname;\n        if (this._keepAlive && useProxy) {\n            agent = this._proxyAgent;\n        }\n        if (this._keepAlive && !useProxy) {\n            agent = this._agent;\n        }\n        // if agent is already assigned use that agent.\n        if (!!agent) {\n            return agent;\n        }\n        const usingSsl = parsedUrl.protocol === 'https:';\n        let maxSockets = 100;\n        if (!!this.requestOptions) {\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n        }\n        if (useProxy) {\n            // If using proxy, need tunnel\n            if (!tunnel) {\n                tunnel = require('tunnel');\n            }\n            const agentOptions = {\n                maxSockets: maxSockets,\n                keepAlive: this._keepAlive,\n                proxy: {\n                    ...((proxyUrl.username || proxyUrl.password) && {\n                        proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`\n                    }),\n                    host: proxyUrl.hostname,\n                    port: proxyUrl.port\n                }\n            };\n            let tunnelAgent;\n            const overHttps = proxyUrl.protocol === 'https:';\n            if (usingSsl) {\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n            }\n            else {\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n            }\n            agent = tunnelAgent(agentOptions);\n            this._proxyAgent = agent;\n        }\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\n        if (this._keepAlive && !agent) {\n            const options = { keepAlive: this._keepAlive, maxSockets: maxSockets };\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n            this._agent = agent;\n        }\n        // if not using private agent and tunnel agent isn't setup then use global agent\n        if (!agent) {\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\n        }\n        if (usingSsl && this._ignoreSslError) {\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\n            // we have to cast it to any and change it directly\n            agent.options = Object.assign(agent.options || {}, {\n                rejectUnauthorized: false\n            });\n        }\n        return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n        retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n        const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n        return new Promise(resolve => setTimeout(() => resolve(), ms));\n    }\n    static dateTimeDeserializer(key, value) {\n        if (typeof value === 'string') {\n            let a = new Date(value);\n            if (!isNaN(a.valueOf())) {\n                return a;\n            }\n        }\n        return value;\n    }\n    async _processResponse(res, options) {\n        return new Promise(async (resolve, reject) => {\n            const statusCode = res.message.statusCode;\n            const response = {\n                statusCode: statusCode,\n                result: null,\n                headers: {}\n            };\n            // not found leads to null obj returned\n            if (statusCode == HttpCodes.NotFound) {\n                resolve(response);\n            }\n            let obj;\n            let contents;\n            // get the result from the body\n            try {\n                contents = await res.readBody();\n                if (contents && contents.length > 0) {\n                    if (options && options.deserializeDates) {\n                        obj = JSON.parse(contents, HttpClient.dateTimeDeserializer);\n                    }\n                    else {\n                        obj = JSON.parse(contents);\n                    }\n                    response.result = obj;\n                }\n                response.headers = res.message.headers;\n            }\n            catch (err) {\n                // Invalid resource (contents not json);  leaving result obj null\n            }\n            // note that 3xx redirects are handled by the http layer.\n            if (statusCode > 299) {\n                let msg;\n                // if exception/error in body, attempt to get better error\n                if (obj && obj.message) {\n                    msg = obj.message;\n                }\n                else if (contents && contents.length > 0) {\n                    // it may be the case that the exception is in the body message as string\n                    msg = contents;\n                }\n                else {\n                    msg = 'Failed request: (' + statusCode + ')';\n                }\n                let err = new HttpClientError(msg, statusCode);\n                err.result = response.result;\n                reject(err);\n            }\n            else {\n                resolve(response);\n            }\n        });\n    }\n}\nexports.HttpClient = HttpClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getProxyUrl(reqUrl) {\n    let usingSsl = reqUrl.protocol === 'https:';\n    let proxyUrl;\n    if (checkBypass(reqUrl)) {\n        return proxyUrl;\n    }\n    let proxyVar;\n    if (usingSsl) {\n        proxyVar = process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n    }\n    else {\n        proxyVar = process.env['http_proxy'] || process.env['HTTP_PROXY'];\n    }\n    if (proxyVar) {\n        proxyUrl = new URL(proxyVar);\n    }\n    return proxyUrl;\n}\nexports.getProxyUrl = getProxyUrl;\nfunction checkBypass(reqUrl) {\n    if (!reqUrl.hostname) {\n        return false;\n    }\n    let noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';\n    if (!noProxy) {\n        return false;\n    }\n    // Determine the request port\n    let reqPort;\n    if (reqUrl.port) {\n        reqPort = Number(reqUrl.port);\n    }\n    else if (reqUrl.protocol === 'http:') {\n        reqPort = 80;\n    }\n    else if (reqUrl.protocol === 'https:') {\n        reqPort = 443;\n    }\n    // Format the request hostname and hostname with port\n    let upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === 'number') {\n        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    // Compare request host against noproxy\n    for (let upperNoProxyItem of noProxy\n        .split(',')\n        .map(x => x.trim().toUpperCase())\n        .filter(x => x)) {\n        if (upperReqHosts.some(x => x === upperNoProxyItem)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkBypass = checkBypass;\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.boolean = void 0;\nconst boolean = function (value) {\n    switch (Object.prototype.toString.call(value)) {\n        case '[object String]':\n            return ['true', 't', 'yes', 'y', 'on', '1'].includes(value.trim().toLowerCase());\n        case '[object Number]':\n            return value.valueOf() === 1;\n        case '[object Boolean]':\n            return value.valueOf();\n        default:\n            return false;\n    }\n};\nexports.boolean = boolean;\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","// Only Node.JS has a process variable that is of [[Class]] process\nmodule.exports = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _extendableBuiltin(cls) {\n  function ExtendableBuiltin() {\n    cls.apply(this, arguments);\n  }\n\n  ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n    constructor: {\n      value: cls,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(ExtendableBuiltin, cls);\n  } else {\n    ExtendableBuiltin.__proto__ = cls;\n  }\n\n  return ExtendableBuiltin;\n}\n\nvar ExtendableError = function (_extendableBuiltin2) {\n  _inherits(ExtendableError, _extendableBuiltin2);\n\n  function ExtendableError() {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    _classCallCheck(this, ExtendableError);\n\n    // extending Error is weird and does not propagate `message`\n    var _this = _possibleConstructorReturn(this, (ExtendableError.__proto__ || Object.getPrototypeOf(ExtendableError)).call(this, message));\n\n    Object.defineProperty(_this, 'message', {\n      configurable: true,\n      enumerable: false,\n      value: message,\n      writable: true\n    });\n\n    Object.defineProperty(_this, 'name', {\n      configurable: true,\n      enumerable: false,\n      value: _this.constructor.name,\n      writable: true\n    });\n\n    if (Error.hasOwnProperty('captureStackTrace')) {\n      Error.captureStackTrace(_this, _this.constructor);\n      return _possibleConstructorReturn(_this);\n    }\n\n    Object.defineProperty(_this, 'stack', {\n      configurable: true,\n      enumerable: false,\n      value: new Error(message).stack,\n      writable: true\n    });\n    return _this;\n  }\n\n  return ExtendableError;\n}(_extendableBuiltin(Error));\n\nexports.default = ExtendableError;\nmodule.exports = exports['default'];\n","require('./dist/index').bootstrap();\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _roarr = _interopRequireDefault(require(\"roarr\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Logger = _roarr.default.child({\n  package: 'global-agent'\n});\n\nvar _default = Logger;\nexports.default = _default;\n//# sourceMappingURL=Logger.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _serializeError = require(\"serialize-error\");\n\nvar _boolean = require(\"boolean\");\n\nvar _Logger = _interopRequireDefault(require(\"../Logger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst log = _Logger.default.child({\n  namespace: 'Agent'\n});\n\nlet requestId = 0;\n\nclass Agent {\n  constructor(isProxyConfigured, mustUrlUseProxy, getUrlProxy, fallbackAgent, socketConnectionTimeout) {\n    this.fallbackAgent = fallbackAgent;\n    this.isProxyConfigured = isProxyConfigured;\n    this.mustUrlUseProxy = mustUrlUseProxy;\n    this.getUrlProxy = getUrlProxy;\n    this.socketConnectionTimeout = socketConnectionTimeout;\n  }\n\n  addRequest(request, configuration) {\n    let requestUrl; // It is possible that addRequest was constructed for a proxied request already, e.g.\n    // \"request\" package does this when it detects that a proxy should be used\n    // https://github.com/request/request/blob/212570b6971a732b8dd9f3c73354bcdda158a737/request.js#L402\n    // https://gist.github.com/gajus/e2074cd3b747864ffeaabbd530d30218\n\n    if (request.path.startsWith('http://') || request.path.startsWith('https://')) {\n      requestUrl = request.path;\n    } else {\n      requestUrl = this.protocol + '//' + (configuration.hostname || configuration.host) + (configuration.port === 80 || configuration.port === 443 ? '' : ':' + configuration.port) + request.path;\n    }\n\n    if (!this.isProxyConfigured()) {\n      log.trace({\n        destination: requestUrl\n      }, 'not proxying request; GLOBAL_AGENT.HTTP_PROXY is not configured'); // $FlowFixMe It appears that Flow is missing the method description.\n\n      this.fallbackAgent.addRequest(request, configuration);\n      return;\n    }\n\n    if (!this.mustUrlUseProxy(requestUrl)) {\n      log.trace({\n        destination: requestUrl\n      }, 'not proxying request; url matches GLOBAL_AGENT.NO_PROXY'); // $FlowFixMe It appears that Flow is missing the method description.\n\n      this.fallbackAgent.addRequest(request, configuration);\n      return;\n    }\n\n    const currentRequestId = requestId++;\n    const proxy = this.getUrlProxy(requestUrl);\n\n    if (this.protocol === 'http:') {\n      request.path = requestUrl;\n\n      if (proxy.authorization) {\n        request.setHeader('proxy-authorization', 'Basic ' + Buffer.from(proxy.authorization).toString('base64'));\n      }\n    }\n\n    log.trace({\n      destination: requestUrl,\n      proxy: 'http://' + proxy.hostname + ':' + proxy.port,\n      requestId: currentRequestId\n    }, 'proxying request');\n    request.on('error', error => {\n      log.error({\n        error: (0, _serializeError.serializeError)(error)\n      }, 'request error');\n    });\n    request.once('response', response => {\n      log.trace({\n        headers: response.headers,\n        requestId: currentRequestId,\n        statusCode: response.statusCode\n      }, 'proxying response');\n    });\n    request.shouldKeepAlive = false;\n    const connectionConfiguration = {\n      host: configuration.hostname || configuration.host,\n      port: configuration.port || 80,\n      proxy,\n      tls: {}\n    }; // add optional tls options for https requests.\n    // @see https://nodejs.org/docs/latest-v12.x/api/https.html#https_https_request_url_options_callback :\n    // > The following additional options from tls.connect()\n    // >   - https://nodejs.org/docs/latest-v12.x/api/tls.html#tls_tls_connect_options_callback -\n    // > are also accepted:\n    // >   ca, cert, ciphers, clientCertEngine, crl, dhparam, ecdhCurve, honorCipherOrder,\n    // >   key, passphrase, pfx, rejectUnauthorized, secureOptions, secureProtocol, servername, sessionIdContext.\n\n    if (this.protocol === 'https:') {\n      connectionConfiguration.tls = {\n        ca: configuration.ca,\n        cert: configuration.cert,\n        ciphers: configuration.ciphers,\n        clientCertEngine: configuration.clientCertEngine,\n        crl: configuration.crl,\n        dhparam: configuration.dhparam,\n        ecdhCurve: configuration.ecdhCurve,\n        honorCipherOrder: configuration.honorCipherOrder,\n        key: configuration.key,\n        passphrase: configuration.passphrase,\n        pfx: configuration.pfx,\n        rejectUnauthorized: configuration.rejectUnauthorized,\n        secureOptions: configuration.secureOptions,\n        secureProtocol: configuration.secureProtocol,\n        servername: configuration.servername || connectionConfiguration.host,\n        sessionIdContext: configuration.sessionIdContext\n      }; // This is not ideal because there is no way to override this setting using `tls` configuration if `NODE_TLS_REJECT_UNAUTHORIZED=0`.\n      // However, popular HTTP clients (such as https://github.com/sindresorhus/got) come with pre-configured value for `rejectUnauthorized`,\n      // which makes it impossible to override that value globally and respect `rejectUnauthorized` for specific requests only.\n      //\n      // eslint-disable-next-line no-process-env\n\n      if (typeof process.env.NODE_TLS_REJECT_UNAUTHORIZED === 'string' && (0, _boolean.boolean)(process.env.NODE_TLS_REJECT_UNAUTHORIZED) === false) {\n        connectionConfiguration.tls.rejectUnauthorized = false;\n      }\n    } // $FlowFixMe It appears that Flow is missing the method description.\n\n\n    this.createConnection(connectionConfiguration, (error, socket) => {\n      log.trace({\n        target: connectionConfiguration\n      }, 'connecting'); // @see https://github.com/nodejs/node/issues/5757#issuecomment-305969057\n\n      if (socket) {\n        socket.setTimeout(this.socketConnectionTimeout, () => {\n          socket.destroy();\n        });\n        socket.once('connect', () => {\n          log.trace({\n            target: connectionConfiguration\n          }, 'connected');\n          socket.setTimeout(0);\n        });\n        socket.once('secureConnect', () => {\n          log.trace({\n            target: connectionConfiguration\n          }, 'connected (secure)');\n          socket.setTimeout(0);\n        });\n      }\n\n      if (error) {\n        request.emit('error', error);\n      } else {\n        log.debug('created socket');\n        socket.on('error', socketError => {\n          log.error({\n            error: (0, _serializeError.serializeError)(socketError)\n          }, 'socket error');\n        });\n        request.onSocket(socket);\n      }\n    });\n  }\n\n}\n\nvar _default = Agent;\nexports.default = _default;\n//# sourceMappingURL=Agent.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _net = _interopRequireDefault(require(\"net\"));\n\nvar _Agent = _interopRequireDefault(require(\"./Agent\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass HttpProxyAgent extends _Agent.default {\n  // @see https://github.com/sindresorhus/eslint-plugin-unicorn/issues/169#issuecomment-486980290\n  // eslint-disable-next-line unicorn/prevent-abbreviations\n  constructor(...args) {\n    super(...args);\n    this.protocol = 'http:';\n    this.defaultPort = 80;\n  }\n\n  createConnection(configuration, callback) {\n    const socket = _net.default.connect(configuration.proxy.port, configuration.proxy.hostname);\n\n    callback(null, socket);\n  }\n\n}\n\nvar _default = HttpProxyAgent;\nexports.default = _default;\n//# sourceMappingURL=HttpProxyAgent.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _net = _interopRequireDefault(require(\"net\"));\n\nvar _tls = _interopRequireDefault(require(\"tls\"));\n\nvar _Agent = _interopRequireDefault(require(\"./Agent\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass HttpsProxyAgent extends _Agent.default {\n  // eslint-disable-next-line unicorn/prevent-abbreviations\n  constructor(...args) {\n    super(...args);\n    this.protocol = 'https:';\n    this.defaultPort = 443;\n  }\n\n  createConnection(configuration, callback) {\n    const socket = _net.default.connect(configuration.proxy.port, configuration.proxy.hostname);\n\n    socket.on('error', error => {\n      callback(error);\n    });\n    socket.once('data', () => {\n      const secureSocket = _tls.default.connect({ ...configuration.tls,\n        socket\n      });\n\n      callback(null, secureSocket);\n    });\n    let connectMessage = '';\n    connectMessage += 'CONNECT ' + configuration.host + ':' + configuration.port + ' HTTP/1.1\\r\\n';\n    connectMessage += 'Host: ' + configuration.host + ':' + configuration.port + '\\r\\n';\n\n    if (configuration.proxy.authorization) {\n      connectMessage += 'Proxy-Authorization: Basic ' + Buffer.from(configuration.proxy.authorization).toString('base64') + '\\r\\n';\n    }\n\n    connectMessage += '\\r\\n';\n    socket.write(connectMessage);\n  }\n\n}\n\nvar _default = HttpsProxyAgent;\nexports.default = _default;\n//# sourceMappingURL=HttpsProxyAgent.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Agent\", {\n  enumerable: true,\n  get: function () {\n    return _Agent.default;\n  }\n});\nObject.defineProperty(exports, \"HttpProxyAgent\", {\n  enumerable: true,\n  get: function () {\n    return _HttpProxyAgent.default;\n  }\n});\nObject.defineProperty(exports, \"HttpsProxyAgent\", {\n  enumerable: true,\n  get: function () {\n    return _HttpsProxyAgent.default;\n  }\n});\n\nvar _Agent = _interopRequireDefault(require(\"./Agent\"));\n\nvar _HttpProxyAgent = _interopRequireDefault(require(\"./HttpProxyAgent\"));\n\nvar _HttpsProxyAgent = _interopRequireDefault(require(\"./HttpsProxyAgent\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnexpectedStateError = void 0;\n\nvar _es6Error = _interopRequireDefault(require(\"es6-error\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable fp/no-class, fp/no-this */\nclass UnexpectedStateError extends _es6Error.default {\n  constructor(message, code = 'UNEXPECTED_STATE_ERROR') {\n    super(message);\n    this.code = code;\n  }\n\n}\n\nexports.UnexpectedStateError = UnexpectedStateError;\n//# sourceMappingURL=errors.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _https = _interopRequireDefault(require(\"https\"));\n\nvar _boolean = require(\"boolean\");\n\nvar _semver = _interopRequireDefault(require(\"semver\"));\n\nvar _Logger = _interopRequireDefault(require(\"../Logger\"));\n\nvar _classes = require(\"../classes\");\n\nvar _errors = require(\"../errors\");\n\nvar _utilities = require(\"../utilities\");\n\nvar _createProxyController = _interopRequireDefault(require(\"./createProxyController\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst httpGet = _http.default.get;\nconst httpRequest = _http.default.request;\nconst httpsGet = _https.default.get;\nconst httpsRequest = _https.default.request;\n\nconst log = _Logger.default.child({\n  namespace: 'createGlobalProxyAgent'\n});\n\nconst defaultConfigurationInput = {\n  environmentVariableNamespace: undefined,\n  forceGlobalAgent: undefined,\n  socketConnectionTimeout: 60000\n};\n\nconst omitUndefined = subject => {\n  const keys = Object.keys(subject);\n  const result = {};\n\n  for (const key of keys) {\n    const value = subject[key];\n\n    if (value !== undefined) {\n      result[key] = value;\n    }\n  }\n\n  return result;\n};\n\nconst createConfiguration = configurationInput => {\n  // eslint-disable-next-line no-process-env\n  const environment = process.env;\n  const defaultConfiguration = {\n    environmentVariableNamespace: typeof environment.GLOBAL_AGENT_ENVIRONMENT_VARIABLE_NAMESPACE === 'string' ? environment.GLOBAL_AGENT_ENVIRONMENT_VARIABLE_NAMESPACE : 'GLOBAL_AGENT_',\n    forceGlobalAgent: typeof environment.GLOBAL_AGENT_FORCE_GLOBAL_AGENT === 'string' ? (0, _boolean.boolean)(environment.GLOBAL_AGENT_FORCE_GLOBAL_AGENT) : true,\n    socketConnectionTimeout: typeof environment.GLOBAL_AGENT_SOCKET_CONNECTION_TIMEOUT === 'string' ? Number.parseInt(environment.GLOBAL_AGENT_SOCKET_CONNECTION_TIMEOUT, 10) : defaultConfigurationInput.socketConnectionTimeout\n  }; // $FlowFixMe\n\n  return { ...defaultConfiguration,\n    ...omitUndefined(configurationInput)\n  };\n};\n\nconst createGlobalProxyAgent = (configurationInput = defaultConfigurationInput) => {\n  const configuration = createConfiguration(configurationInput);\n  const proxyController = (0, _createProxyController.default)(); // eslint-disable-next-line no-process-env\n\n  proxyController.HTTP_PROXY = process.env[configuration.environmentVariableNamespace + 'HTTP_PROXY'] || null; // eslint-disable-next-line no-process-env\n\n  proxyController.HTTPS_PROXY = process.env[configuration.environmentVariableNamespace + 'HTTPS_PROXY'] || null; // eslint-disable-next-line no-process-env\n\n  proxyController.NO_PROXY = process.env[configuration.environmentVariableNamespace + 'NO_PROXY'] || null;\n  log.info({\n    configuration,\n    state: proxyController\n  }, 'global agent has been initialized');\n\n  const mustUrlUseProxy = getProxy => {\n    return url => {\n      if (!getProxy()) {\n        return false;\n      }\n\n      if (!proxyController.NO_PROXY) {\n        return true;\n      }\n\n      return !(0, _utilities.isUrlMatchingNoProxy)(url, proxyController.NO_PROXY);\n    };\n  };\n\n  const getUrlProxy = getProxy => {\n    return () => {\n      const proxy = getProxy();\n\n      if (!proxy) {\n        throw new _errors.UnexpectedStateError('HTTP(S) proxy must be configured.');\n      }\n\n      return (0, _utilities.parseProxyUrl)(proxy);\n    };\n  };\n\n  const getHttpProxy = () => {\n    return proxyController.HTTP_PROXY;\n  };\n\n  const BoundHttpProxyAgent = class extends _classes.HttpProxyAgent {\n    constructor() {\n      super(() => {\n        return getHttpProxy();\n      }, mustUrlUseProxy(getHttpProxy), getUrlProxy(getHttpProxy), _http.default.globalAgent, configuration.socketConnectionTimeout);\n    }\n\n  };\n  const httpAgent = new BoundHttpProxyAgent();\n\n  const getHttpsProxy = () => {\n    return proxyController.HTTPS_PROXY || proxyController.HTTP_PROXY;\n  };\n\n  const BoundHttpsProxyAgent = class extends _classes.HttpsProxyAgent {\n    constructor() {\n      super(() => {\n        return getHttpsProxy();\n      }, mustUrlUseProxy(getHttpsProxy), getUrlProxy(getHttpsProxy), _https.default.globalAgent, configuration.socketConnectionTimeout);\n    }\n\n  };\n  const httpsAgent = new BoundHttpsProxyAgent(); // Overriding globalAgent was added in v11.7.\n  // @see https://nodejs.org/uk/blog/release/v11.7.0/\n\n  if (_semver.default.gte(process.version, 'v11.7.0')) {\n    // @see https://github.com/facebook/flow/issues/7670\n    // $FlowFixMe\n    _http.default.globalAgent = httpAgent; // $FlowFixMe\n\n    _https.default.globalAgent = httpsAgent;\n  } // The reason this logic is used in addition to overriding http(s).globalAgent\n  // is because there is no guarantee that we set http(s).globalAgent variable\n  // before an instance of http(s).Agent has been already constructed by someone,\n  // e.g. Stripe SDK creates instances of http(s).Agent at the top-level.\n  // @see https://github.com/gajus/global-agent/pull/13\n  //\n  // We still want to override http(s).globalAgent when possible to enable logic\n  // in `bindHttpMethod`.\n\n\n  if (_semver.default.gte(process.version, 'v10.0.0')) {\n    // $FlowFixMe\n    _http.default.get = (0, _utilities.bindHttpMethod)(httpGet, httpAgent, configuration.forceGlobalAgent); // $FlowFixMe\n\n    _http.default.request = (0, _utilities.bindHttpMethod)(httpRequest, httpAgent, configuration.forceGlobalAgent); // $FlowFixMe\n\n    _https.default.get = (0, _utilities.bindHttpMethod)(httpsGet, httpsAgent, configuration.forceGlobalAgent); // $FlowFixMe\n\n    _https.default.request = (0, _utilities.bindHttpMethod)(httpsRequest, httpsAgent, configuration.forceGlobalAgent);\n  } else {\n    log.warn('attempt to initialize global-agent in unsupported Node.js version was ignored');\n  }\n\n  return proxyController;\n};\n\nvar _default = createGlobalProxyAgent;\nexports.default = _default;\n//# sourceMappingURL=createGlobalProxyAgent.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Logger = _interopRequireDefault(require(\"../Logger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst log = _Logger.default.child({\n  namespace: 'createProxyController'\n});\n\nconst KNOWN_PROPERTY_NAMES = ['HTTP_PROXY', 'HTTPS_PROXY', 'NO_PROXY'];\n\nconst createProxyController = () => {\n  // eslint-disable-next-line fp/no-proxy\n  return new Proxy({\n    HTTP_PROXY: null,\n    HTTPS_PROXY: null,\n    NO_PROXY: null\n  }, {\n    set: (subject, name, value) => {\n      if (!KNOWN_PROPERTY_NAMES.includes(name)) {\n        throw new Error('Cannot set an unmapped property \"' + name + '\".');\n      }\n\n      subject[name] = value;\n      log.info({\n        change: {\n          name,\n          value\n        },\n        newConfiguration: subject\n      }, 'configuration changed');\n      return true;\n    }\n  });\n};\n\nvar _default = createProxyController;\nexports.default = _default;\n//# sourceMappingURL=createProxyController.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"createGlobalProxyAgent\", {\n  enumerable: true,\n  get: function () {\n    return _createGlobalProxyAgent.default;\n  }\n});\nObject.defineProperty(exports, \"createProxyController\", {\n  enumerable: true,\n  get: function () {\n    return _createProxyController.default;\n  }\n});\n\nvar _createGlobalProxyAgent = _interopRequireDefault(require(\"./createGlobalProxyAgent\"));\n\nvar _createProxyController = _interopRequireDefault(require(\"./createProxyController\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"bootstrap\", {\n  enumerable: true,\n  get: function () {\n    return _routines.bootstrap;\n  }\n});\nObject.defineProperty(exports, \"createGlobalProxyAgent\", {\n  enumerable: true,\n  get: function () {\n    return _factories.createGlobalProxyAgent;\n  }\n});\n\nvar _routines = require(\"./routines\");\n\nvar _factories = require(\"./factories\");\n//# sourceMappingURL=index.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Logger = _interopRequireDefault(require(\"../Logger\"));\n\nvar _factories = require(\"../factories\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst log = _Logger.default.child({\n  namespace: 'bootstrap'\n});\n\nconst bootstrap = configurationInput => {\n  if (global.GLOBAL_AGENT) {\n    log.warn('found global.GLOBAL_AGENT; second attempt to bootstrap global-agent was ignored');\n    return false;\n  }\n\n  global.GLOBAL_AGENT = (0, _factories.createGlobalProxyAgent)(configurationInput);\n  return true;\n};\n\nvar _default = bootstrap;\nexports.default = _default;\n//# sourceMappingURL=bootstrap.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"bootstrap\", {\n  enumerable: true,\n  get: function () {\n    return _bootstrap.default;\n  }\n});\n\nvar _bootstrap = _interopRequireDefault(require(\"./bootstrap\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _https = _interopRequireDefault(require(\"https\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// eslint-disable-next-line flowtype/no-weak-types\nconst bindHttpMethod = (originalMethod, agent, forceGlobalAgent) => {\n  // eslint-disable-next-line unicorn/prevent-abbreviations\n  return (...args) => {\n    let url;\n    let options;\n    let callback;\n\n    if (typeof args[0] === 'string' || args[0] instanceof URL) {\n      url = args[0];\n\n      if (typeof args[1] === 'function') {\n        options = {};\n        callback = args[1];\n      } else {\n        options = { ...args[1]\n        };\n        callback = args[2];\n      }\n    } else {\n      options = { ...args[0]\n      };\n      callback = args[1];\n    }\n\n    if (forceGlobalAgent) {\n      options.agent = agent;\n    } else {\n      if (!options.agent) {\n        options.agent = agent;\n      }\n\n      if (options.agent === _http.default.globalAgent || options.agent === _https.default.globalAgent) {\n        options.agent = agent;\n      }\n    }\n\n    if (url) {\n      // $FlowFixMe\n      return originalMethod(url, options, callback);\n    } else {\n      return originalMethod(options, callback);\n    }\n  };\n};\n\nvar _default = bindHttpMethod;\nexports.default = _default;\n//# sourceMappingURL=bindHttpMethod.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"bindHttpMethod\", {\n  enumerable: true,\n  get: function () {\n    return _bindHttpMethod.default;\n  }\n});\nObject.defineProperty(exports, \"isUrlMatchingNoProxy\", {\n  enumerable: true,\n  get: function () {\n    return _isUrlMatchingNoProxy.default;\n  }\n});\nObject.defineProperty(exports, \"parseProxyUrl\", {\n  enumerable: true,\n  get: function () {\n    return _parseProxyUrl.default;\n  }\n});\n\nvar _bindHttpMethod = _interopRequireDefault(require(\"./bindHttpMethod\"));\n\nvar _isUrlMatchingNoProxy = _interopRequireDefault(require(\"./isUrlMatchingNoProxy\"));\n\nvar _parseProxyUrl = _interopRequireDefault(require(\"./parseProxyUrl\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _url = require(\"url\");\n\nvar _matcher = _interopRequireDefault(require(\"matcher\"));\n\nvar _errors = require(\"../errors\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst isUrlMatchingNoProxy = (subjectUrl, noProxy) => {\n  const subjectUrlTokens = (0, _url.parse)(subjectUrl);\n  const rules = noProxy.split(/[\\s,]+/);\n\n  for (const rule of rules) {\n    const ruleMatch = rule.replace(/^(?<leadingDot>\\.)/, '*').match(/^(?<hostname>.+?)(?::(?<port>\\d+))?$/);\n\n    if (!ruleMatch || !ruleMatch.groups) {\n      throw new _errors.UnexpectedStateError('Invalid NO_PROXY pattern.');\n    }\n\n    if (!ruleMatch.groups.hostname) {\n      throw new _errors.UnexpectedStateError('NO_PROXY entry pattern must include hostname. Use * to match any hostname.');\n    }\n\n    const hostnameIsMatch = _matcher.default.isMatch(subjectUrlTokens.hostname, ruleMatch.groups.hostname);\n\n    if (hostnameIsMatch && (!ruleMatch.groups || !ruleMatch.groups.port || subjectUrlTokens.port && subjectUrlTokens.port === ruleMatch.groups.port)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar _default = isUrlMatchingNoProxy;\nexports.default = _default;\n//# sourceMappingURL=isUrlMatchingNoProxy.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _url = require(\"url\");\n\nvar _errors = require(\"../errors\");\n\nconst parseProxyUrl = url => {\n  const urlTokens = (0, _url.parse)(url);\n\n  if (urlTokens.query !== null) {\n    throw new _errors.UnexpectedStateError('Unsupported `GLOBAL_AGENT.HTTP_PROXY` configuration value: URL must not have query.');\n  }\n\n  if (urlTokens.hash !== null) {\n    throw new _errors.UnexpectedStateError('Unsupported `GLOBAL_AGENT.HTTP_PROXY` configuration value: URL must not have hash.');\n  }\n\n  if (urlTokens.protocol !== 'http:') {\n    throw new _errors.UnexpectedStateError('Unsupported `GLOBAL_AGENT.HTTP_PROXY` configuration value: URL protocol must be \"http:\".');\n  }\n\n  let port = 80;\n\n  if (urlTokens.port) {\n    port = Number.parseInt(urlTokens.port, 10);\n  }\n\n  return {\n    authorization: urlTokens.auth || null,\n    hostname: urlTokens.hostname,\n    port\n  };\n};\n\nvar _default = parseProxyUrl;\nexports.default = _default;\n//# sourceMappingURL=parseProxyUrl.js.map","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst {re, t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0)\n        this.set = [first]\n      else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached)\n      return cached\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const l = rangeList.length\n    const rangeMap = new Map()\n    for (const comp of rangeList) {\n      if (isNullSet(comp))\n        return [comp]\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has(''))\n      rangeMap.delete('')\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst {re, t} = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const {MAX_LENGTH} = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true\n    return options\n  }, {})\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin)))\n      minver = setMin\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst {ANY} = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min, prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min, null])\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom)\n    return true\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom)\n    return true\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY)\n      return true\n    else if (options.includePrerelease)\n      sub = [ new Comparator('>=0.0.0-0') ]\n    else\n      sub = [ new Comparator('>=0.0.0') ]\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease)\n      return true\n    else\n      dom = [ new Comparator('>=0.0.0') ]\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt, c, options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt, c, options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options))\n      return null\n\n    if (lt && !satisfies(eq, String(lt), options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options))\n        return false\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))\n        return false\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","'use strict';\n\nmodule.exports = global;\n","'use strict';\n\nvar defineProperties = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = getPolyfill();\n\nvar getGlobal = function () { return polyfill; };\n\ndefineProperties(getGlobal, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = getGlobal;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (typeof global !== 'object' || !global || global.Math !== Math || global.Array !== Array) {\n\t\treturn implementation;\n\t}\n\treturn global;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimGlobal() {\n\tvar polyfill = getPolyfill();\n\tif (define.supportsDescriptors) {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(polyfill, 'globalThis');\n\t\tif (!descriptor || (descriptor.configurable && (descriptor.enumerable || descriptor.writable || globalThis !== polyfill))) { // eslint-disable-line max-len\n\t\t\tObject.defineProperty(polyfill, 'globalThis', {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: polyfill,\n\t\t\t\twritable: false\n\t\t\t});\n\t\t}\n\t} else if (typeof globalThis !== 'object' || globalThis !== polyfill) {\n\t\tpolyfill.globalThis = polyfill;\n\t}\n\treturn polyfill;\n};\n","exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\n\nconst regexpCache = new Map();\n\nfunction makeRegexp(pattern, options) {\n\toptions = {\n\t\tcaseSensitive: false,\n\t\t...options\n\t};\n\n\tconst cacheKey = pattern + JSON.stringify(options);\n\n\tif (regexpCache.has(cacheKey)) {\n\t\treturn regexpCache.get(cacheKey);\n\t}\n\n\tconst negated = pattern[0] === '!';\n\n\tif (negated) {\n\t\tpattern = pattern.slice(1);\n\t}\n\n\tpattern = escapeStringRegexp(pattern).replace(/\\\\\\*/g, '[\\\\s\\\\S]*');\n\n\tconst regexp = new RegExp(`^${pattern}$`, options.caseSensitive ? '' : 'i');\n\tregexp.negated = negated;\n\tregexpCache.set(cacheKey, regexp);\n\n\treturn regexp;\n}\n\nmodule.exports = (inputs, patterns, options) => {\n\tif (!(Array.isArray(inputs) && Array.isArray(patterns))) {\n\t\tthrow new TypeError(`Expected two arrays, got ${typeof inputs} ${typeof patterns}`);\n\t}\n\n\tif (patterns.length === 0) {\n\t\treturn inputs;\n\t}\n\n\tconst isFirstPatternNegated = patterns[0][0] === '!';\n\n\tpatterns = patterns.map(pattern => makeRegexp(pattern, options));\n\n\tconst result = [];\n\n\tfor (const input of inputs) {\n\t\t// If first pattern is negated we include everything to match user expectation.\n\t\tlet matches = isFirstPatternNegated;\n\n\t\tfor (const pattern of patterns) {\n\t\t\tif (pattern.test(input)) {\n\t\t\t\tmatches = !pattern.negated;\n\t\t\t}\n\t\t}\n\n\t\tif (matches) {\n\t\t\tresult.push(input);\n\t\t}\n\t}\n\n\treturn result;\n};\n\nmodule.exports.isMatch = (input, pattern, options) => {\n\tconst inputArray = Array.isArray(input) ? input : [input];\n\tconst patternArray = Array.isArray(pattern) ? pattern : [pattern];\n\n\treturn inputArray.some(input => {\n\t\treturn patternArray.every(pattern => {\n\t\t\tconst regexp = makeRegexp(pattern, options);\n\t\t\tconst matches = regexp.test(input);\n\t\t\treturn regexp.negated ? !matches : matches;\n\t\t});\n\t});\n};\n","'use strict';\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n};\n","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __markAsModule = (target) => __defProp(target, \"__esModule\", { value: true });\nvar __esm = (fn, res) => function __init() {\n  return fn && (res = (0, fn[Object.keys(fn)[0]])(fn = 0)), res;\n};\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  __markAsModule(target);\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __reExport = (target, module2, desc) => {\n  if (module2 && typeof module2 === \"object\" || typeof module2 === \"function\") {\n    for (let key of __getOwnPropNames(module2))\n      if (!__hasOwnProp.call(target, key) && key !== \"default\")\n        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });\n  }\n  return target;\n};\nvar __toModule = (module2) => {\n  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, \"default\", module2 && module2.__esModule && \"default\" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);\n};\n\n// node_modules/web-streams-polyfill/dist/ponyfill.es2018.js\nvar require_ponyfill_es2018 = __commonJS({\n  \"node_modules/web-streams-polyfill/dist/ponyfill.es2018.js\"(exports, module2) {\n    (function(global2, factory) {\n      typeof exports === \"object\" && typeof module2 !== \"undefined\" ? factory(exports) : typeof define === \"function\" && define.amd ? define([\"exports\"], factory) : (global2 = typeof globalThis !== \"undefined\" ? globalThis : global2 || self, factory(global2.WebStreamsPolyfill = {}));\n    })(exports, function(exports2) {\n      \"use strict\";\n      const SymbolPolyfill = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? Symbol : (description) => `Symbol(${description})`;\n      function noop2() {\n        return void 0;\n      }\n      function getGlobals() {\n        if (typeof self !== \"undefined\") {\n          return self;\n        } else if (typeof window !== \"undefined\") {\n          return window;\n        } else if (typeof global !== \"undefined\") {\n          return global;\n        }\n        return void 0;\n      }\n      const globals = getGlobals();\n      function typeIsObject(x2) {\n        return typeof x2 === \"object\" && x2 !== null || typeof x2 === \"function\";\n      }\n      const rethrowAssertionErrorRejection = noop2;\n      const originalPromise = Promise;\n      const originalPromiseThen = Promise.prototype.then;\n      const originalPromiseResolve = Promise.resolve.bind(originalPromise);\n      const originalPromiseReject = Promise.reject.bind(originalPromise);\n      function newPromise(executor) {\n        return new originalPromise(executor);\n      }\n      function promiseResolvedWith(value) {\n        return originalPromiseResolve(value);\n      }\n      function promiseRejectedWith(reason) {\n        return originalPromiseReject(reason);\n      }\n      function PerformPromiseThen(promise, onFulfilled, onRejected) {\n        return originalPromiseThen.call(promise, onFulfilled, onRejected);\n      }\n      function uponPromise(promise, onFulfilled, onRejected) {\n        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), void 0, rethrowAssertionErrorRejection);\n      }\n      function uponFulfillment(promise, onFulfilled) {\n        uponPromise(promise, onFulfilled);\n      }\n      function uponRejection(promise, onRejected) {\n        uponPromise(promise, void 0, onRejected);\n      }\n      function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n      }\n      function setPromiseIsHandledToTrue(promise) {\n        PerformPromiseThen(promise, void 0, rethrowAssertionErrorRejection);\n      }\n      const queueMicrotask = (() => {\n        const globalQueueMicrotask = globals && globals.queueMicrotask;\n        if (typeof globalQueueMicrotask === \"function\") {\n          return globalQueueMicrotask;\n        }\n        const resolvedPromise = promiseResolvedWith(void 0);\n        return (fn) => PerformPromiseThen(resolvedPromise, fn);\n      })();\n      function reflectCall(F2, V, args) {\n        if (typeof F2 !== \"function\") {\n          throw new TypeError(\"Argument is not a function\");\n        }\n        return Function.prototype.apply.call(F2, V, args);\n      }\n      function promiseCall(F2, V, args) {\n        try {\n          return promiseResolvedWith(reflectCall(F2, V, args));\n        } catch (value) {\n          return promiseRejectedWith(value);\n        }\n      }\n      const QUEUE_MAX_ARRAY_SIZE = 16384;\n      class SimpleQueue {\n        constructor() {\n          this._cursor = 0;\n          this._size = 0;\n          this._front = {\n            _elements: [],\n            _next: void 0\n          };\n          this._back = this._front;\n          this._cursor = 0;\n          this._size = 0;\n        }\n        get length() {\n          return this._size;\n        }\n        push(element) {\n          const oldBack = this._back;\n          let newBack = oldBack;\n          if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n            newBack = {\n              _elements: [],\n              _next: void 0\n            };\n          }\n          oldBack._elements.push(element);\n          if (newBack !== oldBack) {\n            this._back = newBack;\n            oldBack._next = newBack;\n          }\n          ++this._size;\n        }\n        shift() {\n          const oldFront = this._front;\n          let newFront = oldFront;\n          const oldCursor = this._cursor;\n          let newCursor = oldCursor + 1;\n          const elements = oldFront._elements;\n          const element = elements[oldCursor];\n          if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n            newFront = oldFront._next;\n            newCursor = 0;\n          }\n          --this._size;\n          this._cursor = newCursor;\n          if (oldFront !== newFront) {\n            this._front = newFront;\n          }\n          elements[oldCursor] = void 0;\n          return element;\n        }\n        forEach(callback) {\n          let i2 = this._cursor;\n          let node = this._front;\n          let elements = node._elements;\n          while (i2 !== elements.length || node._next !== void 0) {\n            if (i2 === elements.length) {\n              node = node._next;\n              elements = node._elements;\n              i2 = 0;\n              if (elements.length === 0) {\n                break;\n              }\n            }\n            callback(elements[i2]);\n            ++i2;\n          }\n        }\n        peek() {\n          const front = this._front;\n          const cursor = this._cursor;\n          return front._elements[cursor];\n        }\n      }\n      function ReadableStreamReaderGenericInitialize(reader, stream) {\n        reader._ownerReadableStream = stream;\n        stream._reader = reader;\n        if (stream._state === \"readable\") {\n          defaultReaderClosedPromiseInitialize(reader);\n        } else if (stream._state === \"closed\") {\n          defaultReaderClosedPromiseInitializeAsResolved(reader);\n        } else {\n          defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n        }\n      }\n      function ReadableStreamReaderGenericCancel(reader, reason) {\n        const stream = reader._ownerReadableStream;\n        return ReadableStreamCancel(stream, reason);\n      }\n      function ReadableStreamReaderGenericRelease(reader) {\n        if (reader._ownerReadableStream._state === \"readable\") {\n          defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        } else {\n          defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        reader._ownerReadableStream._reader = void 0;\n        reader._ownerReadableStream = void 0;\n      }\n      function readerLockException(name) {\n        return new TypeError(\"Cannot \" + name + \" a stream using a released reader\");\n      }\n      function defaultReaderClosedPromiseInitialize(reader) {\n        reader._closedPromise = newPromise((resolve, reject) => {\n          reader._closedPromise_resolve = resolve;\n          reader._closedPromise_reject = reject;\n        });\n      }\n      function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseReject(reader, reason);\n      }\n      function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseResolve(reader);\n      }\n      function defaultReaderClosedPromiseReject(reader, reason) {\n        if (reader._closedPromise_reject === void 0) {\n          return;\n        }\n        setPromiseIsHandledToTrue(reader._closedPromise);\n        reader._closedPromise_reject(reason);\n        reader._closedPromise_resolve = void 0;\n        reader._closedPromise_reject = void 0;\n      }\n      function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n      }\n      function defaultReaderClosedPromiseResolve(reader) {\n        if (reader._closedPromise_resolve === void 0) {\n          return;\n        }\n        reader._closedPromise_resolve(void 0);\n        reader._closedPromise_resolve = void 0;\n        reader._closedPromise_reject = void 0;\n      }\n      const AbortSteps = SymbolPolyfill(\"[[AbortSteps]]\");\n      const ErrorSteps = SymbolPolyfill(\"[[ErrorSteps]]\");\n      const CancelSteps = SymbolPolyfill(\"[[CancelSteps]]\");\n      const PullSteps = SymbolPolyfill(\"[[PullSteps]]\");\n      const NumberIsFinite = Number.isFinite || function(x2) {\n        return typeof x2 === \"number\" && isFinite(x2);\n      };\n      const MathTrunc = Math.trunc || function(v) {\n        return v < 0 ? Math.ceil(v) : Math.floor(v);\n      };\n      function isDictionary(x2) {\n        return typeof x2 === \"object\" || typeof x2 === \"function\";\n      }\n      function assertDictionary(obj, context) {\n        if (obj !== void 0 && !isDictionary(obj)) {\n          throw new TypeError(`${context} is not an object.`);\n        }\n      }\n      function assertFunction(x2, context) {\n        if (typeof x2 !== \"function\") {\n          throw new TypeError(`${context} is not a function.`);\n        }\n      }\n      function isObject(x2) {\n        return typeof x2 === \"object\" && x2 !== null || typeof x2 === \"function\";\n      }\n      function assertObject(x2, context) {\n        if (!isObject(x2)) {\n          throw new TypeError(`${context} is not an object.`);\n        }\n      }\n      function assertRequiredArgument(x2, position, context) {\n        if (x2 === void 0) {\n          throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n        }\n      }\n      function assertRequiredField(x2, field, context) {\n        if (x2 === void 0) {\n          throw new TypeError(`${field} is required in '${context}'.`);\n        }\n      }\n      function convertUnrestrictedDouble(value) {\n        return Number(value);\n      }\n      function censorNegativeZero(x2) {\n        return x2 === 0 ? 0 : x2;\n      }\n      function integerPart(x2) {\n        return censorNegativeZero(MathTrunc(x2));\n      }\n      function convertUnsignedLongLongWithEnforceRange(value, context) {\n        const lowerBound = 0;\n        const upperBound = Number.MAX_SAFE_INTEGER;\n        let x2 = Number(value);\n        x2 = censorNegativeZero(x2);\n        if (!NumberIsFinite(x2)) {\n          throw new TypeError(`${context} is not a finite number`);\n        }\n        x2 = integerPart(x2);\n        if (x2 < lowerBound || x2 > upperBound) {\n          throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n        }\n        if (!NumberIsFinite(x2) || x2 === 0) {\n          return 0;\n        }\n        return x2;\n      }\n      function assertReadableStream(x2, context) {\n        if (!IsReadableStream(x2)) {\n          throw new TypeError(`${context} is not a ReadableStream.`);\n        }\n      }\n      function AcquireReadableStreamDefaultReader(stream) {\n        return new ReadableStreamDefaultReader(stream);\n      }\n      function ReadableStreamAddReadRequest(stream, readRequest) {\n        stream._reader._readRequests.push(readRequest);\n      }\n      function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readRequest = reader._readRequests.shift();\n        if (done) {\n          readRequest._closeSteps();\n        } else {\n          readRequest._chunkSteps(chunk);\n        }\n      }\n      function ReadableStreamGetNumReadRequests(stream) {\n        return stream._reader._readRequests.length;\n      }\n      function ReadableStreamHasDefaultReader(stream) {\n        const reader = stream._reader;\n        if (reader === void 0) {\n          return false;\n        }\n        if (!IsReadableStreamDefaultReader(reader)) {\n          return false;\n        }\n        return true;\n      }\n      class ReadableStreamDefaultReader {\n        constructor(stream) {\n          assertRequiredArgument(stream, 1, \"ReadableStreamDefaultReader\");\n          assertReadableStream(stream, \"First parameter\");\n          if (IsReadableStreamLocked(stream)) {\n            throw new TypeError(\"This stream has already been locked for exclusive reading by another reader\");\n          }\n          ReadableStreamReaderGenericInitialize(this, stream);\n          this._readRequests = new SimpleQueue();\n        }\n        get closed() {\n          if (!IsReadableStreamDefaultReader(this)) {\n            return promiseRejectedWith(defaultReaderBrandCheckException(\"closed\"));\n          }\n          return this._closedPromise;\n        }\n        cancel(reason = void 0) {\n          if (!IsReadableStreamDefaultReader(this)) {\n            return promiseRejectedWith(defaultReaderBrandCheckException(\"cancel\"));\n          }\n          if (this._ownerReadableStream === void 0) {\n            return promiseRejectedWith(readerLockException(\"cancel\"));\n          }\n          return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        read() {\n          if (!IsReadableStreamDefaultReader(this)) {\n            return promiseRejectedWith(defaultReaderBrandCheckException(\"read\"));\n          }\n          if (this._ownerReadableStream === void 0) {\n            return promiseRejectedWith(readerLockException(\"read from\"));\n          }\n          let resolvePromise;\n          let rejectPromise;\n          const promise = newPromise((resolve, reject) => {\n            resolvePromise = resolve;\n            rejectPromise = reject;\n          });\n          const readRequest = {\n            _chunkSteps: (chunk) => resolvePromise({ value: chunk, done: false }),\n            _closeSteps: () => resolvePromise({ value: void 0, done: true }),\n            _errorSteps: (e2) => rejectPromise(e2)\n          };\n          ReadableStreamDefaultReaderRead(this, readRequest);\n          return promise;\n        }\n        releaseLock() {\n          if (!IsReadableStreamDefaultReader(this)) {\n            throw defaultReaderBrandCheckException(\"releaseLock\");\n          }\n          if (this._ownerReadableStream === void 0) {\n            return;\n          }\n          if (this._readRequests.length > 0) {\n            throw new TypeError(\"Tried to release a reader lock when that reader has pending read() calls un-settled\");\n          }\n          ReadableStreamReaderGenericRelease(this);\n        }\n      }\n      Object.defineProperties(ReadableStreamDefaultReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n      });\n      if (typeof SymbolPolyfill.toStringTag === \"symbol\") {\n        Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {\n          value: \"ReadableStreamDefaultReader\",\n          configurable: true\n        });\n      }\n      function IsReadableStreamDefaultReader(x2) {\n        if (!typeIsObject(x2)) {\n          return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x2, \"_readRequests\")) {\n          return false;\n        }\n        return x2 instanceof ReadableStreamDefaultReader;\n      }\n      function ReadableStreamDefaultReaderRead(reader, readRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === \"closed\") {\n          readRequest._closeSteps();\n        } else if (stream._state === \"errored\") {\n          readRequest._errorSteps(stream._storedError);\n        } else {\n          stream._readableStreamController[PullSteps](readRequest);\n        }\n      }\n      function defaultReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n      }\n      const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {\n      }).prototype);\n      class ReadableStreamAsyncIteratorImpl {\n        constructor(reader, preventCancel) {\n          this._ongoingPromise = void 0;\n          this._isFinished = false;\n          this._reader = reader;\n          this._preventCancel = preventCancel;\n        }\n        next() {\n          const nextSteps = () => this._nextSteps();\n          this._ongoingPromise = this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) : nextSteps();\n          return this._ongoingPromise;\n        }\n        return(value) {\n          const returnSteps = () => this._returnSteps(value);\n          return this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) : returnSteps();\n        }\n        _nextSteps() {\n          if (this._isFinished) {\n            return Promise.resolve({ value: void 0, done: true });\n          }\n          const reader = this._reader;\n          if (reader._ownerReadableStream === void 0) {\n            return promiseRejectedWith(readerLockException(\"iterate\"));\n          }\n          let resolvePromise;\n          let rejectPromise;\n          const promise = newPromise((resolve, reject) => {\n            resolvePromise = resolve;\n            rejectPromise = reject;\n          });\n          const readRequest = {\n            _chunkSteps: (chunk) => {\n              this._ongoingPromise = void 0;\n              queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n            },\n            _closeSteps: () => {\n              this._ongoingPromise = void 0;\n              this._isFinished = true;\n              ReadableStreamReaderGenericRelease(reader);\n              resolvePromise({ value: void 0, done: true });\n            },\n            _errorSteps: (reason) => {\n              this._ongoingPromise = void 0;\n              this._isFinished = true;\n              ReadableStreamReaderGenericRelease(reader);\n              rejectPromise(reason);\n            }\n          };\n          ReadableStreamDefaultReaderRead(reader, readRequest);\n          return promise;\n        }\n        _returnSteps(value) {\n          if (this._isFinished) {\n            return Promise.resolve({ value, done: true });\n          }\n          this._isFinished = true;\n          const reader = this._reader;\n          if (reader._ownerReadableStream === void 0) {\n            return promiseRejectedWith(readerLockException(\"finish iterating\"));\n          }\n          if (!this._preventCancel) {\n            const result = ReadableStreamReaderGenericCancel(reader, value);\n            ReadableStreamReaderGenericRelease(reader);\n            return transformPromiseWith(result, () => ({ value, done: true }));\n          }\n          ReadableStreamReaderGenericRelease(reader);\n          return promiseResolvedWith({ value, done: true });\n        }\n      }\n      const ReadableStreamAsyncIteratorPrototype = {\n        next() {\n          if (!IsReadableStreamAsyncIterator(this)) {\n            return promiseRejectedWith(streamAsyncIteratorBrandCheckException(\"next\"));\n          }\n          return this._asyncIteratorImpl.next();\n        },\n        return(value) {\n          if (!IsReadableStreamAsyncIterator(this)) {\n            return promiseRejectedWith(streamAsyncIteratorBrandCheckException(\"return\"));\n          }\n          return this._asyncIteratorImpl.return(value);\n        }\n      };\n      if (AsyncIteratorPrototype !== void 0) {\n        Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n      }\n      function AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n        const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n        iterator._asyncIteratorImpl = impl;\n        return iterator;\n      }\n      function IsReadableStreamAsyncIterator(x2) {\n        if (!typeIsObject(x2)) {\n          return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x2, \"_asyncIteratorImpl\")) {\n          return false;\n        }\n        try {\n          return x2._asyncIteratorImpl instanceof ReadableStreamAsyncIteratorImpl;\n        } catch (_a) {\n          return false;\n        }\n      }\n      function streamAsyncIteratorBrandCheckException(name) {\n        return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n      }\n      const NumberIsNaN = Number.isNaN || function(x2) {\n        return x2 !== x2;\n      };\n      function CreateArrayFromList(elements) {\n        return elements.slice();\n      }\n      function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {\n        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n      }\n      function TransferArrayBuffer(O) {\n        return O;\n      }\n      function IsDetachedBuffer(O) {\n        return false;\n      }\n      function ArrayBufferSlice(buffer, begin, end) {\n        if (buffer.slice) {\n          return buffer.slice(begin, end);\n        }\n        const length = end - begin;\n        const slice = new ArrayBuffer(length);\n        CopyDataBlockBytes(slice, 0, buffer, begin, length);\n        return slice;\n      }\n      function IsNonNegativeNumber(v) {\n        if (typeof v !== \"number\") {\n          return false;\n        }\n        if (NumberIsNaN(v)) {\n          return false;\n        }\n        if (v < 0) {\n          return false;\n        }\n        return true;\n      }\n      function CloneAsUint8Array(O) {\n        const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n        return new Uint8Array(buffer);\n      }\n      function DequeueValue(container) {\n        const pair = container._queue.shift();\n        container._queueTotalSize -= pair.size;\n        if (container._queueTotalSize < 0) {\n          container._queueTotalSize = 0;\n        }\n        return pair.value;\n      }\n      function EnqueueValueWithSize(container, value, size) {\n        if (!IsNonNegativeNumber(size) || size === Infinity) {\n          throw new RangeError(\"Size must be a finite, non-NaN, non-negative number.\");\n        }\n        container._queue.push({ value, size });\n        container._queueTotalSize += size;\n      }\n      function PeekQueueValue(container) {\n        const pair = container._queue.peek();\n        return pair.value;\n      }\n      function ResetQueue(container) {\n        container._queue = new SimpleQueue();\n        container._queueTotalSize = 0;\n      }\n      class ReadableStreamBYOBRequest {\n        constructor() {\n          throw new TypeError(\"Illegal constructor\");\n        }\n        get view() {\n          if (!IsReadableStreamBYOBRequest(this)) {\n            throw byobRequestBrandCheckException(\"view\");\n          }\n          return this._view;\n        }\n        respond(bytesWritten) {\n          if (!IsReadableStreamBYOBRequest(this)) {\n            throw byobRequestBrandCheckException(\"respond\");\n          }\n          assertRequiredArgument(bytesWritten, 1, \"respond\");\n          bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, \"First parameter\");\n          if (this._associatedReadableByteStreamController === void 0) {\n            throw new TypeError(\"This BYOB request has been invalidated\");\n          }\n          if (IsDetachedBuffer(this._view.buffer))\n            ;\n          ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n        }\n        respondWithNewView(view) {\n          if (!IsReadableStreamBYOBRequest(this)) {\n            throw byobRequestBrandCheckException(\"respondWithNewView\");\n          }\n          assertRequiredArgument(view, 1, \"respondWithNewView\");\n          if (!ArrayBuffer.isView(view)) {\n            throw new TypeError(\"You can only respond with array buffer views\");\n          }\n          if (this._associatedReadableByteStreamController === void 0) {\n            throw new TypeError(\"This BYOB request has been invalidated\");\n          }\n          if (IsDetachedBuffer(view.buffer))\n            ;\n          ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n        }\n      }\n      Object.defineProperties(ReadableStreamBYOBRequest.prototype, {\n        respond: { enumerable: true },\n        respondWithNewView: { enumerable: true },\n        view: { enumerable: true }\n      });\n      if (typeof SymbolPolyfill.toStringTag === \"symbol\") {\n        Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {\n          value: \"ReadableStreamBYOBRequest\",\n          configurable: true\n        });\n      }\n      class ReadableByteStreamController {\n        constructor() {\n          throw new TypeError(\"Illegal constructor\");\n        }\n        get byobRequest() {\n          if (!IsReadableByteStreamController(this)) {\n            throw byteStreamControllerBrandCheckException(\"byobRequest\");\n          }\n          return ReadableByteStreamControllerGetBYOBRequest(this);\n        }\n        get desiredSize() {\n          if (!IsReadableByteStreamController(this)) {\n            throw byteStreamControllerBrandCheckException(\"desiredSize\");\n          }\n          return ReadableByteStreamControllerGetDesiredSize(this);\n        }\n        close() {\n          if (!IsReadableByteStreamController(this)) {\n            throw byteStreamControllerBrandCheckException(\"close\");\n          }\n          if (this._closeRequested) {\n            throw new TypeError(\"The stream has already been closed; do not close it again!\");\n          }\n          const state = this._controlledReadableByteStream._state;\n          if (state !== \"readable\") {\n            throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n          }\n          ReadableByteStreamControllerClose(this);\n        }\n        enqueue(chunk) {\n          if (!IsReadableByteStreamController(this)) {\n            throw byteStreamControllerBrandCheckException(\"enqueue\");\n          }\n          assertRequiredArgument(chunk, 1, \"enqueue\");\n          if (!ArrayBuffer.isView(chunk)) {\n            throw new TypeError(\"chunk must be an array buffer view\");\n          }\n          if (chunk.byteLength === 0) {\n            throw new TypeError(\"chunk must have non-zero byteLength\");\n          }\n          if (chunk.buffer.byteLength === 0) {\n            throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n          }\n          if (this._closeRequested) {\n            throw new TypeError(\"stream is closed or draining\");\n          }\n          const state = this._controlledReadableByteStream._state;\n          if (state !== \"readable\") {\n            throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n          }\n          ReadableByteStreamControllerEnqueue(this, chunk);\n        }\n        error(e2 = void 0) {\n          if (!IsReadableByteStreamController(this)) {\n            throw byteStreamControllerBrandCheckException(\"error\");\n          }\n          ReadableByteStreamControllerError(this, e2);\n        }\n        [CancelSteps](reason) {\n          ReadableByteStreamControllerClearPendingPullIntos(this);\n          ResetQueue(this);\n          const result = this._cancelAlgorithm(reason);\n          ReadableByteStreamControllerClearAlgorithms(this);\n          return result;\n        }\n        [PullSteps](readRequest) {\n          const stream = this._controlledReadableByteStream;\n          if (this._queueTotalSize > 0) {\n            const entry = this._queue.shift();\n            this._queueTotalSize -= entry.byteLength;\n            ReadableByteStreamControllerHandleQueueDrain(this);\n            const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n            readRequest._chunkSteps(view);\n            return;\n          }\n          const autoAllocateChunkSize = this._autoAllocateChunkSize;\n          if (autoAllocateChunkSize !== void 0) {\n            let buffer;\n            try {\n              buffer = new ArrayBuffer(autoAllocateChunkSize);\n            } catch (bufferE) {\n              readRequest._errorSteps(bufferE);\n              return;\n            }\n            const pullIntoDescriptor = {\n              buffer,\n              bufferByteLength: autoAllocateChunkSize,\n              byteOffset: 0,\n              byteLength: autoAllocateChunkSize,\n              bytesFilled: 0,\n              elementSize: 1,\n              viewConstructor: Uint8Array,\n              readerType: \"default\"\n            };\n            this._pendingPullIntos.push(pullIntoDescriptor);\n          }\n          ReadableStreamAddReadRequest(stream, readRequest);\n          ReadableByteStreamControllerCallPullIfNeeded(this);\n        }\n      }\n      Object.defineProperties(ReadableByteStreamController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        byobRequest: { enumerable: true },\n        desiredSize: { enumerable: true }\n      });\n      if (typeof SymbolPolyfill.toStringTag === \"symbol\") {\n        Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {\n          value: \"ReadableByteStreamController\",\n          configurable: true\n        });\n      }\n      function IsReadableByteStreamController(x2) {\n        if (!typeIsObject(x2)) {\n          return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x2, \"_controlledReadableByteStream\")) {\n          return false;\n        }\n        return x2 instanceof ReadableByteStreamController;\n      }\n      function IsReadableStreamBYOBRequest(x2) {\n        if (!typeIsObject(x2)) {\n          return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x2, \"_associatedReadableByteStreamController\")) {\n          return false;\n        }\n        return x2 instanceof ReadableStreamBYOBRequest;\n      }\n      function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n        if (!shouldPull) {\n          return;\n        }\n        if (controller._pulling) {\n          controller._pullAgain = true;\n          return;\n        }\n        controller._pulling = true;\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n          controller._pulling = false;\n          if (controller._pullAgain) {\n            controller._pullAgain = false;\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n          }\n        }, (e2) => {\n          ReadableByteStreamControllerError(controller, e2);\n        });\n      }\n      function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        controller._pendingPullIntos = new SimpleQueue();\n      }\n      function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n        let done = false;\n        if (stream._state === \"closed\") {\n          done = true;\n        }\n        const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        if (pullIntoDescriptor.readerType === \"default\") {\n          ReadableStreamFulfillReadRequest(stream, filledView, done);\n        } else {\n          ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n        }\n      }\n      function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n        const bytesFilled = pullIntoDescriptor.bytesFilled;\n        const elementSize = pullIntoDescriptor.elementSize;\n        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n      }\n      function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n        controller._queue.push({ buffer, byteOffset, byteLength });\n        controller._queueTotalSize += byteLength;\n      }\n      function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n        const elementSize = pullIntoDescriptor.elementSize;\n        const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n        const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n        const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n        const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n        let totalBytesToCopyRemaining = maxBytesToCopy;\n        let ready = false;\n        if (maxAlignedBytes > currentAlignedBytes) {\n          totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n          ready = true;\n        }\n        const queue = controller._queue;\n        while (totalBytesToCopyRemaining > 0) {\n          const headOfQueue = queue.peek();\n          const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n          const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n          CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n          if (headOfQueue.byteLength === bytesToCopy) {\n            queue.shift();\n          } else {\n            headOfQueue.byteOffset += bytesToCopy;\n            headOfQueue.byteLength -= bytesToCopy;\n          }\n          controller._queueTotalSize -= bytesToCopy;\n          ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n          totalBytesToCopyRemaining -= bytesToCopy;\n        }\n        return ready;\n      }\n      function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n        pullIntoDescriptor.bytesFilled += size;\n      }\n      function ReadableByteStreamControllerHandleQueueDrain(controller) {\n        if (controller._queueTotalSize === 0 && controller._closeRequested) {\n          ReadableByteStreamControllerClearAlgorithms(controller);\n          ReadableStreamClose(controller._controlledReadableByteStream);\n        } else {\n          ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }\n      }\n      function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n        if (controller._byobRequest === null) {\n          return;\n        }\n        controller._byobRequest._associatedReadableByteStreamController = void 0;\n        controller._byobRequest._view = null;\n        controller._byobRequest = null;\n      }\n      function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n        while (controller._pendingPullIntos.length > 0) {\n          if (controller._queueTotalSize === 0) {\n            return;\n          }\n          const pullIntoDescriptor = controller._pendingPullIntos.peek();\n          if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n            ReadableByteStreamControllerShiftPendingPullInto(controller);\n            ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n          }\n        }\n      }\n      function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {\n        const stream = controller._controlledReadableByteStream;\n        let elementSize = 1;\n        if (view.constructor !== DataView) {\n          elementSize = view.constructor.BYTES_PER_ELEMENT;\n        }\n        const ctor = view.constructor;\n        const buffer = TransferArrayBuffer(view.buffer);\n        const pullIntoDescriptor = {\n          buffer,\n          bufferByteLength: buffer.byteLength,\n          byteOffset: view.byteOffset,\n          byteLength: view.byteLength,\n          bytesFilled: 0,\n          elementSize,\n          viewConstructor: ctor,\n          readerType: \"byob\"\n        };\n        if (controller._pendingPullIntos.length > 0) {\n          controller._pendingPullIntos.push(pullIntoDescriptor);\n          ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n          return;\n        }\n        if (stream._state === \"closed\") {\n          const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n          readIntoRequest._closeSteps(emptyView);\n          return;\n        }\n        if (controller._queueTotalSize > 0) {\n          if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n            const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n            ReadableByteStreamControllerHandleQueueDrain(controller);\n            readIntoRequest._chunkSteps(filledView);\n            return;\n          }\n          if (controller._closeRequested) {\n            const e2 = new TypeError(\"Insufficient bytes to fill elements in the given buffer\");\n            ReadableByteStreamControllerError(controller, e2);\n            readIntoRequest._errorSteps(e2);\n            return;\n          }\n        }\n        controller._pendingPullIntos.push(pullIntoDescriptor);\n        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n      function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n        const stream = controller._controlledReadableByteStream;\n        if (ReadableStreamHasBYOBReader(stream)) {\n          while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n            const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n            ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n          }\n        }\n      }\n      function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n        if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n          return;\n        }\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n        if (remainderSize > 0) {\n          const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n          const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n          ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n        }\n        pullIntoDescriptor.bytesFilled -= remainderSize;\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n      }\n      function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        const state = controller._controlledReadableByteStream._state;\n        if (state === \"closed\") {\n          ReadableByteStreamControllerRespondInClosedState(controller);\n        } else {\n          ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n      function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n        const descriptor = controller._pendingPullIntos.shift();\n        return descriptor;\n      }\n      function ReadableByteStreamControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== \"readable\") {\n          return false;\n        }\n        if (controller._closeRequested) {\n          return false;\n        }\n        if (!controller._started) {\n          return false;\n        }\n        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n          return true;\n        }\n        if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n          return true;\n        }\n        const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n          return true;\n        }\n        return false;\n      }\n      function ReadableByteStreamControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = void 0;\n        controller._cancelAlgorithm = void 0;\n      }\n      function ReadableByteStreamControllerClose(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== \"readable\") {\n          return;\n        }\n        if (controller._queueTotalSize > 0) {\n          controller._closeRequested = true;\n          return;\n        }\n        if (controller._pendingPullIntos.length > 0) {\n          const firstPendingPullInto = controller._pendingPullIntos.peek();\n          if (firstPendingPullInto.bytesFilled > 0) {\n            const e2 = new TypeError(\"Insufficient bytes to fill elements in the given buffer\");\n            ReadableByteStreamControllerError(controller, e2);\n            throw e2;\n          }\n        }\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamClose(stream);\n      }\n      function ReadableByteStreamControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== \"readable\") {\n          return;\n        }\n        const buffer = chunk.buffer;\n        const byteOffset = chunk.byteOffset;\n        const byteLength = chunk.byteLength;\n        const transferredBuffer = TransferArrayBuffer(buffer);\n        if (controller._pendingPullIntos.length > 0) {\n          const firstPendingPullInto = controller._pendingPullIntos.peek();\n          if (IsDetachedBuffer(firstPendingPullInto.buffer))\n            ;\n          firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n        }\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        if (ReadableStreamHasDefaultReader(stream)) {\n          if (ReadableStreamGetNumReadRequests(stream) === 0) {\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n          } else {\n            if (controller._pendingPullIntos.length > 0) {\n              ReadableByteStreamControllerShiftPendingPullInto(controller);\n            }\n            const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n            ReadableStreamFulfillReadRequest(stream, transferredView, false);\n          }\n        } else if (ReadableStreamHasBYOBReader(stream)) {\n          ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n          ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n        } else {\n          ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n      function ReadableByteStreamControllerError(controller, e2) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== \"readable\") {\n          return;\n        }\n        ReadableByteStreamControllerClearPendingPullIntos(controller);\n        ResetQueue(controller);\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e2);\n      }\n      function ReadableByteStreamControllerGetBYOBRequest(controller) {\n        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n          const firstDescriptor = controller._pendingPullIntos.peek();\n          const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n          const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n          SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n          controller._byobRequest = byobRequest;\n        }\n        return controller._byobRequest;\n      }\n      function ReadableByteStreamControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableByteStream._state;\n        if (state === \"errored\") {\n          return null;\n        }\n        if (state === \"closed\") {\n          return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n      }\n      function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === \"closed\") {\n          if (bytesWritten !== 0) {\n            throw new TypeError(\"bytesWritten must be 0 when calling respond() on a closed stream\");\n          }\n        } else {\n          if (bytesWritten === 0) {\n            throw new TypeError(\"bytesWritten must be greater than 0 when calling respond() on a readable stream\");\n          }\n          if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n            throw new RangeError(\"bytesWritten out of range\");\n          }\n        }\n        firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n      }\n      function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === \"closed\") {\n          if (view.byteLength !== 0) {\n            throw new TypeError(\"The view's length must be 0 when calling respondWithNewView() on a closed stream\");\n          }\n        } else {\n          if (view.byteLength === 0) {\n            throw new TypeError(\"The view's length must be greater than 0 when calling respondWithNewView() on a readable stream\");\n          }\n        }\n        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n          throw new RangeError(\"The region specified by view does not match byobRequest\");\n        }\n        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n          throw new RangeError(\"The buffer of view has different capacity than byobRequest\");\n        }\n        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n          throw new RangeError(\"The region specified by view is larger than byobRequest\");\n        }\n        const viewByteLength = view.byteLength;\n        firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n      }\n      function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n        controller._controlledReadableByteStream = stream;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._byobRequest = null;\n        controller._queue = controller._queueTotalSize = void 0;\n        ResetQueue(controller);\n        controller._closeRequested = false;\n        controller._started = false;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        controller._autoAllocateChunkSize = autoAllocateChunkSize;\n        controller._pendingPullIntos = new SimpleQueue();\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n          controller._started = true;\n          ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }, (r2) => {\n          ReadableByteStreamControllerError(controller, r2);\n        });\n      }\n      function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        let startAlgorithm = () => void 0;\n        let pullAlgorithm = () => promiseResolvedWith(void 0);\n        let cancelAlgorithm = () => promiseResolvedWith(void 0);\n        if (underlyingByteSource.start !== void 0) {\n          startAlgorithm = () => underlyingByteSource.start(controller);\n        }\n        if (underlyingByteSource.pull !== void 0) {\n          pullAlgorithm = () => underlyingByteSource.pull(controller);\n        }\n        if (underlyingByteSource.cancel !== void 0) {\n          cancelAlgorithm = (reason) => underlyingByteSource.cancel(reason);\n        }\n        const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n        if (autoAllocateChunkSize === 0) {\n          throw new TypeError(\"autoAllocateChunkSize must be greater than 0\");\n        }\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n      }\n      function SetUpReadableStreamBYOBRequest(request, controller, view) {\n        request._associatedReadableByteStreamController = controller;\n        request._view = view;\n      }\n      function byobRequestBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n      }\n      function byteStreamControllerBrandCheckException(name) {\n        return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n      }\n      function AcquireReadableStreamBYOBReader(stream) {\n        return new ReadableStreamBYOBReader(stream);\n      }\n      function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {\n        stream._reader._readIntoRequests.push(readIntoRequest);\n      }\n      function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readIntoRequest = reader._readIntoRequests.shift();\n        if (done) {\n          readIntoRequest._closeSteps(chunk);\n        } else {\n          readIntoRequest._chunkSteps(chunk);\n        }\n      }\n      function ReadableStreamGetNumReadIntoRequests(stream) {\n        return stream._reader._readIntoRequests.length;\n      }\n      function ReadableStreamHasBYOBReader(stream) {\n        const reader = stream._reader;\n        if (reader === void 0) {\n          return false;\n        }\n        if (!IsReadableStreamBYOBReader(reader)) {\n          return false;\n        }\n        return true;\n      }\n      class ReadableStreamBYOBReader {\n        constructor(stream) {\n          assertRequiredArgument(stream, 1, \"ReadableStreamBYOBReader\");\n          assertReadableStream(stream, \"First parameter\");\n          if (IsReadableStreamLocked(stream)) {\n            throw new TypeError(\"This stream has already been locked for exclusive reading by another reader\");\n          }\n          if (!IsReadableByteStreamController(stream._readableStreamController)) {\n            throw new TypeError(\"Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source\");\n          }\n          ReadableStreamReaderGenericInitialize(this, stream);\n          this._readIntoRequests = new SimpleQueue();\n        }\n        get closed() {\n          if (!IsReadableStreamBYOBReader(this)) {\n            return promiseRejectedWith(byobReaderBrandCheckException(\"closed\"));\n          }\n          return this._closedPromise;\n        }\n        cancel(reason = void 0) {\n          if (!IsReadableStreamBYOBReader(this)) {\n            return promiseRejectedWith(byobReaderBrandCheckException(\"cancel\"));\n          }\n          if (this._ownerReadableStream === void 0) {\n            return promiseRejectedWith(readerLockException(\"cancel\"));\n          }\n          return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        read(view) {\n          if (!IsReadableStreamBYOBReader(this)) {\n            return promiseRejectedWith(byobReaderBrandCheckException(\"read\"));\n          }\n          if (!ArrayBuffer.isView(view)) {\n            return promiseRejectedWith(new TypeError(\"view must be an array buffer view\"));\n          }\n          if (view.byteLength === 0) {\n            return promiseRejectedWith(new TypeError(\"view must have non-zero byteLength\"));\n          }\n          if (view.buffer.byteLength === 0) {\n            return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n          }\n          if (IsDetachedBuffer(view.buffer))\n            ;\n          if (this._ownerReadableStream === void 0) {\n            return promiseRejectedWith(readerLockException(\"read from\"));\n          }\n          let resolvePromise;\n          let rejectPromise;\n          const promise = newPromise((resolve, reject) => {\n            resolvePromise = resolve;\n            rejectPromise = reject;\n          });\n          const readIntoRequest = {\n            _chunkSteps: (chunk) => resolvePromise({ value: chunk, done: false }),\n            _closeSteps: (chunk) => resolvePromise({ value: chunk, done: true }),\n            _errorSteps: (e2) => rejectPromise(e2)\n          };\n          ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n          return promise;\n        }\n        releaseLock() {\n          if (!IsReadableStreamBYOBReader(this)) {\n            throw byobReaderBrandCheckException(\"releaseLock\");\n          }\n          if (this._ownerReadableStream === void 0) {\n            return;\n          }\n          if (this._readIntoRequests.length > 0) {\n            throw new TypeError(\"Tried to release a reader lock when that reader has pending read() calls un-settled\");\n          }\n          ReadableStreamReaderGenericRelease(this);\n        }\n      }\n      Object.defineProperties(ReadableStreamBYOBReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n      });\n      if (typeof SymbolPolyfill.toStringTag === \"symbol\") {\n        Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {\n          value: \"ReadableStreamBYOBReader\",\n          configurable: true\n        });\n      }\n      function IsReadableStreamBYOBReader(x2) {\n        if (!typeIsObject(x2)) {\n          return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x2, \"_readIntoRequests\")) {\n          return false;\n        }\n        return x2 instanceof ReadableStreamBYOBReader;\n      }\n      function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === \"errored\") {\n          readIntoRequest._errorSteps(stream._storedError);\n        } else {\n          ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);\n        }\n      }\n      function byobReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n      }\n      function ExtractHighWaterMark(strategy, defaultHWM) {\n        const { highWaterMark } = strategy;\n        if (highWaterMark === void 0) {\n          return defaultHWM;\n        }\n        if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n          throw new RangeError(\"Invalid highWaterMark\");\n        }\n        return highWaterMark;\n      }\n      function ExtractSizeAlgorithm(strategy) {\n        const { size } = strategy;\n        if (!size) {\n          return () => 1;\n        }\n        return size;\n      }\n      function convertQueuingStrategy(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        const size = init === null || init === void 0 ? void 0 : init.size;\n        return {\n          highWaterMark: highWaterMark === void 0 ? void 0 : convertUnrestrictedDouble(highWaterMark),\n          size: size === void 0 ? void 0 : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n        };\n      }\n      function convertQueuingStrategySize(fn, context) {\n        assertFunction(fn, context);\n        return (chunk) => convertUnrestrictedDouble(fn(chunk));\n      }\n      function convertUnderlyingSink(original, context) {\n        assertDictionary(original, context);\n        const abort = original === null || original === void 0 ? void 0 : original.abort;\n        const close = original === null || original === void 0 ? void 0 : original.close;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        const write = original === null || original === void 0 ? void 0 : original.write;\n        return {\n          abort: abort === void 0 ? void 0 : convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),\n          close: close === void 0 ? void 0 : convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),\n          start: start === void 0 ? void 0 : convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),\n          write: write === void 0 ? void 0 : convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),\n          type\n        };\n      }\n      function convertUnderlyingSinkAbortCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n      }\n      function convertUnderlyingSinkCloseCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return () => promiseCall(fn, original, []);\n      }\n      function convertUnderlyingSinkStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n      }\n      function convertUnderlyingSinkWriteCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n      }\n      function assertWritableStream(x2, context) {\n        if (!IsWritableStream(x2)) {\n          throw new TypeError(`${context} is not a WritableStream.`);\n        }\n      }\n      function isAbortSignal2(value) {\n        if (typeof value !== \"object\" || value === null) {\n          return false;\n        }\n        try {\n          return typeof value.aborted === \"boolean\";\n        } catch (_a) {\n          return false;\n        }\n      }\n      const supportsAbortController = typeof AbortController === \"function\";\n      function createAbortController() {\n        if (supportsAbortController) {\n          return new AbortController();\n        }\n        return void 0;\n      }\n      class WritableStream {\n        constructor(rawUnderlyingSink = {}, rawStrategy = {}) {\n          if (rawUnderlyingSink === void 0) {\n            rawUnderlyingSink = null;\n          } else {\n            assertObject(rawUnderlyingSink, \"First parameter\");\n          }\n          const strategy = convertQueuingStrategy(rawStrategy, \"Second parameter\");\n          const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, \"First parameter\");\n          InitializeWritableStream(this);\n          const type = underlyingSink.type;\n          if (type !== void 0) {\n            throw new RangeError(\"Invalid type is specified\");\n          }\n          const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n          const highWaterMark = ExtractHighWaterMark(strategy, 1);\n          SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n        }\n        get locked() {\n          if (!IsWritableStream(this)) {\n            throw streamBrandCheckException$2(\"locked\");\n          }\n          return IsWritableStreamLocked(this);\n        }\n        abort(reason = void 0) {\n          if (!IsWritableStream(this)) {\n            return promiseRejectedWith(streamBrandCheckException$2(\"abort\"));\n          }\n          if (IsWritableStreamLocked(this)) {\n            return promiseRejectedWith(new TypeError(\"Cannot abort a stream that already has a writer\"));\n          }\n          return WritableStreamAbort(this, reason);\n        }\n        close() {\n          if (!IsWritableStream(this)) {\n            return promiseRejectedWith(streamBrandCheckException$2(\"close\"));\n          }\n          if (IsWritableStreamLocked(this)) {\n            return promiseRejectedWith(new TypeError(\"Cannot close a stream that already has a writer\"));\n          }\n          if (WritableStreamCloseQueuedOrInFlight(this)) {\n            return promiseRejectedWith(new TypeError(\"Cannot close an already-closing stream\"));\n          }\n          return WritableStreamClose(this);\n        }\n        getWriter() {\n          if (!IsWritableStream(this)) {\n            throw streamBrandCheckException$2(\"getWriter\");\n          }\n          return AcquireWritableStreamDefaultWriter(this);\n        }\n      }\n      Object.defineProperties(WritableStream.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        getWriter: { enumerable: true },\n        locked: { enumerable: true }\n      });\n      if (typeof SymbolPolyfill.toStringTag === \"symbol\") {\n        Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {\n          value: \"WritableStream\",\n          configurable: true\n        });\n      }\n      function AcquireWritableStreamDefaultWriter(stream) {\n        return new WritableStreamDefaultWriter(stream);\n      }\n      function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(WritableStream.prototype);\n        InitializeWritableStream(stream);\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n      }\n      function InitializeWritableStream(stream) {\n        stream._state = \"writable\";\n        stream._storedError = void 0;\n        stream._writer = void 0;\n        stream._writableStreamController = void 0;\n        stream._writeRequests = new SimpleQueue();\n        stream._inFlightWriteRequest = void 0;\n        stream._closeRequest = void 0;\n        stream._inFlightCloseRequest = void 0;\n        stream._pendingAbortRequest = void 0;\n        stream._backpressure = false;\n      }\n      function IsWritableStream(x2) {\n        if (!typeIsObject(x2)) {\n          return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x2, \"_writableStreamController\")) {\n          return false;\n        }\n        return x2 instanceof WritableStream;\n      }\n      function IsWritableStreamLocked(stream) {\n        if (stream._writer === void 0) {\n          return false;\n        }\n        return true;\n      }\n      function WritableStreamAbort(stream, reason) {\n        var _a;\n        if (stream._state === \"closed\" || stream._state === \"errored\") {\n          return promiseResolvedWith(void 0);\n        }\n        stream._writableStreamController._abortReason = reason;\n        (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        const state = stream._state;\n        if (state === \"closed\" || state === \"errored\") {\n          return promiseResolvedWith(void 0);\n        }\n        if (stream._pendingAbortRequest !== void 0) {\n          return stream._pendingAbortRequest._promise;\n        }\n        let wasAlreadyErroring = false;\n        if (state === \"erroring\") {\n          wasAlreadyErroring = true;\n          reason = void 0;\n        }\n        const promise = newPromise((resolve, reject) => {\n          stream._pendingAbortRequest = {\n            _promise: void 0,\n            _resolve: resolve,\n            _reject: reject,\n            _reason: reason,\n            _wasAlreadyErroring: wasAlreadyErroring\n          };\n        });\n        stream._pendingAbortRequest._promise = promise;\n        if (!wasAlreadyErroring) {\n          WritableStreamStartErroring(stream, reason);\n        }\n        return promise;\n      }\n      function WritableStreamClose(stream) {\n        const state = stream._state;\n        if (state === \"closed\" || state === \"errored\") {\n          return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));\n        }\n        const promise = newPromise((resolve, reject) => {\n          const closeRequest = {\n            _resolve: resolve,\n            _reject: reject\n          };\n          stream._closeRequest = closeRequest;\n        });\n        const writer = stream._writer;\n        if (writer !== void 0 && stream._backpressure && state === \"writable\") {\n          defaultWriterReadyPromiseResolve(writer);\n        }\n        WritableStreamDefaultControllerClose(stream._writableStreamController);\n        return promise;\n      }\n      function WritableStreamAddWriteRequest(stream) {\n        const promise = newPromise((resolve, reject) => {\n          const writeRequest = {\n            _resolve: resolve,\n            _reject: reject\n          };\n          stream._writeRequests.push(writeRequest);\n        });\n        return promise;\n      }\n      function WritableStreamDealWithRejection(stream, error) {\n        const state = stream._state;\n        if (state === \"writable\") {\n          WritableStreamStartErroring(stream, error);\n          return;\n        }\n        WritableStreamFinishErroring(stream);\n      }\n      function WritableStreamStartErroring(stream, reason) {\n        const controller = stream._writableStreamController;\n        stream._state = \"erroring\";\n        stream._storedError = reason;\n        const writer = stream._writer;\n        if (writer !== void 0) {\n          WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n        }\n        if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n          WritableStreamFinishErroring(stream);\n        }\n      }\n      function WritableStreamFinishErroring(stream) {\n        stream._state = \"errored\";\n        stream._writableStreamController[ErrorSteps]();\n        const storedError = stream._storedError;\n        stream._writeRequests.forEach((writeRequest) => {\n          writeRequest._reject(storedError);\n        });\n        stream._writeRequests = new SimpleQueue();\n        if (stream._pendingAbortRequest === void 0) {\n          WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n          return;\n        }\n        const abortRequest = stream._pendingAbortRequest;\n        stream._pendingAbortRequest = void 0;\n        if (abortRequest._wasAlreadyErroring) {\n          abortRequest._reject(storedError);\n          WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n          return;\n        }\n        const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n        uponPromise(promise, () => {\n          abortRequest._resolve();\n          WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        }, (reason) => {\n          abortRequest._reject(reason);\n          WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        });\n      }\n      function WritableStreamFinishInFlightWrite(stream) {\n        stream._inFlightWriteRequest._resolve(void 0);\n        stream._inFlightWriteRequest = void 0;\n      }\n      function WritableStreamFinishInFlightWriteWithError(stream, error) {\n        stream._inFlightWriteRequest._reject(error);\n        stream._inFlightWriteRequest = void 0;\n        WritableStreamDealWithRejection(stream, error);\n      }\n      function WritableStreamFinishInFlightClose(stream) {\n        stream._inFlightCloseRequest._resolve(void 0);\n        stream._inFlightCloseRequest = void 0;\n        const state = stream._state;\n        if (state === \"erroring\") {\n          stream._storedError = void 0;\n          if (stream._pendingAbortRequest !== void 0) {\n            stream._pendingAbortRequest._resolve();\n            stream._pendingAbortRequest = void 0;\n          }\n        }\n        stream._state = \"closed\";\n        const writer = stream._writer;\n        if (writer !== void 0) {\n          defaultWriterClosedPromiseResolve(writer);\n        }\n      }\n      function WritableStreamFinishInFlightCloseWithError(stream, error) {\n        stream._inFlightCloseRequest._reject(error);\n        stream._inFlightCloseRequest = void 0;\n        if (stream._pendingAbortRequest !== void 0) {\n          stream._pendingAbortRequest._reject(error);\n          stream._pendingAbortRequest = void 0;\n        }\n        WritableStreamDealWithRejection(stream, error);\n      }\n      function WritableStreamCloseQueuedOrInFlight(stream) {\n        if (stream._closeRequest === void 0 && stream._inFlightCloseRequest === void 0) {\n          return false;\n        }\n        return true;\n      }\n      function WritableStreamHasOperationMarkedInFlight(stream) {\n        if (stream._inFlightWriteRequest === void 0 && stream._inFlightCloseRequest === void 0) {\n          return false;\n        }\n        return true;\n      }\n      function WritableStreamMarkCloseRequestInFlight(stream) {\n        stream._inFlightCloseRequest = stream._closeRequest;\n        stream._closeRequest = void 0;\n      }\n      function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n        stream._inFlightWriteRequest = stream._writeRequests.shift();\n      }\n      function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n        if (stream._closeRequest !== void 0) {\n          stream._closeRequest._reject(stream._storedError);\n          stream._closeRequest = void 0;\n        }\n        const writer = stream._writer;\n        if (writer !== void 0) {\n          defaultWriterClosedPromiseReject(writer, stream._storedError);\n        }\n      }\n      function WritableStreamUpdateBackpressure(stream, backpressure) {\n        const writer = stream._writer;\n        if (writer !== void 0 && backpressure !== stream._backpressure) {\n          if (backpressure) {\n            defaultWriterReadyPromiseReset(writer);\n          } else {\n            defaultWriterReadyPromiseResolve(writer);\n          }\n        }\n        stream._backpressure = backpressure;\n      }\n      class WritableStreamDefaultWriter {\n        constructor(stream) {\n          assertRequiredArgument(stream, 1, \"WritableStreamDefaultWriter\");\n          assertWritableStream(stream, \"First parameter\");\n          if (IsWritableStreamLocked(stream)) {\n            throw new TypeError(\"This stream has already been locked for exclusive writing by another writer\");\n          }\n          this._ownerWritableStream = stream;\n          stream._writer = this;\n          const state = stream._state;\n          if (state === \"writable\") {\n            if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n              defaultWriterReadyPromiseInitialize(this);\n            } else {\n              defaultWriterReadyPromiseInitializeAsResolved(this);\n            }\n            defaultWriterClosedPromiseInitialize(this);\n          } else if (state === \"erroring\") {\n            defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n            defaultWriterClosedPromiseInitialize(this);\n          } else if (state === \"closed\") {\n            defaultWriterReadyPromiseInitializeAsResolved(this);\n            defaultWriterClosedPromiseInitializeAsResolved(this);\n          } else {\n            const storedError = stream._storedError;\n            defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n            defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n          }\n        }\n        get closed() {\n          if (!IsWritableStreamDefaultWriter(this)) {\n            return promiseRejectedWith(defaultWriterBrandCheckException(\"closed\"));\n          }\n          return this._closedPromise;\n        }\n        get desiredSize() {\n          if (!IsWritableStreamDefaultWriter(this)) {\n            throw defaultWriterBrandCheckException(\"desiredSize\");\n          }\n          if (this._ownerWritableStream === void 0) {\n            throw defaultWriterLockException(\"desiredSize\");\n          }\n          return WritableStreamDefaultWriterGetDesiredSize(this);\n        }\n        get ready() {\n          if (!IsWritableStreamDefaultWriter(this)) {\n            return promiseRejectedWith(defaultWriterBrandCheckException(\"ready\"));\n          }\n          return this._readyPromise;\n        }\n        abort(reason = void 0) {\n          if (!IsWritableStreamDefaultWriter(this)) {\n            return promiseRejectedWith(defaultWriterBrandCheckException(\"abort\"));\n          }\n          if (this._ownerWritableStream === void 0) {\n            return promiseRejectedWith(defaultWriterLockException(\"abort\"));\n          }\n          return WritableStreamDefaultWriterAbort(this, reason);\n        }\n        close() {\n          if (!IsWritableStreamDefaultWriter(this)) {\n            return promiseRejectedWith(defaultWriterBrandCheckException(\"close\"));\n          }\n          const stream = this._ownerWritableStream;\n          if (stream === void 0) {\n            return promiseRejectedWith(defaultWriterLockException(\"close\"));\n          }\n          if (WritableStreamCloseQueuedOrInFlight(stream)) {\n            return promiseRejectedWith(new TypeError(\"Cannot close an already-closing stream\"));\n          }\n          return WritableStreamDefaultWriterClose(this);\n        }\n        releaseLock() {\n          if (!IsWritableStreamDefaultWriter(this)) {\n            throw defaultWriterBrandCheckException(\"releaseLock\");\n          }\n          const stream = this._ownerWritableStream;\n          if (stream === void 0) {\n            return;\n          }\n          WritableStreamDefaultWriterRelease(this);\n        }\n        write(chunk = void 0) {\n          if (!IsWritableStreamDefaultWriter(this)) {\n            return promiseRejectedWith(defaultWriterBrandCheckException(\"write\"));\n          }\n          if (this._ownerWritableStream === void 0) {\n            return promiseRejectedWith(defaultWriterLockException(\"write to\"));\n          }\n          return WritableStreamDefaultWriterWrite(this, chunk);\n        }\n      }\n      Object.defineProperties(WritableStreamDefaultWriter.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        releaseLock: { enumerable: true },\n        write: { enumerable: true },\n        closed: { enumerable: true },\n        desiredSize: { enumerable: true },\n        ready: { enumerable: true }\n      });\n      if (typeof SymbolPolyfill.toStringTag === \"symbol\") {\n        Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {\n          value: \"WritableStreamDefaultWriter\",\n          configurable: true\n        });\n      }\n      function IsWritableStreamDefaultWriter(x2) {\n        if (!typeIsObject(x2)) {\n          return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x2, \"_ownerWritableStream\")) {\n          return false;\n        }\n        return x2 instanceof WritableStreamDefaultWriter;\n      }\n      function WritableStreamDefaultWriterAbort(writer, reason) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamAbort(stream, reason);\n      }\n      function WritableStreamDefaultWriterClose(writer) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamClose(stream);\n      }\n      function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === \"closed\") {\n          return promiseResolvedWith(void 0);\n        }\n        if (state === \"errored\") {\n          return promiseRejectedWith(stream._storedError);\n        }\n        return WritableStreamDefaultWriterClose(writer);\n      }\n      function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n        if (writer._closedPromiseState === \"pending\") {\n          defaultWriterClosedPromiseReject(writer, error);\n        } else {\n          defaultWriterClosedPromiseResetToRejected(writer, error);\n        }\n      }\n      function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n        if (writer._readyPromiseState === \"pending\") {\n          defaultWriterReadyPromiseReject(writer, error);\n        } else {\n          defaultWriterReadyPromiseResetToRejected(writer, error);\n        }\n      }\n      function WritableStreamDefaultWriterGetDesiredSize(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (state === \"errored\" || state === \"erroring\") {\n          return null;\n        }\n        if (state === \"closed\") {\n          return 0;\n        }\n        return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n      }\n      function WritableStreamDefaultWriterRelease(writer) {\n        const stream = writer._ownerWritableStream;\n        const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);\n        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n        WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n        stream._writer = void 0;\n        writer._ownerWritableStream = void 0;\n      }\n      function WritableStreamDefaultWriterWrite(writer, chunk) {\n        const stream = writer._ownerWritableStream;\n        const controller = stream._writableStreamController;\n        const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n        if (stream !== writer._ownerWritableStream) {\n          return promiseRejectedWith(defaultWriterLockException(\"write to\"));\n        }\n        const state = stream._state;\n        if (state === \"errored\") {\n          return promiseRejectedWith(stream._storedError);\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === \"closed\") {\n          return promiseRejectedWith(new TypeError(\"The stream is closing or closed and cannot be written to\"));\n        }\n        if (state === \"erroring\") {\n          return promiseRejectedWith(stream._storedError);\n        }\n        const promise = WritableStreamAddWriteRequest(stream);\n        WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n        return promise;\n      }\n      const closeSentinel = {};\n      class WritableStreamDefaultController {\n        constructor() {\n          throw new TypeError(\"Illegal constructor\");\n        }\n        get abortReason() {\n          if (!IsWritableStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException$2(\"abortReason\");\n          }\n          return this._abortReason;\n        }\n        get signal() {\n          if (!IsWritableStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException$2(\"signal\");\n          }\n          if (this._abortController === void 0) {\n            throw new TypeError(\"WritableStreamDefaultController.prototype.signal is not supported\");\n          }\n          return this._abortController.signal;\n        }\n        error(e2 = void 0) {\n          if (!IsWritableStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException$2(\"error\");\n          }\n          const state = this._controlledWritableStream._state;\n          if (state !== \"writable\") {\n            return;\n          }\n          WritableStreamDefaultControllerError(this, e2);\n        }\n        [AbortSteps](reason) {\n          const result = this._abortAlgorithm(reason);\n          WritableStreamDefaultControllerClearAlgorithms(this);\n          return result;\n        }\n        [ErrorSteps]() {\n          ResetQueue(this);\n        }\n      }\n      Object.defineProperties(WritableStreamDefaultController.prototype, {\n        abortReason: { enumerable: true },\n        signal: { enumerable: true },\n        error: { enumerable: true }\n      });\n      if (typeof SymbolPolyfill.toStringTag === \"symbol\") {\n        Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n          value: \"WritableStreamDefaultController\",\n          configurable: true\n        });\n      }\n      function IsWritableStreamDefaultController(x2) {\n        if (!typeIsObject(x2)) {\n          return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x2, \"_controlledWritableStream\")) {\n          return false;\n        }\n        return x2 instanceof WritableStreamDefaultController;\n      }\n      function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledWritableStream = stream;\n        stream._writableStreamController = controller;\n        controller._queue = void 0;\n        controller._queueTotalSize = void 0;\n        ResetQueue(controller);\n        controller._abortReason = void 0;\n        controller._abortController = createAbortController();\n        controller._started = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._writeAlgorithm = writeAlgorithm;\n        controller._closeAlgorithm = closeAlgorithm;\n        controller._abortAlgorithm = abortAlgorithm;\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n        const startResult = startAlgorithm();\n        const startPromise = promiseResolvedWith(startResult);\n        uponPromise(startPromise, () => {\n          controller._started = true;\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, (r2) => {\n          controller._started = true;\n          WritableStreamDealWithRejection(stream, r2);\n        });\n      }\n      function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        let startAlgorithm = () => void 0;\n        let writeAlgorithm = () => promiseResolvedWith(void 0);\n        let closeAlgorithm = () => promiseResolvedWith(void 0);\n        let abortAlgorithm = () => promiseResolvedWith(void 0);\n        if (underlyingSink.start !== void 0) {\n          startAlgorithm = () => underlyingSink.start(controller);\n        }\n        if (underlyingSink.write !== void 0) {\n          writeAlgorithm = (chunk) => underlyingSink.write(chunk, controller);\n        }\n        if (underlyingSink.close !== void 0) {\n          closeAlgorithm = () => underlyingSink.close();\n        }\n        if (underlyingSink.abort !== void 0) {\n          abortAlgorithm = (reason) => underlyingSink.abort(reason);\n        }\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n      }\n      function WritableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._writeAlgorithm = void 0;\n        controller._closeAlgorithm = void 0;\n        controller._abortAlgorithm = void 0;\n        controller._strategySizeAlgorithm = void 0;\n      }\n      function WritableStreamDefaultControllerClose(controller) {\n        EnqueueValueWithSize(controller, closeSentinel, 0);\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n      }\n      function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n        try {\n          return controller._strategySizeAlgorithm(chunk);\n        } catch (chunkSizeE) {\n          WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n          return 1;\n        }\n      }\n      function WritableStreamDefaultControllerGetDesiredSize(controller) {\n        return controller._strategyHWM - controller._queueTotalSize;\n      }\n      function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n        try {\n          EnqueueValueWithSize(controller, chunk, chunkSize);\n        } catch (enqueueE) {\n          WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n          return;\n        }\n        const stream = controller._controlledWritableStream;\n        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === \"writable\") {\n          const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n          WritableStreamUpdateBackpressure(stream, backpressure);\n        }\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n      }\n      function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n        const stream = controller._controlledWritableStream;\n        if (!controller._started) {\n          return;\n        }\n        if (stream._inFlightWriteRequest !== void 0) {\n          return;\n        }\n        const state = stream._state;\n        if (state === \"erroring\") {\n          WritableStreamFinishErroring(stream);\n          return;\n        }\n        if (controller._queue.length === 0) {\n          return;\n        }\n        const value = PeekQueueValue(controller);\n        if (value === closeSentinel) {\n          WritableStreamDefaultControllerProcessClose(controller);\n        } else {\n          WritableStreamDefaultControllerProcessWrite(controller, value);\n        }\n      }\n      function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n        if (controller._controlledWritableStream._state === \"writable\") {\n          WritableStreamDefaultControllerError(controller, error);\n        }\n      }\n      function WritableStreamDefaultControllerProcessClose(controller) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkCloseRequestInFlight(stream);\n        DequeueValue(controller);\n        const sinkClosePromise = controller._closeAlgorithm();\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(sinkClosePromise, () => {\n          WritableStreamFinishInFlightClose(stream);\n        }, (reason) => {\n          WritableStreamFinishInFlightCloseWithError(stream, reason);\n        });\n      }\n      function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkFirstWriteRequestInFlight(stream);\n        const sinkWritePromise = controller._writeAlgorithm(chunk);\n        uponPromise(sinkWritePromise, () => {\n          WritableStreamFinishInFlightWrite(stream);\n          const state = stream._state;\n          DequeueValue(controller);\n          if (!WritableStreamCloseQueuedOrInFlight(stream) && state === \"writable\") {\n            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n            WritableStreamUpdateBackpressure(stream, backpressure);\n          }\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, (reason) => {\n          if (stream._state === \"writable\") {\n            WritableStreamDefaultControllerClearAlgorithms(controller);\n          }\n          WritableStreamFinishInFlightWriteWithError(stream, reason);\n        });\n      }\n      function WritableStreamDefaultControllerGetBackpressure(controller) {\n        const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n        return desiredSize <= 0;\n      }\n      function WritableStreamDefaultControllerError(controller, error) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        WritableStreamStartErroring(stream, error);\n      }\n      function streamBrandCheckException$2(name) {\n        return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n      }\n      function defaultControllerBrandCheckException$2(name) {\n        return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n      }\n      function defaultWriterBrandCheckException(name) {\n        return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n      }\n      function defaultWriterLockException(name) {\n        return new TypeError(\"Cannot \" + name + \" a stream using a released writer\");\n      }\n      function defaultWriterClosedPromiseInitialize(writer) {\n        writer._closedPromise = newPromise((resolve, reject) => {\n          writer._closedPromise_resolve = resolve;\n          writer._closedPromise_reject = reject;\n          writer._closedPromiseState = \"pending\";\n        });\n      }\n      function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseReject(writer, reason);\n      }\n      function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseResolve(writer);\n      }\n      function defaultWriterClosedPromiseReject(writer, reason) {\n        if (writer._closedPromise_reject === void 0) {\n          return;\n        }\n        setPromiseIsHandledToTrue(writer._closedPromise);\n        writer._closedPromise_reject(reason);\n        writer._closedPromise_resolve = void 0;\n        writer._closedPromise_reject = void 0;\n        writer._closedPromiseState = \"rejected\";\n      }\n      function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n      }\n      function defaultWriterClosedPromiseResolve(writer) {\n        if (writer._closedPromise_resolve === void 0) {\n          return;\n        }\n        writer._closedPromise_resolve(void 0);\n        writer._closedPromise_resolve = void 0;\n        writer._closedPromise_reject = void 0;\n        writer._closedPromiseState = \"resolved\";\n      }\n      function defaultWriterReadyPromiseInitialize(writer) {\n        writer._readyPromise = newPromise((resolve, reject) => {\n          writer._readyPromise_resolve = resolve;\n          writer._readyPromise_reject = reject;\n        });\n        writer._readyPromiseState = \"pending\";\n      }\n      function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseReject(writer, reason);\n      }\n      function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseResolve(writer);\n      }\n      function defaultWriterReadyPromiseReject(writer, reason) {\n        if (writer._readyPromise_reject === void 0) {\n          return;\n        }\n        setPromiseIsHandledToTrue(writer._readyPromise);\n        writer._readyPromise_reject(reason);\n        writer._readyPromise_resolve = void 0;\n        writer._readyPromise_reject = void 0;\n        writer._readyPromiseState = \"rejected\";\n      }\n      function defaultWriterReadyPromiseReset(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n      }\n      function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n      }\n      function defaultWriterReadyPromiseResolve(writer) {\n        if (writer._readyPromise_resolve === void 0) {\n          return;\n        }\n        writer._readyPromise_resolve(void 0);\n        writer._readyPromise_resolve = void 0;\n        writer._readyPromise_reject = void 0;\n        writer._readyPromiseState = \"fulfilled\";\n      }\n      const NativeDOMException = typeof DOMException !== \"undefined\" ? DOMException : void 0;\n      function isDOMExceptionConstructor(ctor) {\n        if (!(typeof ctor === \"function\" || typeof ctor === \"object\")) {\n          return false;\n        }\n        try {\n          new ctor();\n          return true;\n        } catch (_a) {\n          return false;\n        }\n      }\n      function createDOMExceptionPolyfill() {\n        const ctor = function DOMException3(message, name) {\n          this.message = message || \"\";\n          this.name = name || \"Error\";\n          if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n          }\n        };\n        ctor.prototype = Object.create(Error.prototype);\n        Object.defineProperty(ctor.prototype, \"constructor\", { value: ctor, writable: true, configurable: true });\n        return ctor;\n      }\n      const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n      function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n        const reader = AcquireReadableStreamDefaultReader(source);\n        const writer = AcquireWritableStreamDefaultWriter(dest);\n        source._disturbed = true;\n        let shuttingDown = false;\n        let currentWrite = promiseResolvedWith(void 0);\n        return newPromise((resolve, reject) => {\n          let abortAlgorithm;\n          if (signal !== void 0) {\n            abortAlgorithm = () => {\n              const error = new DOMException$1(\"Aborted\", \"AbortError\");\n              const actions = [];\n              if (!preventAbort) {\n                actions.push(() => {\n                  if (dest._state === \"writable\") {\n                    return WritableStreamAbort(dest, error);\n                  }\n                  return promiseResolvedWith(void 0);\n                });\n              }\n              if (!preventCancel) {\n                actions.push(() => {\n                  if (source._state === \"readable\") {\n                    return ReadableStreamCancel(source, error);\n                  }\n                  return promiseResolvedWith(void 0);\n                });\n              }\n              shutdownWithAction(() => Promise.all(actions.map((action) => action())), true, error);\n            };\n            if (signal.aborted) {\n              abortAlgorithm();\n              return;\n            }\n            signal.addEventListener(\"abort\", abortAlgorithm);\n          }\n          function pipeLoop() {\n            return newPromise((resolveLoop, rejectLoop) => {\n              function next(done) {\n                if (done) {\n                  resolveLoop();\n                } else {\n                  PerformPromiseThen(pipeStep(), next, rejectLoop);\n                }\n              }\n              next(false);\n            });\n          }\n          function pipeStep() {\n            if (shuttingDown) {\n              return promiseResolvedWith(true);\n            }\n            return PerformPromiseThen(writer._readyPromise, () => {\n              return newPromise((resolveRead, rejectRead) => {\n                ReadableStreamDefaultReaderRead(reader, {\n                  _chunkSteps: (chunk) => {\n                    currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), void 0, noop2);\n                    resolveRead(false);\n                  },\n                  _closeSteps: () => resolveRead(true),\n                  _errorSteps: rejectRead\n                });\n              });\n            });\n          }\n          isOrBecomesErrored(source, reader._closedPromise, (storedError) => {\n            if (!preventAbort) {\n              shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesErrored(dest, writer._closedPromise, (storedError) => {\n            if (!preventCancel) {\n              shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesClosed(source, reader._closedPromise, () => {\n            if (!preventClose) {\n              shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n            } else {\n              shutdown();\n            }\n          });\n          if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === \"closed\") {\n            const destClosed = new TypeError(\"the destination writable stream closed before all data could be piped to it\");\n            if (!preventCancel) {\n              shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n            } else {\n              shutdown(true, destClosed);\n            }\n          }\n          setPromiseIsHandledToTrue(pipeLoop());\n          function waitForWritesToFinish() {\n            const oldCurrentWrite = currentWrite;\n            return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : void 0);\n          }\n          function isOrBecomesErrored(stream, promise, action) {\n            if (stream._state === \"errored\") {\n              action(stream._storedError);\n            } else {\n              uponRejection(promise, action);\n            }\n          }\n          function isOrBecomesClosed(stream, promise, action) {\n            if (stream._state === \"closed\") {\n              action();\n            } else {\n              uponFulfillment(promise, action);\n            }\n          }\n          function shutdownWithAction(action, originalIsError, originalError) {\n            if (shuttingDown) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === \"writable\" && !WritableStreamCloseQueuedOrInFlight(dest)) {\n              uponFulfillment(waitForWritesToFinish(), doTheRest);\n            } else {\n              doTheRest();\n            }\n            function doTheRest() {\n              uponPromise(action(), () => finalize(originalIsError, originalError), (newError) => finalize(true, newError));\n            }\n          }\n          function shutdown(isError, error) {\n            if (shuttingDown) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === \"writable\" && !WritableStreamCloseQueuedOrInFlight(dest)) {\n              uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n            } else {\n              finalize(isError, error);\n            }\n          }\n          function finalize(isError, error) {\n            WritableStreamDefaultWriterRelease(writer);\n            ReadableStreamReaderGenericRelease(reader);\n            if (signal !== void 0) {\n              signal.removeEventListener(\"abort\", abortAlgorithm);\n            }\n            if (isError) {\n              reject(error);\n            } else {\n              resolve(void 0);\n            }\n          }\n        });\n      }\n      class ReadableStreamDefaultController {\n        constructor() {\n          throw new TypeError(\"Illegal constructor\");\n        }\n        get desiredSize() {\n          if (!IsReadableStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException$1(\"desiredSize\");\n          }\n          return ReadableStreamDefaultControllerGetDesiredSize(this);\n        }\n        close() {\n          if (!IsReadableStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException$1(\"close\");\n          }\n          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n            throw new TypeError(\"The stream is not in a state that permits close\");\n          }\n          ReadableStreamDefaultControllerClose(this);\n        }\n        enqueue(chunk = void 0) {\n          if (!IsReadableStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException$1(\"enqueue\");\n          }\n          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n            throw new TypeError(\"The stream is not in a state that permits enqueue\");\n          }\n          return ReadableStreamDefaultControllerEnqueue(this, chunk);\n        }\n        error(e2 = void 0) {\n          if (!IsReadableStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException$1(\"error\");\n          }\n          ReadableStreamDefaultControllerError(this, e2);\n        }\n        [CancelSteps](reason) {\n          ResetQueue(this);\n          const result = this._cancelAlgorithm(reason);\n          ReadableStreamDefaultControllerClearAlgorithms(this);\n          return result;\n        }\n        [PullSteps](readRequest) {\n          const stream = this._controlledReadableStream;\n          if (this._queue.length > 0) {\n            const chunk = DequeueValue(this);\n            if (this._closeRequested && this._queue.length === 0) {\n              ReadableStreamDefaultControllerClearAlgorithms(this);\n              ReadableStreamClose(stream);\n            } else {\n              ReadableStreamDefaultControllerCallPullIfNeeded(this);\n            }\n            readRequest._chunkSteps(chunk);\n          } else {\n            ReadableStreamAddReadRequest(stream, readRequest);\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n          }\n        }\n      }\n      Object.defineProperties(ReadableStreamDefaultController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        desiredSize: { enumerable: true }\n      });\n      if (typeof SymbolPolyfill.toStringTag === \"symbol\") {\n        Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n          value: \"ReadableStreamDefaultController\",\n          configurable: true\n        });\n      }\n      function IsReadableStreamDefaultController(x2) {\n        if (!typeIsObject(x2)) {\n          return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x2, \"_controlledReadableStream\")) {\n          return false;\n        }\n        return x2 instanceof ReadableStreamDefaultController;\n      }\n      function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n        if (!shouldPull) {\n          return;\n        }\n        if (controller._pulling) {\n          controller._pullAgain = true;\n          return;\n        }\n        controller._pulling = true;\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n          controller._pulling = false;\n          if (controller._pullAgain) {\n            controller._pullAgain = false;\n            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n          }\n        }, (e2) => {\n          ReadableStreamDefaultControllerError(controller, e2);\n        });\n      }\n      function ReadableStreamDefaultControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableStream;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n          return false;\n        }\n        if (!controller._started) {\n          return false;\n        }\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n          return true;\n        }\n        const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n          return true;\n        }\n        return false;\n      }\n      function ReadableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = void 0;\n        controller._cancelAlgorithm = void 0;\n        controller._strategySizeAlgorithm = void 0;\n      }\n      function ReadableStreamDefaultControllerClose(controller) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n          return;\n        }\n        const stream = controller._controlledReadableStream;\n        controller._closeRequested = true;\n        if (controller._queue.length === 0) {\n          ReadableStreamDefaultControllerClearAlgorithms(controller);\n          ReadableStreamClose(stream);\n        }\n      }\n      function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n          return;\n        }\n        const stream = controller._controlledReadableStream;\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n          ReadableStreamFulfillReadRequest(stream, chunk, false);\n        } else {\n          let chunkSize;\n          try {\n            chunkSize = controller._strategySizeAlgorithm(chunk);\n          } catch (chunkSizeE) {\n            ReadableStreamDefaultControllerError(controller, chunkSizeE);\n            throw chunkSizeE;\n          }\n          try {\n            EnqueueValueWithSize(controller, chunk, chunkSize);\n          } catch (enqueueE) {\n            ReadableStreamDefaultControllerError(controller, enqueueE);\n            throw enqueueE;\n          }\n        }\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      function ReadableStreamDefaultControllerError(controller, e2) {\n        const stream = controller._controlledReadableStream;\n        if (stream._state !== \"readable\") {\n          return;\n        }\n        ResetQueue(controller);\n        ReadableStreamDefaultControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e2);\n      }\n      function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (state === \"errored\") {\n          return null;\n        }\n        if (state === \"closed\") {\n          return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n      }\n      function ReadableStreamDefaultControllerHasBackpressure(controller) {\n        if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n          return false;\n        }\n        return true;\n      }\n      function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (!controller._closeRequested && state === \"readable\") {\n          return true;\n        }\n        return false;\n      }\n      function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledReadableStream = stream;\n        controller._queue = void 0;\n        controller._queueTotalSize = void 0;\n        ResetQueue(controller);\n        controller._started = false;\n        controller._closeRequested = false;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n          controller._started = true;\n          ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n        }, (r2) => {\n          ReadableStreamDefaultControllerError(controller, r2);\n        });\n      }\n      function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        let startAlgorithm = () => void 0;\n        let pullAlgorithm = () => promiseResolvedWith(void 0);\n        let cancelAlgorithm = () => promiseResolvedWith(void 0);\n        if (underlyingSource.start !== void 0) {\n          startAlgorithm = () => underlyingSource.start(controller);\n        }\n        if (underlyingSource.pull !== void 0) {\n          pullAlgorithm = () => underlyingSource.pull(controller);\n        }\n        if (underlyingSource.cancel !== void 0) {\n          cancelAlgorithm = (reason) => underlyingSource.cancel(reason);\n        }\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n      }\n      function defaultControllerBrandCheckException$1(name) {\n        return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n      }\n      function ReadableStreamTee(stream, cloneForBranch2) {\n        if (IsReadableByteStreamController(stream._readableStreamController)) {\n          return ReadableByteStreamTee(stream);\n        }\n        return ReadableStreamDefaultTee(stream);\n      }\n      function ReadableStreamDefaultTee(stream, cloneForBranch2) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgain = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise((resolve) => {\n          resolveCancelPromise = resolve;\n        });\n        function pullAlgorithm() {\n          if (reading) {\n            readAgain = true;\n            return promiseResolvedWith(void 0);\n          }\n          reading = true;\n          const readRequest = {\n            _chunkSteps: (chunk) => {\n              queueMicrotask(() => {\n                readAgain = false;\n                const chunk1 = chunk;\n                const chunk2 = chunk;\n                if (!canceled1) {\n                  ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);\n                }\n                if (!canceled2) {\n                  ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);\n                }\n                reading = false;\n                if (readAgain) {\n                  pullAlgorithm();\n                }\n              });\n            },\n            _closeSteps: () => {\n              reading = false;\n              if (!canceled1) {\n                ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n              }\n              if (!canceled2) {\n                ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n              }\n              if (!canceled1 || !canceled2) {\n                resolveCancelPromise(void 0);\n              }\n            },\n            _errorSteps: () => {\n              reading = false;\n            }\n          };\n          ReadableStreamDefaultReaderRead(reader, readRequest);\n          return promiseResolvedWith(void 0);\n        }\n        function cancel1Algorithm(reason) {\n          canceled1 = true;\n          reason1 = reason;\n          if (canceled2) {\n            const compositeReason = CreateArrayFromList([reason1, reason2]);\n            const cancelResult = ReadableStreamCancel(stream, compositeReason);\n            resolveCancelPromise(cancelResult);\n          }\n          return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n          canceled2 = true;\n          reason2 = reason;\n          if (canceled1) {\n            const compositeReason = CreateArrayFromList([reason1, reason2]);\n            const cancelResult = ReadableStreamCancel(stream, compositeReason);\n            resolveCancelPromise(cancelResult);\n          }\n          return cancelPromise;\n        }\n        function startAlgorithm() {\n        }\n        branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n        branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n        uponRejection(reader._closedPromise, (r2) => {\n          ReadableStreamDefaultControllerError(branch1._readableStreamController, r2);\n          ReadableStreamDefaultControllerError(branch2._readableStreamController, r2);\n          if (!canceled1 || !canceled2) {\n            resolveCancelPromise(void 0);\n          }\n        });\n        return [branch1, branch2];\n      }\n      function ReadableByteStreamTee(stream) {\n        let reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgainForBranch1 = false;\n        let readAgainForBranch2 = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise((resolve) => {\n          resolveCancelPromise = resolve;\n        });\n        function forwardReaderError(thisReader) {\n          uponRejection(thisReader._closedPromise, (r2) => {\n            if (thisReader !== reader) {\n              return;\n            }\n            ReadableByteStreamControllerError(branch1._readableStreamController, r2);\n            ReadableByteStreamControllerError(branch2._readableStreamController, r2);\n            if (!canceled1 || !canceled2) {\n              resolveCancelPromise(void 0);\n            }\n          });\n        }\n        function pullWithDefaultReader() {\n          if (IsReadableStreamBYOBReader(reader)) {\n            ReadableStreamReaderGenericRelease(reader);\n            reader = AcquireReadableStreamDefaultReader(stream);\n            forwardReaderError(reader);\n          }\n          const readRequest = {\n            _chunkSteps: (chunk) => {\n              queueMicrotask(() => {\n                readAgainForBranch1 = false;\n                readAgainForBranch2 = false;\n                const chunk1 = chunk;\n                let chunk2 = chunk;\n                if (!canceled1 && !canceled2) {\n                  try {\n                    chunk2 = CloneAsUint8Array(chunk);\n                  } catch (cloneE) {\n                    ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n                    ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n                    resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                    return;\n                  }\n                }\n                if (!canceled1) {\n                  ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n                }\n                if (!canceled2) {\n                  ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n                }\n                reading = false;\n                if (readAgainForBranch1) {\n                  pull1Algorithm();\n                } else if (readAgainForBranch2) {\n                  pull2Algorithm();\n                }\n              });\n            },\n            _closeSteps: () => {\n              reading = false;\n              if (!canceled1) {\n                ReadableByteStreamControllerClose(branch1._readableStreamController);\n              }\n              if (!canceled2) {\n                ReadableByteStreamControllerClose(branch2._readableStreamController);\n              }\n              if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n                ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n              }\n              if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n                ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n              }\n              if (!canceled1 || !canceled2) {\n                resolveCancelPromise(void 0);\n              }\n            },\n            _errorSteps: () => {\n              reading = false;\n            }\n          };\n          ReadableStreamDefaultReaderRead(reader, readRequest);\n        }\n        function pullWithBYOBReader(view, forBranch2) {\n          if (IsReadableStreamDefaultReader(reader)) {\n            ReadableStreamReaderGenericRelease(reader);\n            reader = AcquireReadableStreamBYOBReader(stream);\n            forwardReaderError(reader);\n          }\n          const byobBranch = forBranch2 ? branch2 : branch1;\n          const otherBranch = forBranch2 ? branch1 : branch2;\n          const readIntoRequest = {\n            _chunkSteps: (chunk) => {\n              queueMicrotask(() => {\n                readAgainForBranch1 = false;\n                readAgainForBranch2 = false;\n                const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                if (!otherCanceled) {\n                  let clonedChunk;\n                  try {\n                    clonedChunk = CloneAsUint8Array(chunk);\n                  } catch (cloneE) {\n                    ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n                    ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n                    resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                    return;\n                  }\n                  if (!byobCanceled) {\n                    ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                  }\n                  ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n                } else if (!byobCanceled) {\n                  ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                }\n                reading = false;\n                if (readAgainForBranch1) {\n                  pull1Algorithm();\n                } else if (readAgainForBranch2) {\n                  pull2Algorithm();\n                }\n              });\n            },\n            _closeSteps: (chunk) => {\n              reading = false;\n              const byobCanceled = forBranch2 ? canceled2 : canceled1;\n              const otherCanceled = forBranch2 ? canceled1 : canceled2;\n              if (!byobCanceled) {\n                ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n              }\n              if (!otherCanceled) {\n                ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n              }\n              if (chunk !== void 0) {\n                if (!byobCanceled) {\n                  ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                }\n                if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n                  ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n                }\n              }\n              if (!byobCanceled || !otherCanceled) {\n                resolveCancelPromise(void 0);\n              }\n            },\n            _errorSteps: () => {\n              reading = false;\n            }\n          };\n          ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n        }\n        function pull1Algorithm() {\n          if (reading) {\n            readAgainForBranch1 = true;\n            return promiseResolvedWith(void 0);\n          }\n          reading = true;\n          const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n          if (byobRequest === null) {\n            pullWithDefaultReader();\n          } else {\n            pullWithBYOBReader(byobRequest._view, false);\n          }\n          return promiseResolvedWith(void 0);\n        }\n        function pull2Algorithm() {\n          if (reading) {\n            readAgainForBranch2 = true;\n            return promiseResolvedWith(void 0);\n          }\n          reading = true;\n          const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n          if (byobRequest === null) {\n            pullWithDefaultReader();\n          } else {\n            pullWithBYOBReader(byobRequest._view, true);\n          }\n          return promiseResolvedWith(void 0);\n        }\n        function cancel1Algorithm(reason) {\n          canceled1 = true;\n          reason1 = reason;\n          if (canceled2) {\n            const compositeReason = CreateArrayFromList([reason1, reason2]);\n            const cancelResult = ReadableStreamCancel(stream, compositeReason);\n            resolveCancelPromise(cancelResult);\n          }\n          return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n          canceled2 = true;\n          reason2 = reason;\n          if (canceled1) {\n            const compositeReason = CreateArrayFromList([reason1, reason2]);\n            const cancelResult = ReadableStreamCancel(stream, compositeReason);\n            resolveCancelPromise(cancelResult);\n          }\n          return cancelPromise;\n        }\n        function startAlgorithm() {\n          return;\n        }\n        branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n        branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n        forwardReaderError(reader);\n        return [branch1, branch2];\n      }\n      function convertUnderlyingDefaultOrByteSource(source, context) {\n        assertDictionary(source, context);\n        const original = source;\n        const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;\n        const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n        const pull = original === null || original === void 0 ? void 0 : original.pull;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        return {\n          autoAllocateChunkSize: autoAllocateChunkSize === void 0 ? void 0 : convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),\n          cancel: cancel === void 0 ? void 0 : convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n          pull: pull === void 0 ? void 0 : convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),\n          start: start === void 0 ? void 0 : convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),\n          type: type === void 0 ? void 0 : convertReadableStreamType(type, `${context} has member 'type' that`)\n        };\n      }\n      function convertUnderlyingSourceCancelCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n      }\n      function convertUnderlyingSourcePullCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n      }\n      function convertUnderlyingSourceStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n      }\n      function convertReadableStreamType(type, context) {\n        type = `${type}`;\n        if (type !== \"bytes\") {\n          throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n        }\n        return type;\n      }\n      function convertReaderOptions(options, context) {\n        assertDictionary(options, context);\n        const mode = options === null || options === void 0 ? void 0 : options.mode;\n        return {\n          mode: mode === void 0 ? void 0 : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n        };\n      }\n      function convertReadableStreamReaderMode(mode, context) {\n        mode = `${mode}`;\n        if (mode !== \"byob\") {\n          throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n        }\n        return mode;\n      }\n      function convertIteratorOptions(options, context) {\n        assertDictionary(options, context);\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        return { preventCancel: Boolean(preventCancel) };\n      }\n      function convertPipeOptions(options, context) {\n        assertDictionary(options, context);\n        const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;\n        const signal = options === null || options === void 0 ? void 0 : options.signal;\n        if (signal !== void 0) {\n          assertAbortSignal(signal, `${context} has member 'signal' that`);\n        }\n        return {\n          preventAbort: Boolean(preventAbort),\n          preventCancel: Boolean(preventCancel),\n          preventClose: Boolean(preventClose),\n          signal\n        };\n      }\n      function assertAbortSignal(signal, context) {\n        if (!isAbortSignal2(signal)) {\n          throw new TypeError(`${context} is not an AbortSignal.`);\n        }\n      }\n      function convertReadableWritablePair(pair, context) {\n        assertDictionary(pair, context);\n        const readable = pair === null || pair === void 0 ? void 0 : pair.readable;\n        assertRequiredField(readable, \"readable\", \"ReadableWritablePair\");\n        assertReadableStream(readable, `${context} has member 'readable' that`);\n        const writable = pair === null || pair === void 0 ? void 0 : pair.writable;\n        assertRequiredField(writable, \"writable\", \"ReadableWritablePair\");\n        assertWritableStream(writable, `${context} has member 'writable' that`);\n        return { readable, writable };\n      }\n      class ReadableStream2 {\n        constructor(rawUnderlyingSource = {}, rawStrategy = {}) {\n          if (rawUnderlyingSource === void 0) {\n            rawUnderlyingSource = null;\n          } else {\n            assertObject(rawUnderlyingSource, \"First parameter\");\n          }\n          const strategy = convertQueuingStrategy(rawStrategy, \"Second parameter\");\n          const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, \"First parameter\");\n          InitializeReadableStream(this);\n          if (underlyingSource.type === \"bytes\") {\n            if (strategy.size !== void 0) {\n              throw new RangeError(\"The strategy for a byte stream cannot have a size function\");\n            }\n            const highWaterMark = ExtractHighWaterMark(strategy, 0);\n            SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n          } else {\n            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n            const highWaterMark = ExtractHighWaterMark(strategy, 1);\n            SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n          }\n        }\n        get locked() {\n          if (!IsReadableStream(this)) {\n            throw streamBrandCheckException$1(\"locked\");\n          }\n          return IsReadableStreamLocked(this);\n        }\n        cancel(reason = void 0) {\n          if (!IsReadableStream(this)) {\n            return promiseRejectedWith(streamBrandCheckException$1(\"cancel\"));\n          }\n          if (IsReadableStreamLocked(this)) {\n            return promiseRejectedWith(new TypeError(\"Cannot cancel a stream that already has a reader\"));\n          }\n          return ReadableStreamCancel(this, reason);\n        }\n        getReader(rawOptions = void 0) {\n          if (!IsReadableStream(this)) {\n            throw streamBrandCheckException$1(\"getReader\");\n          }\n          const options = convertReaderOptions(rawOptions, \"First parameter\");\n          if (options.mode === void 0) {\n            return AcquireReadableStreamDefaultReader(this);\n          }\n          return AcquireReadableStreamBYOBReader(this);\n        }\n        pipeThrough(rawTransform, rawOptions = {}) {\n          if (!IsReadableStream(this)) {\n            throw streamBrandCheckException$1(\"pipeThrough\");\n          }\n          assertRequiredArgument(rawTransform, 1, \"pipeThrough\");\n          const transform = convertReadableWritablePair(rawTransform, \"First parameter\");\n          const options = convertPipeOptions(rawOptions, \"Second parameter\");\n          if (IsReadableStreamLocked(this)) {\n            throw new TypeError(\"ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream\");\n          }\n          if (IsWritableStreamLocked(transform.writable)) {\n            throw new TypeError(\"ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream\");\n          }\n          const promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n          setPromiseIsHandledToTrue(promise);\n          return transform.readable;\n        }\n        pipeTo(destination, rawOptions = {}) {\n          if (!IsReadableStream(this)) {\n            return promiseRejectedWith(streamBrandCheckException$1(\"pipeTo\"));\n          }\n          if (destination === void 0) {\n            return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n          }\n          if (!IsWritableStream(destination)) {\n            return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));\n          }\n          let options;\n          try {\n            options = convertPipeOptions(rawOptions, \"Second parameter\");\n          } catch (e2) {\n            return promiseRejectedWith(e2);\n          }\n          if (IsReadableStreamLocked(this)) {\n            return promiseRejectedWith(new TypeError(\"ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream\"));\n          }\n          if (IsWritableStreamLocked(destination)) {\n            return promiseRejectedWith(new TypeError(\"ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream\"));\n          }\n          return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n        }\n        tee() {\n          if (!IsReadableStream(this)) {\n            throw streamBrandCheckException$1(\"tee\");\n          }\n          const branches = ReadableStreamTee(this);\n          return CreateArrayFromList(branches);\n        }\n        values(rawOptions = void 0) {\n          if (!IsReadableStream(this)) {\n            throw streamBrandCheckException$1(\"values\");\n          }\n          const options = convertIteratorOptions(rawOptions, \"First parameter\");\n          return AcquireReadableStreamAsyncIterator(this, options.preventCancel);\n        }\n      }\n      Object.defineProperties(ReadableStream2.prototype, {\n        cancel: { enumerable: true },\n        getReader: { enumerable: true },\n        pipeThrough: { enumerable: true },\n        pipeTo: { enumerable: true },\n        tee: { enumerable: true },\n        values: { enumerable: true },\n        locked: { enumerable: true }\n      });\n      if (typeof SymbolPolyfill.toStringTag === \"symbol\") {\n        Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.toStringTag, {\n          value: \"ReadableStream\",\n          configurable: true\n        });\n      }\n      if (typeof SymbolPolyfill.asyncIterator === \"symbol\") {\n        Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.asyncIterator, {\n          value: ReadableStream2.prototype.values,\n          writable: true,\n          configurable: true\n        });\n      }\n      function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(ReadableStream2.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n      }\n      function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {\n        const stream = Object.create(ReadableStream2.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, void 0);\n        return stream;\n      }\n      function InitializeReadableStream(stream) {\n        stream._state = \"readable\";\n        stream._reader = void 0;\n        stream._storedError = void 0;\n        stream._disturbed = false;\n      }\n      function IsReadableStream(x2) {\n        if (!typeIsObject(x2)) {\n          return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x2, \"_readableStreamController\")) {\n          return false;\n        }\n        return x2 instanceof ReadableStream2;\n      }\n      function IsReadableStreamLocked(stream) {\n        if (stream._reader === void 0) {\n          return false;\n        }\n        return true;\n      }\n      function ReadableStreamCancel(stream, reason) {\n        stream._disturbed = true;\n        if (stream._state === \"closed\") {\n          return promiseResolvedWith(void 0);\n        }\n        if (stream._state === \"errored\") {\n          return promiseRejectedWith(stream._storedError);\n        }\n        ReadableStreamClose(stream);\n        const reader = stream._reader;\n        if (reader !== void 0 && IsReadableStreamBYOBReader(reader)) {\n          reader._readIntoRequests.forEach((readIntoRequest) => {\n            readIntoRequest._closeSteps(void 0);\n          });\n          reader._readIntoRequests = new SimpleQueue();\n        }\n        const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n        return transformPromiseWith(sourceCancelPromise, noop2);\n      }\n      function ReadableStreamClose(stream) {\n        stream._state = \"closed\";\n        const reader = stream._reader;\n        if (reader === void 0) {\n          return;\n        }\n        defaultReaderClosedPromiseResolve(reader);\n        if (IsReadableStreamDefaultReader(reader)) {\n          reader._readRequests.forEach((readRequest) => {\n            readRequest._closeSteps();\n          });\n          reader._readRequests = new SimpleQueue();\n        }\n      }\n      function ReadableStreamError(stream, e2) {\n        stream._state = \"errored\";\n        stream._storedError = e2;\n        const reader = stream._reader;\n        if (reader === void 0) {\n          return;\n        }\n        defaultReaderClosedPromiseReject(reader, e2);\n        if (IsReadableStreamDefaultReader(reader)) {\n          reader._readRequests.forEach((readRequest) => {\n            readRequest._errorSteps(e2);\n          });\n          reader._readRequests = new SimpleQueue();\n        } else {\n          reader._readIntoRequests.forEach((readIntoRequest) => {\n            readIntoRequest._errorSteps(e2);\n          });\n          reader._readIntoRequests = new SimpleQueue();\n        }\n      }\n      function streamBrandCheckException$1(name) {\n        return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n      }\n      function convertQueuingStrategyInit(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        assertRequiredField(highWaterMark, \"highWaterMark\", \"QueuingStrategyInit\");\n        return {\n          highWaterMark: convertUnrestrictedDouble(highWaterMark)\n        };\n      }\n      const byteLengthSizeFunction = (chunk) => {\n        return chunk.byteLength;\n      };\n      Object.defineProperty(byteLengthSizeFunction, \"name\", {\n        value: \"size\",\n        configurable: true\n      });\n      class ByteLengthQueuingStrategy {\n        constructor(options) {\n          assertRequiredArgument(options, 1, \"ByteLengthQueuingStrategy\");\n          options = convertQueuingStrategyInit(options, \"First parameter\");\n          this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        get highWaterMark() {\n          if (!IsByteLengthQueuingStrategy(this)) {\n            throw byteLengthBrandCheckException(\"highWaterMark\");\n          }\n          return this._byteLengthQueuingStrategyHighWaterMark;\n        }\n        get size() {\n          if (!IsByteLengthQueuingStrategy(this)) {\n            throw byteLengthBrandCheckException(\"size\");\n          }\n          return byteLengthSizeFunction;\n        }\n      }\n      Object.defineProperties(ByteLengthQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n      });\n      if (typeof SymbolPolyfill.toStringTag === \"symbol\") {\n        Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n          value: \"ByteLengthQueuingStrategy\",\n          configurable: true\n        });\n      }\n      function byteLengthBrandCheckException(name) {\n        return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n      }\n      function IsByteLengthQueuingStrategy(x2) {\n        if (!typeIsObject(x2)) {\n          return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x2, \"_byteLengthQueuingStrategyHighWaterMark\")) {\n          return false;\n        }\n        return x2 instanceof ByteLengthQueuingStrategy;\n      }\n      const countSizeFunction = () => {\n        return 1;\n      };\n      Object.defineProperty(countSizeFunction, \"name\", {\n        value: \"size\",\n        configurable: true\n      });\n      class CountQueuingStrategy {\n        constructor(options) {\n          assertRequiredArgument(options, 1, \"CountQueuingStrategy\");\n          options = convertQueuingStrategyInit(options, \"First parameter\");\n          this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        get highWaterMark() {\n          if (!IsCountQueuingStrategy(this)) {\n            throw countBrandCheckException(\"highWaterMark\");\n          }\n          return this._countQueuingStrategyHighWaterMark;\n        }\n        get size() {\n          if (!IsCountQueuingStrategy(this)) {\n            throw countBrandCheckException(\"size\");\n          }\n          return countSizeFunction;\n        }\n      }\n      Object.defineProperties(CountQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n      });\n      if (typeof SymbolPolyfill.toStringTag === \"symbol\") {\n        Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n          value: \"CountQueuingStrategy\",\n          configurable: true\n        });\n      }\n      function countBrandCheckException(name) {\n        return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n      }\n      function IsCountQueuingStrategy(x2) {\n        if (!typeIsObject(x2)) {\n          return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x2, \"_countQueuingStrategyHighWaterMark\")) {\n          return false;\n        }\n        return x2 instanceof CountQueuingStrategy;\n      }\n      function convertTransformer(original, context) {\n        assertDictionary(original, context);\n        const flush = original === null || original === void 0 ? void 0 : original.flush;\n        const readableType = original === null || original === void 0 ? void 0 : original.readableType;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const transform = original === null || original === void 0 ? void 0 : original.transform;\n        const writableType = original === null || original === void 0 ? void 0 : original.writableType;\n        return {\n          flush: flush === void 0 ? void 0 : convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),\n          readableType,\n          start: start === void 0 ? void 0 : convertTransformerStartCallback(start, original, `${context} has member 'start' that`),\n          transform: transform === void 0 ? void 0 : convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),\n          writableType\n        };\n      }\n      function convertTransformerFlushCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n      }\n      function convertTransformerStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n      }\n      function convertTransformerTransformCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n      }\n      class TransformStream {\n        constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {\n          if (rawTransformer === void 0) {\n            rawTransformer = null;\n          }\n          const writableStrategy = convertQueuingStrategy(rawWritableStrategy, \"Second parameter\");\n          const readableStrategy = convertQueuingStrategy(rawReadableStrategy, \"Third parameter\");\n          const transformer = convertTransformer(rawTransformer, \"First parameter\");\n          if (transformer.readableType !== void 0) {\n            throw new RangeError(\"Invalid readableType specified\");\n          }\n          if (transformer.writableType !== void 0) {\n            throw new RangeError(\"Invalid writableType specified\");\n          }\n          const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n          const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n          const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n          const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n          let startPromise_resolve;\n          const startPromise = newPromise((resolve) => {\n            startPromise_resolve = resolve;\n          });\n          InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n          SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n          if (transformer.start !== void 0) {\n            startPromise_resolve(transformer.start(this._transformStreamController));\n          } else {\n            startPromise_resolve(void 0);\n          }\n        }\n        get readable() {\n          if (!IsTransformStream(this)) {\n            throw streamBrandCheckException(\"readable\");\n          }\n          return this._readable;\n        }\n        get writable() {\n          if (!IsTransformStream(this)) {\n            throw streamBrandCheckException(\"writable\");\n          }\n          return this._writable;\n        }\n      }\n      Object.defineProperties(TransformStream.prototype, {\n        readable: { enumerable: true },\n        writable: { enumerable: true }\n      });\n      if (typeof SymbolPolyfill.toStringTag === \"symbol\") {\n        Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {\n          value: \"TransformStream\",\n          configurable: true\n        });\n      }\n      function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n        function startAlgorithm() {\n          return startPromise;\n        }\n        function writeAlgorithm(chunk) {\n          return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n        }\n        function abortAlgorithm(reason) {\n          return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n        }\n        function closeAlgorithm() {\n          return TransformStreamDefaultSinkCloseAlgorithm(stream);\n        }\n        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n        function pullAlgorithm() {\n          return TransformStreamDefaultSourcePullAlgorithm(stream);\n        }\n        function cancelAlgorithm(reason) {\n          TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n          return promiseResolvedWith(void 0);\n        }\n        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n        stream._backpressure = void 0;\n        stream._backpressureChangePromise = void 0;\n        stream._backpressureChangePromise_resolve = void 0;\n        TransformStreamSetBackpressure(stream, true);\n        stream._transformStreamController = void 0;\n      }\n      function IsTransformStream(x2) {\n        if (!typeIsObject(x2)) {\n          return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x2, \"_transformStreamController\")) {\n          return false;\n        }\n        return x2 instanceof TransformStream;\n      }\n      function TransformStreamError(stream, e2) {\n        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e2);\n        TransformStreamErrorWritableAndUnblockWrite(stream, e2);\n      }\n      function TransformStreamErrorWritableAndUnblockWrite(stream, e2) {\n        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n        WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e2);\n        if (stream._backpressure) {\n          TransformStreamSetBackpressure(stream, false);\n        }\n      }\n      function TransformStreamSetBackpressure(stream, backpressure) {\n        if (stream._backpressureChangePromise !== void 0) {\n          stream._backpressureChangePromise_resolve();\n        }\n        stream._backpressureChangePromise = newPromise((resolve) => {\n          stream._backpressureChangePromise_resolve = resolve;\n        });\n        stream._backpressure = backpressure;\n      }\n      class TransformStreamDefaultController {\n        constructor() {\n          throw new TypeError(\"Illegal constructor\");\n        }\n        get desiredSize() {\n          if (!IsTransformStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException(\"desiredSize\");\n          }\n          const readableController = this._controlledTransformStream._readable._readableStreamController;\n          return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n        }\n        enqueue(chunk = void 0) {\n          if (!IsTransformStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException(\"enqueue\");\n          }\n          TransformStreamDefaultControllerEnqueue(this, chunk);\n        }\n        error(reason = void 0) {\n          if (!IsTransformStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException(\"error\");\n          }\n          TransformStreamDefaultControllerError(this, reason);\n        }\n        terminate() {\n          if (!IsTransformStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException(\"terminate\");\n          }\n          TransformStreamDefaultControllerTerminate(this);\n        }\n      }\n      Object.defineProperties(TransformStreamDefaultController.prototype, {\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        terminate: { enumerable: true },\n        desiredSize: { enumerable: true }\n      });\n      if (typeof SymbolPolyfill.toStringTag === \"symbol\") {\n        Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n          value: \"TransformStreamDefaultController\",\n          configurable: true\n        });\n      }\n      function IsTransformStreamDefaultController(x2) {\n        if (!typeIsObject(x2)) {\n          return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x2, \"_controlledTransformStream\")) {\n          return false;\n        }\n        return x2 instanceof TransformStreamDefaultController;\n      }\n      function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n        controller._controlledTransformStream = stream;\n        stream._transformStreamController = controller;\n        controller._transformAlgorithm = transformAlgorithm;\n        controller._flushAlgorithm = flushAlgorithm;\n      }\n      function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n        const controller = Object.create(TransformStreamDefaultController.prototype);\n        let transformAlgorithm = (chunk) => {\n          try {\n            TransformStreamDefaultControllerEnqueue(controller, chunk);\n            return promiseResolvedWith(void 0);\n          } catch (transformResultE) {\n            return promiseRejectedWith(transformResultE);\n          }\n        };\n        let flushAlgorithm = () => promiseResolvedWith(void 0);\n        if (transformer.transform !== void 0) {\n          transformAlgorithm = (chunk) => transformer.transform(chunk, controller);\n        }\n        if (transformer.flush !== void 0) {\n          flushAlgorithm = () => transformer.flush(controller);\n        }\n        SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n      }\n      function TransformStreamDefaultControllerClearAlgorithms(controller) {\n        controller._transformAlgorithm = void 0;\n        controller._flushAlgorithm = void 0;\n      }\n      function TransformStreamDefaultControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n          throw new TypeError(\"Readable side is not in a state that permits enqueue\");\n        }\n        try {\n          ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n        } catch (e2) {\n          TransformStreamErrorWritableAndUnblockWrite(stream, e2);\n          throw stream._readable._storedError;\n        }\n        const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n        if (backpressure !== stream._backpressure) {\n          TransformStreamSetBackpressure(stream, true);\n        }\n      }\n      function TransformStreamDefaultControllerError(controller, e2) {\n        TransformStreamError(controller._controlledTransformStream, e2);\n      }\n      function TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n        const transformPromise = controller._transformAlgorithm(chunk);\n        return transformPromiseWith(transformPromise, void 0, (r2) => {\n          TransformStreamError(controller._controlledTransformStream, r2);\n          throw r2;\n        });\n      }\n      function TransformStreamDefaultControllerTerminate(controller) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        ReadableStreamDefaultControllerClose(readableController);\n        const error = new TypeError(\"TransformStream terminated\");\n        TransformStreamErrorWritableAndUnblockWrite(stream, error);\n      }\n      function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n        const controller = stream._transformStreamController;\n        if (stream._backpressure) {\n          const backpressureChangePromise = stream._backpressureChangePromise;\n          return transformPromiseWith(backpressureChangePromise, () => {\n            const writable = stream._writable;\n            const state = writable._state;\n            if (state === \"erroring\") {\n              throw writable._storedError;\n            }\n            return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n          });\n        }\n        return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n      }\n      function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n        TransformStreamError(stream, reason);\n        return promiseResolvedWith(void 0);\n      }\n      function TransformStreamDefaultSinkCloseAlgorithm(stream) {\n        const readable = stream._readable;\n        const controller = stream._transformStreamController;\n        const flushPromise = controller._flushAlgorithm();\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        return transformPromiseWith(flushPromise, () => {\n          if (readable._state === \"errored\") {\n            throw readable._storedError;\n          }\n          ReadableStreamDefaultControllerClose(readable._readableStreamController);\n        }, (r2) => {\n          TransformStreamError(stream, r2);\n          throw readable._storedError;\n        });\n      }\n      function TransformStreamDefaultSourcePullAlgorithm(stream) {\n        TransformStreamSetBackpressure(stream, false);\n        return stream._backpressureChangePromise;\n      }\n      function defaultControllerBrandCheckException(name) {\n        return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n      }\n      function streamBrandCheckException(name) {\n        return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);\n      }\n      exports2.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;\n      exports2.CountQueuingStrategy = CountQueuingStrategy;\n      exports2.ReadableByteStreamController = ReadableByteStreamController;\n      exports2.ReadableStream = ReadableStream2;\n      exports2.ReadableStreamBYOBReader = ReadableStreamBYOBReader;\n      exports2.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;\n      exports2.ReadableStreamDefaultController = ReadableStreamDefaultController;\n      exports2.ReadableStreamDefaultReader = ReadableStreamDefaultReader;\n      exports2.TransformStream = TransformStream;\n      exports2.TransformStreamDefaultController = TransformStreamDefaultController;\n      exports2.WritableStream = WritableStream;\n      exports2.WritableStreamDefaultController = WritableStreamDefaultController;\n      exports2.WritableStreamDefaultWriter = WritableStreamDefaultWriter;\n      Object.defineProperty(exports2, \"__esModule\", { value: true });\n    });\n  }\n});\n\n// node_modules/fetch-blob/streams.cjs\nvar require_streams = __commonJS({\n  \"node_modules/fetch-blob/streams.cjs\"() {\n    var POOL_SIZE2 = 65536;\n    if (!globalThis.ReadableStream) {\n      try {\n        const process2 = require(\"process\");\n        const { emitWarning } = process2;\n        try {\n          process2.emitWarning = () => {\n          };\n          Object.assign(globalThis, require(\"stream/web\"));\n          process2.emitWarning = emitWarning;\n        } catch (error) {\n          process2.emitWarning = emitWarning;\n          throw error;\n        }\n      } catch (error) {\n        Object.assign(globalThis, require_ponyfill_es2018());\n      }\n    }\n    try {\n      const { Blob: Blob3 } = require(\"buffer\");\n      if (Blob3 && !Blob3.prototype.stream) {\n        Blob3.prototype.stream = function name(params) {\n          let position = 0;\n          const blob = this;\n          return new ReadableStream({\n            type: \"bytes\",\n            async pull(ctrl) {\n              const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE2));\n              const buffer = await chunk.arrayBuffer();\n              position += buffer.byteLength;\n              ctrl.enqueue(new Uint8Array(buffer));\n              if (position === blob.size) {\n                ctrl.close();\n              }\n            }\n          });\n        };\n      }\n    } catch (error) {\n    }\n  }\n});\n\n// node_modules/fetch-blob/index.js\nasync function* toIterator(parts, clone2 = true) {\n  for (const part of parts) {\n    if (\"stream\" in part) {\n      yield* part.stream();\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone2) {\n        let position = part.byteOffset;\n        const end = part.byteOffset + part.byteLength;\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE);\n          const chunk = part.buffer.slice(position, position + size);\n          position += chunk.byteLength;\n          yield new Uint8Array(chunk);\n        }\n      } else {\n        yield part;\n      }\n    } else {\n      let position = 0, b = part;\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE));\n        const buffer = await chunk.arrayBuffer();\n        position += buffer.byteLength;\n        yield new Uint8Array(buffer);\n      }\n    }\n  }\n}\nvar import_streams, POOL_SIZE, _Blob, Blob2, fetch_blob_default;\nvar init_fetch_blob = __esm({\n  \"node_modules/fetch-blob/index.js\"() {\n    import_streams = __toModule(require_streams());\n    POOL_SIZE = 65536;\n    _Blob = class Blob {\n      #parts = [];\n      #type = \"\";\n      #size = 0;\n      #endings = \"transparent\";\n      constructor(blobParts = [], options = {}) {\n        if (typeof blobParts !== \"object\" || blobParts === null) {\n          throw new TypeError(\"Failed to construct 'Blob': The provided value cannot be converted to a sequence.\");\n        }\n        if (typeof blobParts[Symbol.iterator] !== \"function\") {\n          throw new TypeError(\"Failed to construct 'Blob': The object must have a callable @@iterator property.\");\n        }\n        if (typeof options !== \"object\" && typeof options !== \"function\") {\n          throw new TypeError(\"Failed to construct 'Blob': parameter 2 cannot convert to dictionary.\");\n        }\n        if (options === null)\n          options = {};\n        const encoder = new TextEncoder();\n        for (const element of blobParts) {\n          let part;\n          if (ArrayBuffer.isView(element)) {\n            part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength));\n          } else if (element instanceof ArrayBuffer) {\n            part = new Uint8Array(element.slice(0));\n          } else if (element instanceof Blob) {\n            part = element;\n          } else {\n            part = encoder.encode(`${element}`);\n          }\n          this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size;\n          this.#parts.push(part);\n        }\n        this.#endings = `${options.endings === void 0 ? \"transparent\" : options.endings}`;\n        const type = options.type === void 0 ? \"\" : String(options.type);\n        this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : \"\";\n      }\n      get size() {\n        return this.#size;\n      }\n      get type() {\n        return this.#type;\n      }\n      async text() {\n        const decoder = new TextDecoder();\n        let str = \"\";\n        for await (const part of toIterator(this.#parts, false)) {\n          str += decoder.decode(part, { stream: true });\n        }\n        str += decoder.decode();\n        return str;\n      }\n      async arrayBuffer() {\n        const data = new Uint8Array(this.size);\n        let offset = 0;\n        for await (const chunk of toIterator(this.#parts, false)) {\n          data.set(chunk, offset);\n          offset += chunk.length;\n        }\n        return data.buffer;\n      }\n      stream() {\n        const it = toIterator(this.#parts, true);\n        return new globalThis.ReadableStream({\n          type: \"bytes\",\n          async pull(ctrl) {\n            const chunk = await it.next();\n            chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value);\n          },\n          async cancel() {\n            await it.return();\n          }\n        });\n      }\n      slice(start = 0, end = this.size, type = \"\") {\n        const { size } = this;\n        let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size);\n        let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size);\n        const span = Math.max(relativeEnd - relativeStart, 0);\n        const parts = this.#parts;\n        const blobParts = [];\n        let added = 0;\n        for (const part of parts) {\n          if (added >= span) {\n            break;\n          }\n          const size2 = ArrayBuffer.isView(part) ? part.byteLength : part.size;\n          if (relativeStart && size2 <= relativeStart) {\n            relativeStart -= size2;\n            relativeEnd -= size2;\n          } else {\n            let chunk;\n            if (ArrayBuffer.isView(part)) {\n              chunk = part.subarray(relativeStart, Math.min(size2, relativeEnd));\n              added += chunk.byteLength;\n            } else {\n              chunk = part.slice(relativeStart, Math.min(size2, relativeEnd));\n              added += chunk.size;\n            }\n            relativeEnd -= size2;\n            blobParts.push(chunk);\n            relativeStart = 0;\n          }\n        }\n        const blob = new Blob([], { type: String(type).toLowerCase() });\n        blob.#size = span;\n        blob.#parts = blobParts;\n        return blob;\n      }\n      get [Symbol.toStringTag]() {\n        return \"Blob\";\n      }\n      static [Symbol.hasInstance](object) {\n        return object && typeof object === \"object\" && typeof object.constructor === \"function\" && (typeof object.stream === \"function\" || typeof object.arrayBuffer === \"function\") && /^(Blob|File)$/.test(object[Symbol.toStringTag]);\n      }\n    };\n    Object.defineProperties(_Blob.prototype, {\n      size: { enumerable: true },\n      type: { enumerable: true },\n      slice: { enumerable: true }\n    });\n    Blob2 = _Blob;\n    fetch_blob_default = Blob2;\n  }\n});\n\n// node_modules/fetch-blob/file.js\nvar _File, File2, file_default;\nvar init_file = __esm({\n  \"node_modules/fetch-blob/file.js\"() {\n    init_fetch_blob();\n    _File = class File extends fetch_blob_default {\n      #lastModified = 0;\n      #name = \"\";\n      constructor(fileBits, fileName, options = {}) {\n        if (arguments.length < 2) {\n          throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`);\n        }\n        super(fileBits, options);\n        if (options === null)\n          options = {};\n        const lastModified = options.lastModified === void 0 ? Date.now() : Number(options.lastModified);\n        if (!Number.isNaN(lastModified)) {\n          this.#lastModified = lastModified;\n        }\n        this.#name = String(fileName);\n      }\n      get name() {\n        return this.#name;\n      }\n      get lastModified() {\n        return this.#lastModified;\n      }\n      get [Symbol.toStringTag]() {\n        return \"File\";\n      }\n      static [Symbol.hasInstance](object) {\n        return !!object && object instanceof fetch_blob_default && /^(File)$/.test(object[Symbol.toStringTag]);\n      }\n    };\n    File2 = _File;\n    file_default = File2;\n  }\n});\n\n// node_modules/formdata-polyfill/esm.min.js\nfunction formDataToBlob(F2, B = fetch_blob_default) {\n  var b = `${r()}${r()}`.replace(/\\./g, \"\").slice(-28).padStart(32, \"-\"), c = [], p = `--${b}\\r\nContent-Disposition: form-data; name=\"`;\n  F2.forEach((v, n) => typeof v == \"string\" ? c.push(p + e(n) + `\"\\r\n\\r\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, \"\\r\\n\")}\\r\n`) : c.push(p + e(n) + `\"; filename=\"${e(v.name, 1)}\"\\r\nContent-Type: ${v.type || \"application/octet-stream\"}\\r\n\\r\n`, v, \"\\r\\n\"));\n  c.push(`--${b}--`);\n  return new B(c, { type: \"multipart/form-data; boundary=\" + b });\n}\nvar t, i, h, r, m, f, e, x, FormData;\nvar init_esm_min = __esm({\n  \"node_modules/formdata-polyfill/esm.min.js\"() {\n    init_fetch_blob();\n    init_file();\n    ({ toStringTag: t, iterator: i, hasInstance: h } = Symbol);\n    r = Math.random;\n    m = \"append,set,get,getAll,delete,keys,values,entries,forEach,constructor\".split(\",\");\n    f = (a, b, c) => (a += \"\", /^(Blob|File)$/.test(b && b[t]) ? [(c = c !== void 0 ? c + \"\" : b[t] == \"File\" ? b.name : \"blob\", a), b.name !== c || b[t] == \"blob\" ? new file_default([b], c, b) : b] : [a, b + \"\"]);\n    e = (c, f3) => (f3 ? c : c.replace(/\\r?\\n|\\r/g, \"\\r\\n\")).replace(/\\n/g, \"%0A\").replace(/\\r/g, \"%0D\").replace(/\"/g, \"%22\");\n    x = (n, a, e2) => {\n      if (a.length < e2) {\n        throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e2} arguments required, but only ${a.length} present.`);\n      }\n    };\n    FormData = class FormData2 {\n      #d = [];\n      constructor(...a) {\n        if (a.length)\n          throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`);\n      }\n      get [t]() {\n        return \"FormData\";\n      }\n      [i]() {\n        return this.entries();\n      }\n      static [h](o) {\n        return o && typeof o === \"object\" && o[t] === \"FormData\" && !m.some((m2) => typeof o[m2] != \"function\");\n      }\n      append(...a) {\n        x(\"append\", arguments, 2);\n        this.#d.push(f(...a));\n      }\n      delete(a) {\n        x(\"delete\", arguments, 1);\n        a += \"\";\n        this.#d = this.#d.filter(([b]) => b !== a);\n      }\n      get(a) {\n        x(\"get\", arguments, 1);\n        a += \"\";\n        for (var b = this.#d, l = b.length, c = 0; c < l; c++)\n          if (b[c][0] === a)\n            return b[c][1];\n        return null;\n      }\n      getAll(a, b) {\n        x(\"getAll\", arguments, 1);\n        b = [];\n        a += \"\";\n        this.#d.forEach((c) => c[0] === a && b.push(c[1]));\n        return b;\n      }\n      has(a) {\n        x(\"has\", arguments, 1);\n        a += \"\";\n        return this.#d.some((b) => b[0] === a);\n      }\n      forEach(a, b) {\n        x(\"forEach\", arguments, 1);\n        for (var [c, d] of this)\n          a.call(b, d, c, this);\n      }\n      set(...a) {\n        x(\"set\", arguments, 2);\n        var b = [], c = true;\n        a = f(...a);\n        this.#d.forEach((d) => {\n          d[0] === a[0] ? c && (c = !b.push(a)) : b.push(d);\n        });\n        c && b.push(a);\n        this.#d = b;\n      }\n      *entries() {\n        yield* this.#d;\n      }\n      *keys() {\n        for (var [a] of this)\n          yield a;\n      }\n      *values() {\n        for (var [, a] of this)\n          yield a;\n      }\n    };\n  }\n});\n\n// node_modules/node-domexception/index.js\nvar require_node_domexception = __commonJS({\n  \"node_modules/node-domexception/index.js\"(exports, module2) {\n    if (!globalThis.DOMException) {\n      try {\n        const { MessageChannel } = require(\"worker_threads\"), port = new MessageChannel().port1, ab = new ArrayBuffer();\n        port.postMessage(ab, [ab, ab]);\n      } catch (err) {\n        err.constructor.name === \"DOMException\" && (globalThis.DOMException = err.constructor);\n      }\n    }\n    module2.exports = globalThis.DOMException;\n  }\n});\n\n// node_modules/fetch-blob/from.js\nvar import_node_fs, import_node_path, import_node_domexception, stat, blobFromSync, blobFrom, fileFrom, fileFromSync, fromBlob, fromFile, BlobDataItem;\nvar init_from = __esm({\n  \"node_modules/fetch-blob/from.js\"() {\n    import_node_fs = __toModule(require(\"fs\"));\n    import_node_path = __toModule(require(\"path\"));\n    import_node_domexception = __toModule(require_node_domexception());\n    init_file();\n    init_fetch_blob();\n    ({ stat } = import_node_fs.promises);\n    blobFromSync = (path, type) => fromBlob((0, import_node_fs.statSync)(path), path, type);\n    blobFrom = (path, type) => stat(path).then((stat2) => fromBlob(stat2, path, type));\n    fileFrom = (path, type) => stat(path).then((stat2) => fromFile(stat2, path, type));\n    fileFromSync = (path, type) => fromFile((0, import_node_fs.statSync)(path), path, type);\n    fromBlob = (stat2, path, type = \"\") => new fetch_blob_default([new BlobDataItem({\n      path,\n      size: stat2.size,\n      lastModified: stat2.mtimeMs,\n      start: 0\n    })], { type });\n    fromFile = (stat2, path, type = \"\") => new file_default([new BlobDataItem({\n      path,\n      size: stat2.size,\n      lastModified: stat2.mtimeMs,\n      start: 0\n    })], (0, import_node_path.basename)(path), { type, lastModified: stat2.mtimeMs });\n    BlobDataItem = class {\n      #path;\n      #start;\n      constructor(options) {\n        this.#path = options.path;\n        this.#start = options.start;\n        this.size = options.size;\n        this.lastModified = options.lastModified;\n      }\n      slice(start, end) {\n        return new BlobDataItem({\n          path: this.#path,\n          lastModified: this.lastModified,\n          size: end - start,\n          start: this.#start + start\n        });\n      }\n      async *stream() {\n        const { mtimeMs } = await stat(this.#path);\n        if (mtimeMs > this.lastModified) {\n          throw new import_node_domexception.default(\"The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.\", \"NotReadableError\");\n        }\n        yield* (0, import_node_fs.createReadStream)(this.#path, {\n          start: this.#start,\n          end: this.#start + this.size - 1\n        });\n      }\n      get [Symbol.toStringTag]() {\n        return \"Blob\";\n      }\n    };\n  }\n});\n\n// node_modules/node-fetch/src/utils/multipart-parser.js\nvar multipart_parser_exports = {};\n__export(multipart_parser_exports, {\n  toFormData: () => toFormData\n});\nfunction _fileName(headerValue) {\n  const m2 = headerValue.match(/\\bfilename=(\"(.*?)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))($|;\\s)/i);\n  if (!m2) {\n    return;\n  }\n  const match = m2[2] || m2[3] || \"\";\n  let filename = match.slice(match.lastIndexOf(\"\\\\\") + 1);\n  filename = filename.replace(/%22/g, '\"');\n  filename = filename.replace(/&#(\\d{4});/g, (m3, code) => {\n    return String.fromCharCode(code);\n  });\n  return filename;\n}\nasync function toFormData(Body2, ct) {\n  if (!/multipart/i.test(ct)) {\n    throw new TypeError(\"Failed to fetch\");\n  }\n  const m2 = ct.match(/boundary=(?:\"([^\"]+)\"|([^;]+))/i);\n  if (!m2) {\n    throw new TypeError(\"no or bad content-type header, no multipart boundary\");\n  }\n  const parser = new MultipartParser(m2[1] || m2[2]);\n  let headerField;\n  let headerValue;\n  let entryValue;\n  let entryName;\n  let contentType;\n  let filename;\n  const entryChunks = [];\n  const formData = new FormData();\n  const onPartData = (ui8a) => {\n    entryValue += decoder.decode(ui8a, { stream: true });\n  };\n  const appendToFile = (ui8a) => {\n    entryChunks.push(ui8a);\n  };\n  const appendFileToFormData = () => {\n    const file = new file_default(entryChunks, filename, { type: contentType });\n    formData.append(entryName, file);\n  };\n  const appendEntryToFormData = () => {\n    formData.append(entryName, entryValue);\n  };\n  const decoder = new TextDecoder(\"utf-8\");\n  decoder.decode();\n  parser.onPartBegin = function() {\n    parser.onPartData = onPartData;\n    parser.onPartEnd = appendEntryToFormData;\n    headerField = \"\";\n    headerValue = \"\";\n    entryValue = \"\";\n    entryName = \"\";\n    contentType = \"\";\n    filename = null;\n    entryChunks.length = 0;\n  };\n  parser.onHeaderField = function(ui8a) {\n    headerField += decoder.decode(ui8a, { stream: true });\n  };\n  parser.onHeaderValue = function(ui8a) {\n    headerValue += decoder.decode(ui8a, { stream: true });\n  };\n  parser.onHeaderEnd = function() {\n    headerValue += decoder.decode();\n    headerField = headerField.toLowerCase();\n    if (headerField === \"content-disposition\") {\n      const m3 = headerValue.match(/\\bname=(\"([^\"]*)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))/i);\n      if (m3) {\n        entryName = m3[2] || m3[3] || \"\";\n      }\n      filename = _fileName(headerValue);\n      if (filename) {\n        parser.onPartData = appendToFile;\n        parser.onPartEnd = appendFileToFormData;\n      }\n    } else if (headerField === \"content-type\") {\n      contentType = headerValue;\n    }\n    headerValue = \"\";\n    headerField = \"\";\n  };\n  for await (const chunk of Body2) {\n    parser.write(chunk);\n  }\n  parser.end();\n  return formData;\n}\nvar s, S, f2, F, LF, CR, SPACE, HYPHEN, COLON, A, Z, lower, noop, MultipartParser;\nvar init_multipart_parser = __esm({\n  \"node_modules/node-fetch/src/utils/multipart-parser.js\"() {\n    init_from();\n    init_esm_min();\n    s = 0;\n    S = {\n      START_BOUNDARY: s++,\n      HEADER_FIELD_START: s++,\n      HEADER_FIELD: s++,\n      HEADER_VALUE_START: s++,\n      HEADER_VALUE: s++,\n      HEADER_VALUE_ALMOST_DONE: s++,\n      HEADERS_ALMOST_DONE: s++,\n      PART_DATA_START: s++,\n      PART_DATA: s++,\n      END: s++\n    };\n    f2 = 1;\n    F = {\n      PART_BOUNDARY: f2,\n      LAST_BOUNDARY: f2 *= 2\n    };\n    LF = 10;\n    CR = 13;\n    SPACE = 32;\n    HYPHEN = 45;\n    COLON = 58;\n    A = 97;\n    Z = 122;\n    lower = (c) => c | 32;\n    noop = () => {\n    };\n    MultipartParser = class {\n      constructor(boundary) {\n        this.index = 0;\n        this.flags = 0;\n        this.onHeaderEnd = noop;\n        this.onHeaderField = noop;\n        this.onHeadersEnd = noop;\n        this.onHeaderValue = noop;\n        this.onPartBegin = noop;\n        this.onPartData = noop;\n        this.onPartEnd = noop;\n        this.boundaryChars = {};\n        boundary = \"\\r\\n--\" + boundary;\n        const ui8a = new Uint8Array(boundary.length);\n        for (let i2 = 0; i2 < boundary.length; i2++) {\n          ui8a[i2] = boundary.charCodeAt(i2);\n          this.boundaryChars[ui8a[i2]] = true;\n        }\n        this.boundary = ui8a;\n        this.lookbehind = new Uint8Array(this.boundary.length + 8);\n        this.state = S.START_BOUNDARY;\n      }\n      write(data) {\n        let i2 = 0;\n        const length_ = data.length;\n        let previousIndex = this.index;\n        let { lookbehind, boundary, boundaryChars, index, state, flags } = this;\n        const boundaryLength = this.boundary.length;\n        const boundaryEnd = boundaryLength - 1;\n        const bufferLength = data.length;\n        let c;\n        let cl;\n        const mark = (name) => {\n          this[name + \"Mark\"] = i2;\n        };\n        const clear = (name) => {\n          delete this[name + \"Mark\"];\n        };\n        const callback = (callbackSymbol, start, end, ui8a) => {\n          if (start === void 0 || start !== end) {\n            this[callbackSymbol](ui8a && ui8a.subarray(start, end));\n          }\n        };\n        const dataCallback = (name, clear2) => {\n          const markSymbol = name + \"Mark\";\n          if (!(markSymbol in this)) {\n            return;\n          }\n          if (clear2) {\n            callback(name, this[markSymbol], i2, data);\n            delete this[markSymbol];\n          } else {\n            callback(name, this[markSymbol], data.length, data);\n            this[markSymbol] = 0;\n          }\n        };\n        for (i2 = 0; i2 < length_; i2++) {\n          c = data[i2];\n          switch (state) {\n            case S.START_BOUNDARY:\n              if (index === boundary.length - 2) {\n                if (c === HYPHEN) {\n                  flags |= F.LAST_BOUNDARY;\n                } else if (c !== CR) {\n                  return;\n                }\n                index++;\n                break;\n              } else if (index - 1 === boundary.length - 2) {\n                if (flags & F.LAST_BOUNDARY && c === HYPHEN) {\n                  state = S.END;\n                  flags = 0;\n                } else if (!(flags & F.LAST_BOUNDARY) && c === LF) {\n                  index = 0;\n                  callback(\"onPartBegin\");\n                  state = S.HEADER_FIELD_START;\n                } else {\n                  return;\n                }\n                break;\n              }\n              if (c !== boundary[index + 2]) {\n                index = -2;\n              }\n              if (c === boundary[index + 2]) {\n                index++;\n              }\n              break;\n            case S.HEADER_FIELD_START:\n              state = S.HEADER_FIELD;\n              mark(\"onHeaderField\");\n              index = 0;\n            case S.HEADER_FIELD:\n              if (c === CR) {\n                clear(\"onHeaderField\");\n                state = S.HEADERS_ALMOST_DONE;\n                break;\n              }\n              index++;\n              if (c === HYPHEN) {\n                break;\n              }\n              if (c === COLON) {\n                if (index === 1) {\n                  return;\n                }\n                dataCallback(\"onHeaderField\", true);\n                state = S.HEADER_VALUE_START;\n                break;\n              }\n              cl = lower(c);\n              if (cl < A || cl > Z) {\n                return;\n              }\n              break;\n            case S.HEADER_VALUE_START:\n              if (c === SPACE) {\n                break;\n              }\n              mark(\"onHeaderValue\");\n              state = S.HEADER_VALUE;\n            case S.HEADER_VALUE:\n              if (c === CR) {\n                dataCallback(\"onHeaderValue\", true);\n                callback(\"onHeaderEnd\");\n                state = S.HEADER_VALUE_ALMOST_DONE;\n              }\n              break;\n            case S.HEADER_VALUE_ALMOST_DONE:\n              if (c !== LF) {\n                return;\n              }\n              state = S.HEADER_FIELD_START;\n              break;\n            case S.HEADERS_ALMOST_DONE:\n              if (c !== LF) {\n                return;\n              }\n              callback(\"onHeadersEnd\");\n              state = S.PART_DATA_START;\n              break;\n            case S.PART_DATA_START:\n              state = S.PART_DATA;\n              mark(\"onPartData\");\n            case S.PART_DATA:\n              previousIndex = index;\n              if (index === 0) {\n                i2 += boundaryEnd;\n                while (i2 < bufferLength && !(data[i2] in boundaryChars)) {\n                  i2 += boundaryLength;\n                }\n                i2 -= boundaryEnd;\n                c = data[i2];\n              }\n              if (index < boundary.length) {\n                if (boundary[index] === c) {\n                  if (index === 0) {\n                    dataCallback(\"onPartData\", true);\n                  }\n                  index++;\n                } else {\n                  index = 0;\n                }\n              } else if (index === boundary.length) {\n                index++;\n                if (c === CR) {\n                  flags |= F.PART_BOUNDARY;\n                } else if (c === HYPHEN) {\n                  flags |= F.LAST_BOUNDARY;\n                } else {\n                  index = 0;\n                }\n              } else if (index - 1 === boundary.length) {\n                if (flags & F.PART_BOUNDARY) {\n                  index = 0;\n                  if (c === LF) {\n                    flags &= ~F.PART_BOUNDARY;\n                    callback(\"onPartEnd\");\n                    callback(\"onPartBegin\");\n                    state = S.HEADER_FIELD_START;\n                    break;\n                  }\n                } else if (flags & F.LAST_BOUNDARY) {\n                  if (c === HYPHEN) {\n                    callback(\"onPartEnd\");\n                    state = S.END;\n                    flags = 0;\n                  } else {\n                    index = 0;\n                  }\n                } else {\n                  index = 0;\n                }\n              }\n              if (index > 0) {\n                lookbehind[index - 1] = c;\n              } else if (previousIndex > 0) {\n                const _lookbehind = new Uint8Array(lookbehind.buffer, lookbehind.byteOffset, lookbehind.byteLength);\n                callback(\"onPartData\", 0, previousIndex, _lookbehind);\n                previousIndex = 0;\n                mark(\"onPartData\");\n                i2--;\n              }\n              break;\n            case S.END:\n              break;\n            default:\n              throw new Error(`Unexpected state entered: ${state}`);\n          }\n        }\n        dataCallback(\"onHeaderField\");\n        dataCallback(\"onHeaderValue\");\n        dataCallback(\"onPartData\");\n        this.index = index;\n        this.state = state;\n        this.flags = flags;\n      }\n      end() {\n        if (this.state === S.HEADER_FIELD_START && this.index === 0 || this.state === S.PART_DATA && this.index === this.boundary.length) {\n          this.onPartEnd();\n        } else if (this.state !== S.END) {\n          throw new Error(\"MultipartParser.end(): stream ended unexpectedly\");\n        }\n      }\n    };\n  }\n});\n\n// src/index.js\n__export(exports, {\n  AbortError: () => AbortError,\n  Blob: () => Blob2,\n  FetchError: () => FetchError,\n  File: () => file_default,\n  FormData: () => FormData,\n  Headers: () => Headers,\n  Request: () => Request,\n  Response: () => Response,\n  blobFrom: () => blobFrom,\n  blobFromSync: () => blobFromSync,\n  default: () => fetch,\n  fileFrom: () => fileFrom,\n  fileFromSync: () => fileFromSync,\n  isRedirect: () => isRedirect\n});\n\n// node_modules/node-fetch/src/index.js\nvar import_node_http2 = __toModule(require(\"http\"));\nvar import_node_https = __toModule(require(\"https\"));\nvar import_node_zlib = __toModule(require(\"zlib\"));\nvar import_node_stream2 = __toModule(require(\"stream\"));\nvar import_node_buffer2 = __toModule(require(\"buffer\"));\n\n// node_modules/data-uri-to-buffer/dist/index.js\nfunction dataUriToBuffer(uri) {\n  if (!/^data:/i.test(uri)) {\n    throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n  }\n  uri = uri.replace(/\\r?\\n/g, \"\");\n  const firstComma = uri.indexOf(\",\");\n  if (firstComma === -1 || firstComma <= 4) {\n    throw new TypeError(\"malformed data: URI\");\n  }\n  const meta = uri.substring(5, firstComma).split(\";\");\n  let charset = \"\";\n  let base64 = false;\n  const type = meta[0] || \"text/plain\";\n  let typeFull = type;\n  for (let i2 = 1; i2 < meta.length; i2++) {\n    if (meta[i2] === \"base64\") {\n      base64 = true;\n    } else {\n      typeFull += `;${meta[i2]}`;\n      if (meta[i2].indexOf(\"charset=\") === 0) {\n        charset = meta[i2].substring(8);\n      }\n    }\n  }\n  if (!meta[0] && !charset.length) {\n    typeFull += \";charset=US-ASCII\";\n    charset = \"US-ASCII\";\n  }\n  const encoding = base64 ? \"base64\" : \"ascii\";\n  const data = unescape(uri.substring(firstComma + 1));\n  const buffer = Buffer.from(data, encoding);\n  buffer.type = type;\n  buffer.typeFull = typeFull;\n  buffer.charset = charset;\n  return buffer;\n}\nvar dist_default = dataUriToBuffer;\n\n// node_modules/node-fetch/src/body.js\nvar import_node_stream = __toModule(require(\"stream\"));\nvar import_node_util = __toModule(require(\"util\"));\nvar import_node_buffer = __toModule(require(\"buffer\"));\ninit_fetch_blob();\ninit_esm_min();\n\n// node_modules/node-fetch/src/errors/base.js\nvar FetchBaseError = class extends Error {\n  constructor(message, type) {\n    super(message);\n    Error.captureStackTrace(this, this.constructor);\n    this.type = type;\n  }\n  get name() {\n    return this.constructor.name;\n  }\n  get [Symbol.toStringTag]() {\n    return this.constructor.name;\n  }\n};\n\n// node_modules/node-fetch/src/errors/fetch-error.js\nvar FetchError = class extends FetchBaseError {\n  constructor(message, type, systemError) {\n    super(message, type);\n    if (systemError) {\n      this.code = this.errno = systemError.code;\n      this.erroredSysCall = systemError.syscall;\n    }\n  }\n};\n\n// node_modules/node-fetch/src/utils/is.js\nvar NAME = Symbol.toStringTag;\nvar isURLSearchParameters = (object) => {\n  return typeof object === \"object\" && typeof object.append === \"function\" && typeof object.delete === \"function\" && typeof object.get === \"function\" && typeof object.getAll === \"function\" && typeof object.has === \"function\" && typeof object.set === \"function\" && typeof object.sort === \"function\" && object[NAME] === \"URLSearchParams\";\n};\nvar isBlob = (object) => {\n  return object && typeof object === \"object\" && typeof object.arrayBuffer === \"function\" && typeof object.type === \"string\" && typeof object.stream === \"function\" && typeof object.constructor === \"function\" && /^(Blob|File)$/.test(object[NAME]);\n};\nvar isAbortSignal = (object) => {\n  return object?.[NAME] === \"AbortSignal\";\n};\nvar isDomainOrSubdomain = (destination, original) => {\n  const orig = new URL(original).hostname;\n  const dest = new URL(destination).hostname;\n  return orig === dest || orig.endsWith(`.${dest}`);\n};\n\n// node_modules/node-fetch/src/body.js\nvar pipeline = (0, import_node_util.promisify)(import_node_stream.default.pipeline);\nvar INTERNALS = Symbol(\"Body internals\");\nvar Body = class {\n  constructor(body, {\n    size = 0\n  } = {}) {\n    let boundary = null;\n    if (body === null) {\n      body = null;\n    } else if (isURLSearchParameters(body)) {\n      body = import_node_buffer.Buffer.from(body.toString());\n    } else if (isBlob(body)) {\n    } else if (import_node_buffer.Buffer.isBuffer(body)) {\n    } else if (import_node_util.types.isAnyArrayBuffer(body)) {\n      body = import_node_buffer.Buffer.from(body);\n    } else if (ArrayBuffer.isView(body)) {\n      body = import_node_buffer.Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n    } else if (body instanceof import_node_stream.default) {\n    } else if (body instanceof FormData) {\n      body = formDataToBlob(body);\n      boundary = body.type.split(\"=\")[1];\n    } else {\n      body = import_node_buffer.Buffer.from(String(body));\n    }\n    let stream = body;\n    if (import_node_buffer.Buffer.isBuffer(body)) {\n      stream = import_node_stream.default.Readable.from(body);\n    } else if (isBlob(body)) {\n      stream = import_node_stream.default.Readable.from(body.stream());\n    }\n    this[INTERNALS] = {\n      body,\n      stream,\n      boundary,\n      disturbed: false,\n      error: null\n    };\n    this.size = size;\n    if (body instanceof import_node_stream.default) {\n      body.on(\"error\", (error_) => {\n        const error = error_ instanceof FetchBaseError ? error_ : new FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, \"system\", error_);\n        this[INTERNALS].error = error;\n      });\n    }\n  }\n  get body() {\n    return this[INTERNALS].stream;\n  }\n  get bodyUsed() {\n    return this[INTERNALS].disturbed;\n  }\n  async arrayBuffer() {\n    const { buffer, byteOffset, byteLength } = await consumeBody(this);\n    return buffer.slice(byteOffset, byteOffset + byteLength);\n  }\n  async formData() {\n    const ct = this.headers.get(\"content-type\");\n    if (ct.startsWith(\"application/x-www-form-urlencoded\")) {\n      const formData = new FormData();\n      const parameters = new URLSearchParams(await this.text());\n      for (const [name, value] of parameters) {\n        formData.append(name, value);\n      }\n      return formData;\n    }\n    const { toFormData: toFormData2 } = await Promise.resolve().then(() => (init_multipart_parser(), multipart_parser_exports));\n    return toFormData2(this.body, ct);\n  }\n  async blob() {\n    const ct = this.headers && this.headers.get(\"content-type\") || this[INTERNALS].body && this[INTERNALS].body.type || \"\";\n    const buf = await this.arrayBuffer();\n    return new fetch_blob_default([buf], {\n      type: ct\n    });\n  }\n  async json() {\n    const buffer = await consumeBody(this);\n    return JSON.parse(buffer.toString());\n  }\n  async text() {\n    const buffer = await consumeBody(this);\n    return buffer.toString();\n  }\n};\nObject.defineProperties(Body.prototype, {\n  body: { enumerable: true },\n  bodyUsed: { enumerable: true },\n  arrayBuffer: { enumerable: true },\n  blob: { enumerable: true },\n  json: { enumerable: true },\n  text: { enumerable: true },\n  data: { get: (0, import_node_util.deprecate)(() => {\n  }, \"data doesn't exist, use json(), text(), arrayBuffer(), or body instead\", \"https://github.com/node-fetch/node-fetch/issues/1000 (response)\") }\n});\nasync function consumeBody(data) {\n  if (data[INTERNALS].disturbed) {\n    throw new TypeError(`body used already for: ${data.url}`);\n  }\n  data[INTERNALS].disturbed = true;\n  if (data[INTERNALS].error) {\n    throw data[INTERNALS].error;\n  }\n  const { body } = data;\n  if (body === null) {\n    return import_node_buffer.Buffer.alloc(0);\n  }\n  if (!(body instanceof import_node_stream.default)) {\n    return import_node_buffer.Buffer.alloc(0);\n  }\n  const accum = [];\n  let accumBytes = 0;\n  try {\n    for await (const chunk of body) {\n      if (data.size > 0 && accumBytes + chunk.length > data.size) {\n        const error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, \"max-size\");\n        body.destroy(error);\n        throw error;\n      }\n      accumBytes += chunk.length;\n      accum.push(chunk);\n    }\n  } catch (error) {\n    const error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, \"system\", error);\n    throw error_;\n  }\n  if (body.readableEnded === true || body._readableState.ended === true) {\n    try {\n      if (accum.every((c) => typeof c === \"string\")) {\n        return import_node_buffer.Buffer.from(accum.join(\"\"));\n      }\n      return import_node_buffer.Buffer.concat(accum, accumBytes);\n    } catch (error) {\n      throw new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, \"system\", error);\n    }\n  } else {\n    throw new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n  }\n}\nvar clone = (instance, highWaterMark) => {\n  let p1;\n  let p2;\n  let { body } = instance[INTERNALS];\n  if (instance.bodyUsed) {\n    throw new Error(\"cannot clone body after it is used\");\n  }\n  if (body instanceof import_node_stream.default) {\n    p1 = new import_node_stream.PassThrough({ highWaterMark });\n    p2 = new import_node_stream.PassThrough({ highWaterMark });\n    body.pipe(p1);\n    body.pipe(p2);\n    instance[INTERNALS].stream = p1;\n    body = p2;\n  }\n  return body;\n};\nvar extractContentType = (body, request) => {\n  if (body === null) {\n    return null;\n  }\n  if (typeof body === \"string\") {\n    return \"text/plain;charset=UTF-8\";\n  }\n  if (isURLSearchParameters(body)) {\n    return \"application/x-www-form-urlencoded;charset=UTF-8\";\n  }\n  if (isBlob(body)) {\n    return body.type || null;\n  }\n  if (import_node_buffer.Buffer.isBuffer(body) || import_node_util.types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n    return null;\n  }\n  if (body instanceof FormData) {\n    return `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n  }\n  if (body instanceof import_node_stream.default) {\n    return null;\n  }\n  return \"text/plain;charset=UTF-8\";\n};\nvar getTotalBytes = (request) => {\n  const { body } = request[INTERNALS];\n  if (body === null) {\n    return 0;\n  }\n  if (isBlob(body)) {\n    return body.size;\n  }\n  if (import_node_buffer.Buffer.isBuffer(body)) {\n    return body.length;\n  }\n  return null;\n};\nvar writeToStream = async (dest, { body }) => {\n  if (body === null) {\n    dest.end();\n  } else {\n    await pipeline(body, dest);\n  }\n};\n\n// node_modules/node-fetch/src/headers.js\nvar import_node_util2 = __toModule(require(\"util\"));\nvar import_node_http = __toModule(require(\"http\"));\nvar validateHeaderName = typeof import_node_http.default.validateHeaderName === \"function\" ? import_node_http.default.validateHeaderName : (name) => {\n  if (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n    const error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n    Object.defineProperty(error, \"code\", { value: \"ERR_INVALID_HTTP_TOKEN\" });\n    throw error;\n  }\n};\nvar validateHeaderValue = typeof import_node_http.default.validateHeaderValue === \"function\" ? import_node_http.default.validateHeaderValue : (name, value) => {\n  if (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n    const error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n    Object.defineProperty(error, \"code\", { value: \"ERR_INVALID_CHAR\" });\n    throw error;\n  }\n};\nvar Headers = class extends URLSearchParams {\n  constructor(init) {\n    let result = [];\n    if (init instanceof Headers) {\n      const raw = init.raw();\n      for (const [name, values] of Object.entries(raw)) {\n        result.push(...values.map((value) => [name, value]));\n      }\n    } else if (init == null) {\n    } else if (typeof init === \"object\" && !import_node_util2.types.isBoxedPrimitive(init)) {\n      const method = init[Symbol.iterator];\n      if (method == null) {\n        result.push(...Object.entries(init));\n      } else {\n        if (typeof method !== \"function\") {\n          throw new TypeError(\"Header pairs must be iterable\");\n        }\n        result = [...init].map((pair) => {\n          if (typeof pair !== \"object\" || import_node_util2.types.isBoxedPrimitive(pair)) {\n            throw new TypeError(\"Each header pair must be an iterable object\");\n          }\n          return [...pair];\n        }).map((pair) => {\n          if (pair.length !== 2) {\n            throw new TypeError(\"Each header pair must be a name/value tuple\");\n          }\n          return [...pair];\n        });\n      }\n    } else {\n      throw new TypeError(\"Failed to construct 'Headers': The provided value is not of type '(sequence<sequence<ByteString>> or record<ByteString, ByteString>)\");\n    }\n    result = result.length > 0 ? result.map(([name, value]) => {\n      validateHeaderName(name);\n      validateHeaderValue(name, String(value));\n      return [String(name).toLowerCase(), String(value)];\n    }) : void 0;\n    super(result);\n    return new Proxy(this, {\n      get(target, p, receiver) {\n        switch (p) {\n          case \"append\":\n          case \"set\":\n            return (name, value) => {\n              validateHeaderName(name);\n              validateHeaderValue(name, String(value));\n              return URLSearchParams.prototype[p].call(target, String(name).toLowerCase(), String(value));\n            };\n          case \"delete\":\n          case \"has\":\n          case \"getAll\":\n            return (name) => {\n              validateHeaderName(name);\n              return URLSearchParams.prototype[p].call(target, String(name).toLowerCase());\n            };\n          case \"keys\":\n            return () => {\n              target.sort();\n              return new Set(URLSearchParams.prototype.keys.call(target)).keys();\n            };\n          default:\n            return Reflect.get(target, p, receiver);\n        }\n      }\n    });\n  }\n  get [Symbol.toStringTag]() {\n    return this.constructor.name;\n  }\n  toString() {\n    return Object.prototype.toString.call(this);\n  }\n  get(name) {\n    const values = this.getAll(name);\n    if (values.length === 0) {\n      return null;\n    }\n    let value = values.join(\", \");\n    if (/^content-encoding$/i.test(name)) {\n      value = value.toLowerCase();\n    }\n    return value;\n  }\n  forEach(callback, thisArg = void 0) {\n    for (const name of this.keys()) {\n      Reflect.apply(callback, thisArg, [this.get(name), name, this]);\n    }\n  }\n  *values() {\n    for (const name of this.keys()) {\n      yield this.get(name);\n    }\n  }\n  *entries() {\n    for (const name of this.keys()) {\n      yield [name, this.get(name)];\n    }\n  }\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n  raw() {\n    return [...this.keys()].reduce((result, key) => {\n      result[key] = this.getAll(key);\n      return result;\n    }, {});\n  }\n  [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n    return [...this.keys()].reduce((result, key) => {\n      const values = this.getAll(key);\n      if (key === \"host\") {\n        result[key] = values[0];\n      } else {\n        result[key] = values.length > 1 ? values : values[0];\n      }\n      return result;\n    }, {});\n  }\n};\nObject.defineProperties(Headers.prototype, [\"get\", \"entries\", \"forEach\", \"values\"].reduce((result, property) => {\n  result[property] = { enumerable: true };\n  return result;\n}, {}));\nfunction fromRawHeaders(headers = []) {\n  return new Headers(headers.reduce((result, value, index, array) => {\n    if (index % 2 === 0) {\n      result.push(array.slice(index, index + 2));\n    }\n    return result;\n  }, []).filter(([name, value]) => {\n    try {\n      validateHeaderName(name);\n      validateHeaderValue(name, String(value));\n      return true;\n    } catch {\n      return false;\n    }\n  }));\n}\n\n// node_modules/node-fetch/src/utils/is-redirect.js\nvar redirectStatus = new Set([301, 302, 303, 307, 308]);\nvar isRedirect = (code) => {\n  return redirectStatus.has(code);\n};\n\n// node_modules/node-fetch/src/response.js\nvar INTERNALS2 = Symbol(\"Response internals\");\nvar Response = class extends Body {\n  constructor(body = null, options = {}) {\n    super(body, options);\n    const status = options.status != null ? options.status : 200;\n    const headers = new Headers(options.headers);\n    if (body !== null && !headers.has(\"Content-Type\")) {\n      const contentType = extractContentType(body, this);\n      if (contentType) {\n        headers.append(\"Content-Type\", contentType);\n      }\n    }\n    this[INTERNALS2] = {\n      type: \"default\",\n      url: options.url,\n      status,\n      statusText: options.statusText || \"\",\n      headers,\n      counter: options.counter,\n      highWaterMark: options.highWaterMark\n    };\n  }\n  get type() {\n    return this[INTERNALS2].type;\n  }\n  get url() {\n    return this[INTERNALS2].url || \"\";\n  }\n  get status() {\n    return this[INTERNALS2].status;\n  }\n  get ok() {\n    return this[INTERNALS2].status >= 200 && this[INTERNALS2].status < 300;\n  }\n  get redirected() {\n    return this[INTERNALS2].counter > 0;\n  }\n  get statusText() {\n    return this[INTERNALS2].statusText;\n  }\n  get headers() {\n    return this[INTERNALS2].headers;\n  }\n  get highWaterMark() {\n    return this[INTERNALS2].highWaterMark;\n  }\n  clone() {\n    return new Response(clone(this, this.highWaterMark), {\n      type: this.type,\n      url: this.url,\n      status: this.status,\n      statusText: this.statusText,\n      headers: this.headers,\n      ok: this.ok,\n      redirected: this.redirected,\n      size: this.size,\n      highWaterMark: this.highWaterMark\n    });\n  }\n  static redirect(url, status = 302) {\n    if (!isRedirect(status)) {\n      throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n    }\n    return new Response(null, {\n      headers: {\n        location: new URL(url).toString()\n      },\n      status\n    });\n  }\n  static error() {\n    const response = new Response(null, { status: 0, statusText: \"\" });\n    response[INTERNALS2].type = \"error\";\n    return response;\n  }\n  get [Symbol.toStringTag]() {\n    return \"Response\";\n  }\n};\nObject.defineProperties(Response.prototype, {\n  type: { enumerable: true },\n  url: { enumerable: true },\n  status: { enumerable: true },\n  ok: { enumerable: true },\n  redirected: { enumerable: true },\n  statusText: { enumerable: true },\n  headers: { enumerable: true },\n  clone: { enumerable: true }\n});\n\n// node_modules/node-fetch/src/request.js\nvar import_node_url = __toModule(require(\"url\"));\nvar import_node_util3 = __toModule(require(\"util\"));\n\n// node_modules/node-fetch/src/utils/get-search.js\nvar getSearch = (parsedURL) => {\n  if (parsedURL.search) {\n    return parsedURL.search;\n  }\n  const lastOffset = parsedURL.href.length - 1;\n  const hash = parsedURL.hash || (parsedURL.href[lastOffset] === \"#\" ? \"#\" : \"\");\n  return parsedURL.href[lastOffset - hash.length] === \"?\" ? \"?\" : \"\";\n};\n\n// node_modules/node-fetch/src/utils/referrer.js\nvar import_node_net = __toModule(require(\"net\"));\nfunction stripURLForUseAsAReferrer(url, originOnly = false) {\n  if (url == null) {\n    return \"no-referrer\";\n  }\n  url = new URL(url);\n  if (/^(about|blob|data):$/.test(url.protocol)) {\n    return \"no-referrer\";\n  }\n  url.username = \"\";\n  url.password = \"\";\n  url.hash = \"\";\n  if (originOnly) {\n    url.pathname = \"\";\n    url.search = \"\";\n  }\n  return url;\n}\nvar ReferrerPolicy = new Set([\n  \"\",\n  \"no-referrer\",\n  \"no-referrer-when-downgrade\",\n  \"same-origin\",\n  \"origin\",\n  \"strict-origin\",\n  \"origin-when-cross-origin\",\n  \"strict-origin-when-cross-origin\",\n  \"unsafe-url\"\n]);\nvar DEFAULT_REFERRER_POLICY = \"strict-origin-when-cross-origin\";\nfunction validateReferrerPolicy(referrerPolicy) {\n  if (!ReferrerPolicy.has(referrerPolicy)) {\n    throw new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n  }\n  return referrerPolicy;\n}\nfunction isOriginPotentiallyTrustworthy(url) {\n  if (/^(http|ws)s:$/.test(url.protocol)) {\n    return true;\n  }\n  const hostIp = url.host.replace(/(^\\[)|(]$)/g, \"\");\n  const hostIPVersion = (0, import_node_net.isIP)(hostIp);\n  if (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n    return true;\n  }\n  if (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n    return true;\n  }\n  if (/^(.+\\.)*localhost$/.test(url.host)) {\n    return false;\n  }\n  if (url.protocol === \"file:\") {\n    return true;\n  }\n  return false;\n}\nfunction isUrlPotentiallyTrustworthy(url) {\n  if (/^about:(blank|srcdoc)$/.test(url)) {\n    return true;\n  }\n  if (url.protocol === \"data:\") {\n    return true;\n  }\n  if (/^(blob|filesystem):$/.test(url.protocol)) {\n    return true;\n  }\n  return isOriginPotentiallyTrustworthy(url);\n}\nfunction determineRequestsReferrer(request, { referrerURLCallback, referrerOriginCallback } = {}) {\n  if (request.referrer === \"no-referrer\" || request.referrerPolicy === \"\") {\n    return null;\n  }\n  const policy = request.referrerPolicy;\n  if (request.referrer === \"about:client\") {\n    return \"no-referrer\";\n  }\n  const referrerSource = request.referrer;\n  let referrerURL = stripURLForUseAsAReferrer(referrerSource);\n  let referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n  if (referrerURL.toString().length > 4096) {\n    referrerURL = referrerOrigin;\n  }\n  if (referrerURLCallback) {\n    referrerURL = referrerURLCallback(referrerURL);\n  }\n  if (referrerOriginCallback) {\n    referrerOrigin = referrerOriginCallback(referrerOrigin);\n  }\n  const currentURL = new URL(request.url);\n  switch (policy) {\n    case \"no-referrer\":\n      return \"no-referrer\";\n    case \"origin\":\n      return referrerOrigin;\n    case \"unsafe-url\":\n      return referrerURL;\n    case \"strict-origin\":\n      if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n        return \"no-referrer\";\n      }\n      return referrerOrigin.toString();\n    case \"strict-origin-when-cross-origin\":\n      if (referrerURL.origin === currentURL.origin) {\n        return referrerURL;\n      }\n      if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n        return \"no-referrer\";\n      }\n      return referrerOrigin;\n    case \"same-origin\":\n      if (referrerURL.origin === currentURL.origin) {\n        return referrerURL;\n      }\n      return \"no-referrer\";\n    case \"origin-when-cross-origin\":\n      if (referrerURL.origin === currentURL.origin) {\n        return referrerURL;\n      }\n      return referrerOrigin;\n    case \"no-referrer-when-downgrade\":\n      if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n        return \"no-referrer\";\n      }\n      return referrerURL;\n    default:\n      throw new TypeError(`Invalid referrerPolicy: ${policy}`);\n  }\n}\nfunction parseReferrerPolicyFromHeader(headers) {\n  const policyTokens = (headers.get(\"referrer-policy\") || \"\").split(/[,\\s]+/);\n  let policy = \"\";\n  for (const token of policyTokens) {\n    if (token && ReferrerPolicy.has(token)) {\n      policy = token;\n    }\n  }\n  return policy;\n}\n\n// node_modules/node-fetch/src/request.js\nvar INTERNALS3 = Symbol(\"Request internals\");\nvar isRequest = (object) => {\n  return typeof object === \"object\" && typeof object[INTERNALS3] === \"object\";\n};\nvar doBadDataWarn = (0, import_node_util3.deprecate)(() => {\n}, \".data is not a valid RequestInit property, use .body instead\", \"https://github.com/node-fetch/node-fetch/issues/1000 (request)\");\nvar Request = class extends Body {\n  constructor(input, init = {}) {\n    let parsedURL;\n    if (isRequest(input)) {\n      parsedURL = new URL(input.url);\n    } else {\n      parsedURL = new URL(input);\n      input = {};\n    }\n    if (parsedURL.username !== \"\" || parsedURL.password !== \"\") {\n      throw new TypeError(`${parsedURL} is an url with embedded credentails.`);\n    }\n    let method = init.method || input.method || \"GET\";\n    method = method.toUpperCase();\n    if (\"data\" in init) {\n      doBadDataWarn();\n    }\n    if ((init.body != null || isRequest(input) && input.body !== null) && (method === \"GET\" || method === \"HEAD\")) {\n      throw new TypeError(\"Request with GET/HEAD method cannot have body\");\n    }\n    const inputBody = init.body ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n    super(inputBody, {\n      size: init.size || input.size || 0\n    });\n    const headers = new Headers(init.headers || input.headers || {});\n    if (inputBody !== null && !headers.has(\"Content-Type\")) {\n      const contentType = extractContentType(inputBody, this);\n      if (contentType) {\n        headers.set(\"Content-Type\", contentType);\n      }\n    }\n    let signal = isRequest(input) ? input.signal : null;\n    if (\"signal\" in init) {\n      signal = init.signal;\n    }\n    if (signal != null && !isAbortSignal(signal)) {\n      throw new TypeError(\"Expected signal to be an instanceof AbortSignal or EventTarget\");\n    }\n    let referrer = init.referrer == null ? input.referrer : init.referrer;\n    if (referrer === \"\") {\n      referrer = \"no-referrer\";\n    } else if (referrer) {\n      const parsedReferrer = new URL(referrer);\n      referrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? \"client\" : parsedReferrer;\n    } else {\n      referrer = void 0;\n    }\n    this[INTERNALS3] = {\n      method,\n      redirect: init.redirect || input.redirect || \"follow\",\n      headers,\n      parsedURL,\n      signal,\n      referrer\n    };\n    this.follow = init.follow === void 0 ? input.follow === void 0 ? 20 : input.follow : init.follow;\n    this.compress = init.compress === void 0 ? input.compress === void 0 ? true : input.compress : init.compress;\n    this.counter = init.counter || input.counter || 0;\n    this.agent = init.agent || input.agent;\n    this.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n    this.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n    this.referrerPolicy = init.referrerPolicy || input.referrerPolicy || \"\";\n  }\n  get method() {\n    return this[INTERNALS3].method;\n  }\n  get url() {\n    return (0, import_node_url.format)(this[INTERNALS3].parsedURL);\n  }\n  get headers() {\n    return this[INTERNALS3].headers;\n  }\n  get redirect() {\n    return this[INTERNALS3].redirect;\n  }\n  get signal() {\n    return this[INTERNALS3].signal;\n  }\n  get referrer() {\n    if (this[INTERNALS3].referrer === \"no-referrer\") {\n      return \"\";\n    }\n    if (this[INTERNALS3].referrer === \"client\") {\n      return \"about:client\";\n    }\n    if (this[INTERNALS3].referrer) {\n      return this[INTERNALS3].referrer.toString();\n    }\n    return void 0;\n  }\n  get referrerPolicy() {\n    return this[INTERNALS3].referrerPolicy;\n  }\n  set referrerPolicy(referrerPolicy) {\n    this[INTERNALS3].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n  }\n  clone() {\n    return new Request(this);\n  }\n  get [Symbol.toStringTag]() {\n    return \"Request\";\n  }\n};\nObject.defineProperties(Request.prototype, {\n  method: { enumerable: true },\n  url: { enumerable: true },\n  headers: { enumerable: true },\n  redirect: { enumerable: true },\n  clone: { enumerable: true },\n  signal: { enumerable: true },\n  referrer: { enumerable: true },\n  referrerPolicy: { enumerable: true }\n});\nvar getNodeRequestOptions = (request) => {\n  const { parsedURL } = request[INTERNALS3];\n  const headers = new Headers(request[INTERNALS3].headers);\n  if (!headers.has(\"Accept\")) {\n    headers.set(\"Accept\", \"*/*\");\n  }\n  let contentLengthValue = null;\n  if (request.body === null && /^(post|put)$/i.test(request.method)) {\n    contentLengthValue = \"0\";\n  }\n  if (request.body !== null) {\n    const totalBytes = getTotalBytes(request);\n    if (typeof totalBytes === \"number\" && !Number.isNaN(totalBytes)) {\n      contentLengthValue = String(totalBytes);\n    }\n  }\n  if (contentLengthValue) {\n    headers.set(\"Content-Length\", contentLengthValue);\n  }\n  if (request.referrerPolicy === \"\") {\n    request.referrerPolicy = DEFAULT_REFERRER_POLICY;\n  }\n  if (request.referrer && request.referrer !== \"no-referrer\") {\n    request[INTERNALS3].referrer = determineRequestsReferrer(request);\n  } else {\n    request[INTERNALS3].referrer = \"no-referrer\";\n  }\n  if (request[INTERNALS3].referrer instanceof URL) {\n    headers.set(\"Referer\", request.referrer);\n  }\n  if (!headers.has(\"User-Agent\")) {\n    headers.set(\"User-Agent\", \"node-fetch\");\n  }\n  if (request.compress && !headers.has(\"Accept-Encoding\")) {\n    headers.set(\"Accept-Encoding\", \"gzip,deflate,br\");\n  }\n  let { agent } = request;\n  if (typeof agent === \"function\") {\n    agent = agent(parsedURL);\n  }\n  if (!headers.has(\"Connection\") && !agent) {\n    headers.set(\"Connection\", \"close\");\n  }\n  const search = getSearch(parsedURL);\n  const options = {\n    path: parsedURL.pathname + search,\n    method: request.method,\n    headers: headers[Symbol.for(\"nodejs.util.inspect.custom\")](),\n    insecureHTTPParser: request.insecureHTTPParser,\n    agent\n  };\n  return {\n    parsedURL,\n    options\n  };\n};\n\n// node_modules/node-fetch/src/errors/abort-error.js\nvar AbortError = class extends FetchBaseError {\n  constructor(message, type = \"aborted\") {\n    super(message, type);\n  }\n};\n\n// node_modules/node-fetch/src/index.js\ninit_esm_min();\ninit_from();\nvar supportedSchemas = new Set([\"data:\", \"http:\", \"https:\"]);\nasync function fetch(url, options_) {\n  return new Promise((resolve, reject) => {\n    const request = new Request(url, options_);\n    const { parsedURL, options } = getNodeRequestOptions(request);\n    if (!supportedSchemas.has(parsedURL.protocol)) {\n      throw new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, \"\")}\" is not supported.`);\n    }\n    if (parsedURL.protocol === \"data:\") {\n      const data = dist_default(request.url);\n      const response2 = new Response(data, { headers: { \"Content-Type\": data.typeFull } });\n      resolve(response2);\n      return;\n    }\n    const send = (parsedURL.protocol === \"https:\" ? import_node_https.default : import_node_http2.default).request;\n    const { signal } = request;\n    let response = null;\n    const abort = () => {\n      const error = new AbortError(\"The operation was aborted.\");\n      reject(error);\n      if (request.body && request.body instanceof import_node_stream2.default.Readable) {\n        request.body.destroy(error);\n      }\n      if (!response || !response.body) {\n        return;\n      }\n      response.body.emit(\"error\", error);\n    };\n    if (signal && signal.aborted) {\n      abort();\n      return;\n    }\n    const abortAndFinalize = () => {\n      abort();\n      finalize();\n    };\n    const request_ = send(parsedURL.toString(), options);\n    if (signal) {\n      signal.addEventListener(\"abort\", abortAndFinalize);\n    }\n    const finalize = () => {\n      request_.abort();\n      if (signal) {\n        signal.removeEventListener(\"abort\", abortAndFinalize);\n      }\n    };\n    request_.on(\"error\", (error) => {\n      reject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, \"system\", error));\n      finalize();\n    });\n    fixResponseChunkedTransferBadEnding(request_, (error) => {\n      response.body.destroy(error);\n    });\n    if (process.version < \"v14\") {\n      request_.on(\"socket\", (s2) => {\n        let endedWithEventsCount;\n        s2.prependListener(\"end\", () => {\n          endedWithEventsCount = s2._eventsCount;\n        });\n        s2.prependListener(\"close\", (hadError) => {\n          if (response && endedWithEventsCount < s2._eventsCount && !hadError) {\n            const error = new Error(\"Premature close\");\n            error.code = \"ERR_STREAM_PREMATURE_CLOSE\";\n            response.body.emit(\"error\", error);\n          }\n        });\n      });\n    }\n    request_.on(\"response\", (response_) => {\n      request_.setTimeout(0);\n      const headers = fromRawHeaders(response_.rawHeaders);\n      if (isRedirect(response_.statusCode)) {\n        const location = headers.get(\"Location\");\n        let locationURL = null;\n        try {\n          locationURL = location === null ? null : new URL(location, request.url);\n        } catch {\n          if (request.redirect !== \"manual\") {\n            reject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, \"invalid-redirect\"));\n            finalize();\n            return;\n          }\n        }\n        switch (request.redirect) {\n          case \"error\":\n            reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, \"no-redirect\"));\n            finalize();\n            return;\n          case \"manual\":\n            break;\n          case \"follow\": {\n            if (locationURL === null) {\n              break;\n            }\n            if (request.counter >= request.follow) {\n              reject(new FetchError(`maximum redirect reached at: ${request.url}`, \"max-redirect\"));\n              finalize();\n              return;\n            }\n            const requestOptions = {\n              headers: new Headers(request.headers),\n              follow: request.follow,\n              counter: request.counter + 1,\n              agent: request.agent,\n              compress: request.compress,\n              method: request.method,\n              body: clone(request),\n              signal: request.signal,\n              size: request.size,\n              referrer: request.referrer,\n              referrerPolicy: request.referrerPolicy\n            };\n            if (!isDomainOrSubdomain(request.url, locationURL)) {\n              for (const name of [\"authorization\", \"www-authenticate\", \"cookie\", \"cookie2\"]) {\n                requestOptions.headers.delete(name);\n              }\n            }\n            if (response_.statusCode !== 303 && request.body && options_.body instanceof import_node_stream2.default.Readable) {\n              reject(new FetchError(\"Cannot follow redirect with body being a readable stream\", \"unsupported-redirect\"));\n              finalize();\n              return;\n            }\n            if (response_.statusCode === 303 || (response_.statusCode === 301 || response_.statusCode === 302) && request.method === \"POST\") {\n              requestOptions.method = \"GET\";\n              requestOptions.body = void 0;\n              requestOptions.headers.delete(\"content-length\");\n            }\n            const responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n            if (responseReferrerPolicy) {\n              requestOptions.referrerPolicy = responseReferrerPolicy;\n            }\n            resolve(fetch(new Request(locationURL, requestOptions)));\n            finalize();\n            return;\n          }\n          default:\n            return reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n        }\n      }\n      if (signal) {\n        response_.once(\"end\", () => {\n          signal.removeEventListener(\"abort\", abortAndFinalize);\n        });\n      }\n      let body = (0, import_node_stream2.pipeline)(response_, new import_node_stream2.PassThrough(), (error) => {\n        if (error) {\n          reject(error);\n        }\n      });\n      if (process.version < \"v12.10\") {\n        response_.on(\"aborted\", abortAndFinalize);\n      }\n      const responseOptions = {\n        url: request.url,\n        status: response_.statusCode,\n        statusText: response_.statusMessage,\n        headers,\n        size: request.size,\n        counter: request.counter,\n        highWaterMark: request.highWaterMark\n      };\n      const codings = headers.get(\"Content-Encoding\");\n      if (!request.compress || request.method === \"HEAD\" || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n        response = new Response(body, responseOptions);\n        resolve(response);\n        return;\n      }\n      const zlibOptions = {\n        flush: import_node_zlib.default.Z_SYNC_FLUSH,\n        finishFlush: import_node_zlib.default.Z_SYNC_FLUSH\n      };\n      if (codings === \"gzip\" || codings === \"x-gzip\") {\n        body = (0, import_node_stream2.pipeline)(body, import_node_zlib.default.createGunzip(zlibOptions), (error) => {\n          if (error) {\n            reject(error);\n          }\n        });\n        response = new Response(body, responseOptions);\n        resolve(response);\n        return;\n      }\n      if (codings === \"deflate\" || codings === \"x-deflate\") {\n        const raw = (0, import_node_stream2.pipeline)(response_, new import_node_stream2.PassThrough(), (error) => {\n          if (error) {\n            reject(error);\n          }\n        });\n        raw.once(\"data\", (chunk) => {\n          if ((chunk[0] & 15) === 8) {\n            body = (0, import_node_stream2.pipeline)(body, import_node_zlib.default.createInflate(), (error) => {\n              if (error) {\n                reject(error);\n              }\n            });\n          } else {\n            body = (0, import_node_stream2.pipeline)(body, import_node_zlib.default.createInflateRaw(), (error) => {\n              if (error) {\n                reject(error);\n              }\n            });\n          }\n          response = new Response(body, responseOptions);\n          resolve(response);\n        });\n        raw.once(\"end\", () => {\n          if (!response) {\n            response = new Response(body, responseOptions);\n            resolve(response);\n          }\n        });\n        return;\n      }\n      if (codings === \"br\") {\n        body = (0, import_node_stream2.pipeline)(body, import_node_zlib.default.createBrotliDecompress(), (error) => {\n          if (error) {\n            reject(error);\n          }\n        });\n        response = new Response(body, responseOptions);\n        resolve(response);\n        return;\n      }\n      response = new Response(body, responseOptions);\n      resolve(response);\n    });\n    writeToStream(request_, request).catch(reject);\n  });\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n  const LAST_CHUNK = import_node_buffer2.Buffer.from(\"0\\r\\n\\r\\n\");\n  let isChunkedTransfer = false;\n  let properLastChunkReceived = false;\n  let previousChunk;\n  request.on(\"response\", (response) => {\n    const { headers } = response;\n    isChunkedTransfer = headers[\"transfer-encoding\"] === \"chunked\" && !headers[\"content-length\"];\n  });\n  request.on(\"socket\", (socket) => {\n    const onSocketClose = () => {\n      if (isChunkedTransfer && !properLastChunkReceived) {\n        const error = new Error(\"Premature close\");\n        error.code = \"ERR_STREAM_PREMATURE_CLOSE\";\n        errorCallback(error);\n      }\n    };\n    socket.prependListener(\"close\", onSocketClose);\n    request.on(\"abort\", () => {\n      socket.removeListener(\"close\", onSocketClose);\n    });\n    socket.on(\"data\", (buf) => {\n      properLastChunkReceived = import_node_buffer2.Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n      if (!properLastChunkReceived && previousChunk) {\n        properLastChunkReceived = import_node_buffer2.Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 && import_node_buffer2.Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0;\n      }\n      previousChunk = buf;\n    });\n  });\n}\n\n// src/index.js\ninit_fetch_blob();\ninit_esm_min();\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  AbortError,\n  Blob,\n  FetchError,\n  File,\n  FormData,\n  Headers,\n  Request,\n  Response,\n  blobFrom,\n  blobFromSync,\n  fileFrom,\n  fileFromSync,\n  isRedirect\n});\n/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logLevels = void 0;\nconst logLevels = {\n  debug: 20,\n  error: 50,\n  fatal: 60,\n  info: 30,\n  trace: 10,\n  warn: 40\n};\nexports.logLevels = logLevels;\n//# sourceMappingURL=constants.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _detectNode = _interopRequireDefault(require(\"detect-node\"));\n\nvar _globalthis = _interopRequireDefault(require(\"globalthis\"));\n\nvar _jsonStringifySafe = _interopRequireDefault(require(\"json-stringify-safe\"));\n\nvar _sprintfJs = require(\"sprintf-js\");\n\nvar _constants = require(\"../constants\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst globalThis = (0, _globalthis.default)();\nlet domain;\n\nif (_detectNode.default) {\n  // eslint-disable-next-line global-require\n  domain = require('domain');\n}\n\nconst getParentDomainContext = () => {\n  if (!domain) {\n    return {};\n  }\n\n  const parentRoarrContexts = [];\n  let currentDomain = process.domain; // $FlowFixMe\n\n  if (!currentDomain || !currentDomain.parentDomain) {\n    return {};\n  }\n\n  while (currentDomain && currentDomain.parentDomain) {\n    currentDomain = currentDomain.parentDomain;\n\n    if (currentDomain.roarr && currentDomain.roarr.context) {\n      parentRoarrContexts.push(currentDomain.roarr.context);\n    }\n  }\n\n  let domainContext = {};\n\n  for (const parentRoarrContext of parentRoarrContexts) {\n    domainContext = _objectSpread(_objectSpread({}, domainContext), parentRoarrContext);\n  }\n\n  return domainContext;\n};\n\nconst getFirstParentDomainContext = () => {\n  if (!domain) {\n    return {};\n  }\n\n  let currentDomain = process.domain; // $FlowFixMe\n\n  if (currentDomain && currentDomain.roarr && currentDomain.roarr.context) {\n    return currentDomain.roarr.context;\n  } // $FlowFixMe\n\n\n  if (!currentDomain || !currentDomain.parentDomain) {\n    return {};\n  }\n\n  while (currentDomain && currentDomain.parentDomain) {\n    currentDomain = currentDomain.parentDomain;\n\n    if (currentDomain.roarr && currentDomain.roarr.context) {\n      return currentDomain.roarr.context;\n    }\n  }\n\n  return {};\n};\n\nconst createLogger = (onMessage, parentContext) => {\n  // eslint-disable-next-line id-length, unicorn/prevent-abbreviations\n  const log = (a, b, c, d, e, f, g, h, i, k) => {\n    const time = Date.now();\n    const sequence = globalThis.ROARR.sequence++;\n    let context;\n    let message;\n\n    if (typeof a === 'string') {\n      context = _objectSpread(_objectSpread({}, getFirstParentDomainContext()), parentContext || {}); // eslint-disable-next-line id-length, object-property-newline\n\n      const args = _extends({}, {\n        a,\n        b,\n        c,\n        d,\n        e,\n        f,\n        g,\n        h,\n        i,\n        k\n      });\n\n      const values = Object.keys(args).map(key => {\n        return args[key];\n      }); // eslint-disable-next-line unicorn/no-reduce\n\n      const hasOnlyOneParameterValued = 1 === values.reduce((accumulator, value) => {\n        // eslint-disable-next-line no-return-assign, no-param-reassign\n        return accumulator += typeof value === 'undefined' ? 0 : 1;\n      }, 0);\n      message = hasOnlyOneParameterValued ? (0, _sprintfJs.sprintf)('%s', a) : (0, _sprintfJs.sprintf)(a, b, c, d, e, f, g, h, i, k);\n    } else {\n      if (typeof b !== 'string') {\n        throw new TypeError('Message must be a string.');\n      }\n\n      context = JSON.parse((0, _jsonStringifySafe.default)(_objectSpread(_objectSpread(_objectSpread({}, getFirstParentDomainContext()), parentContext || {}), a)));\n      message = (0, _sprintfJs.sprintf)(b, c, d, e, f, g, h, i, k);\n    }\n\n    onMessage({\n      context,\n      message,\n      sequence,\n      time,\n      version: '1.0.0'\n    });\n  };\n\n  log.child = context => {\n    if (typeof context === 'function') {\n      return createLogger(message => {\n        if (typeof context !== 'function') {\n          throw new TypeError('Unexpected state.');\n        }\n\n        onMessage(context(message));\n      }, parentContext);\n    }\n\n    return createLogger(onMessage, _objectSpread(_objectSpread(_objectSpread({}, getFirstParentDomainContext()), parentContext), context));\n  };\n\n  log.getContext = () => {\n    return _objectSpread(_objectSpread({}, getFirstParentDomainContext()), parentContext || {});\n  };\n\n  log.adopt = async (routine, context) => {\n    if (!domain) {\n      return routine();\n    }\n\n    const adoptedDomain = domain.create();\n    return adoptedDomain.run(() => {\n      // $FlowFixMe\n      adoptedDomain.roarr = {\n        context: _objectSpread(_objectSpread({}, getParentDomainContext()), context)\n      };\n      return routine();\n    });\n  };\n\n  for (const logLevel of Object.keys(_constants.logLevels)) {\n    // eslint-disable-next-line id-length, unicorn/prevent-abbreviations\n    log[logLevel] = (a, b, c, d, e, f, g, h, i, k) => {\n      return log.child({\n        logLevel: _constants.logLevels[logLevel]\n      })(a, b, c, d, e, f, g, h, i, k);\n    };\n  } // @see https://github.com/facebook/flow/issues/6705\n  // $FlowFixMe\n\n\n  return log;\n};\n\nvar _default = createLogger;\nexports.default = _default;\n//# sourceMappingURL=createLogger.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"../constants\");\n\nconst createMockLogger = (onMessage, parentContext) => {\n  // eslint-disable-next-line id-length, unicorn/prevent-abbreviations, no-unused-vars\n  const log = (a, b, c, d, e, f, g, h, i, k) => {//\n  };\n\n  log.adopt = async routine => {\n    return routine();\n  }; // eslint-disable-next-line no-unused-vars\n\n\n  log.child = context => {\n    return createMockLogger(onMessage, parentContext);\n  };\n\n  log.getContext = () => {\n    return {};\n  };\n\n  for (const logLevel of Object.keys(_constants.logLevels)) {\n    // eslint-disable-next-line id-length, unicorn/prevent-abbreviations\n    log[logLevel] = (a, b, c, d, e, f, g, h, i, k) => {\n      return log.child({\n        logLevel: _constants.logLevels[logLevel]\n      })(a, b, c, d, e, f, g, h, i, k);\n    };\n  } // @see https://github.com/facebook/flow/issues/6705\n  // $FlowFixMe\n\n\n  return log;\n};\n\nvar _default = createMockLogger;\nexports.default = _default;\n//# sourceMappingURL=createMockLogger.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nconst createBlockingWriter = stream => {\n  return {\n    write: message => {\n      stream.write(message + '\\n');\n    }\n  };\n};\n\nconst createNodeWriter = () => {\n  // eslint-disable-next-line no-process-env\n  const targetStream = (process.env.ROARR_STREAM || 'STDOUT').toUpperCase();\n  const stream = targetStream.toUpperCase() === 'STDOUT' ? process.stdout : process.stderr;\n  return createBlockingWriter(stream);\n};\n\nvar _default = createNodeWriter;\nexports.default = _default;\n//# sourceMappingURL=createNodeWriter.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _detectNode = _interopRequireDefault(require(\"detect-node\"));\n\nvar _semverCompare = _interopRequireDefault(require(\"semver-compare\"));\n\nvar _package = require(\"../../package.json\");\n\nvar _createNodeWriter = _interopRequireDefault(require(\"./createNodeWriter\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// eslint-disable-next-line flowtype/no-weak-types\nconst createRoarrInititialGlobalState = currentState => {\n  const versions = (currentState.versions || []).concat();\n  versions.sort(_semverCompare.default);\n  const currentIsLatestVersion = !versions.length || (0, _semverCompare.default)(_package.version, versions[versions.length - 1]) === 1;\n\n  if (!versions.includes(_package.version)) {\n    versions.push(_package.version);\n  }\n\n  versions.sort(_semverCompare.default);\n\n  let newState = _objectSpread(_objectSpread({\n    sequence: 0\n  }, currentState), {}, {\n    versions\n  });\n\n  if (_detectNode.default) {\n    if (currentIsLatestVersion || !newState.write) {\n      newState = _objectSpread(_objectSpread({}, newState), (0, _createNodeWriter.default)());\n    }\n  }\n\n  return newState;\n};\n\nvar _default = createRoarrInititialGlobalState;\nexports.default = _default;\n//# sourceMappingURL=createRoarrInititialGlobalState.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"createLogger\", {\n  enumerable: true,\n  get: function () {\n    return _createLogger.default;\n  }\n});\nObject.defineProperty(exports, \"createMockLogger\", {\n  enumerable: true,\n  get: function () {\n    return _createMockLogger.default;\n  }\n});\nObject.defineProperty(exports, \"createRoarrInititialGlobalState\", {\n  enumerable: true,\n  get: function () {\n    return _createRoarrInititialGlobalState.default;\n  }\n});\n\nvar _createLogger = _interopRequireDefault(require(\"./createLogger\"));\n\nvar _createMockLogger = _interopRequireDefault(require(\"./createMockLogger\"));\n\nvar _createRoarrInititialGlobalState = _interopRequireDefault(require(\"./createRoarrInititialGlobalState\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.ROARR = void 0;\n\nvar _boolean = require(\"boolean\");\n\nvar _detectNode = _interopRequireDefault(require(\"detect-node\"));\n\nvar _globalthis = _interopRequireDefault(require(\"globalthis\"));\n\nvar _factories = require(\"./factories\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst globalThis = (0, _globalthis.default)();\nconst ROARR = globalThis.ROARR = (0, _factories.createRoarrInititialGlobalState)(globalThis.ROARR || {});\nexports.ROARR = ROARR;\nlet logFactory = _factories.createLogger;\n\nif (_detectNode.default) {\n  // eslint-disable-next-line no-process-env\n  const enabled = (0, _boolean.boolean)(process.env.ROARR_LOG || '');\n\n  if (!enabled) {\n    logFactory = _factories.createMockLogger;\n  }\n}\n\nvar _default = logFactory(message => {\n  if (ROARR.write) {\n    // Stringify message as soon as it is received to prevent\n    // properties of the context from being modified by reference.\n    const body = JSON.stringify(message);\n    ROARR.write(body);\n  }\n});\n\nexports.default = _default;\n//# sourceMappingURL=log.js.map","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","module.exports = function cmp (a, b) {\n    var pa = a.split('.');\n    var pb = b.split('.');\n    for (var i = 0; i < 3; i++) {\n        var na = Number(pa[i]);\n        var nb = Number(pb[i]);\n        if (na > nb) return 1;\n        if (nb > na) return -1;\n        if (!isNaN(na) && isNaN(nb)) return 1;\n        if (isNaN(na) && !isNaN(nb)) return -1;\n    }\n    return 0;\n};\n","'use strict';\n\nclass NonError extends Error {\n\tconstructor(message) {\n\t\tsuper(NonError._prepareSuperMessage(message));\n\t\tObject.defineProperty(this, 'name', {\n\t\t\tvalue: 'NonError',\n\t\t\tconfigurable: true,\n\t\t\twritable: true\n\t\t});\n\n\t\tif (Error.captureStackTrace) {\n\t\t\tError.captureStackTrace(this, NonError);\n\t\t}\n\t}\n\n\tstatic _prepareSuperMessage(message) {\n\t\ttry {\n\t\t\treturn JSON.stringify(message);\n\t\t} catch (_) {\n\t\t\treturn String(message);\n\t\t}\n\t}\n}\n\nconst commonProperties = [\n\t{property: 'name', enumerable: false},\n\t{property: 'message', enumerable: false},\n\t{property: 'stack', enumerable: false},\n\t{property: 'code', enumerable: true}\n];\n\nconst destroyCircular = ({from, seen, to_, forceEnumerable}) => {\n\tconst to = to_ || (Array.isArray(from) ? [] : {});\n\n\tseen.push(from);\n\n\tfor (const [key, value] of Object.entries(from)) {\n\t\tif (typeof value === 'function') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!value || typeof value !== 'object') {\n\t\t\tto[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!seen.includes(from[key])) {\n\t\t\tto[key] = destroyCircular({from: from[key], seen: seen.slice(), forceEnumerable});\n\t\t\tcontinue;\n\t\t}\n\n\t\tto[key] = '[Circular]';\n\t}\n\n\tfor (const {property, enumerable} of commonProperties) {\n\t\tif (typeof from[property] === 'string') {\n\t\t\tObject.defineProperty(to, property, {\n\t\t\t\tvalue: from[property],\n\t\t\t\tenumerable: forceEnumerable ? true : enumerable,\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true\n\t\t\t});\n\t\t}\n\t}\n\n\treturn to;\n};\n\nconst serializeError = value => {\n\tif (typeof value === 'object' && value !== null) {\n\t\treturn destroyCircular({from: value, seen: [], forceEnumerable: true});\n\t}\n\n\t// People sometimes throw things besides Error objects…\n\tif (typeof value === 'function') {\n\t\t// `JSON.stringify()` discards functions. We do too, unless a function is thrown directly.\n\t\treturn `[Function: ${(value.name || 'anonymous')}]`;\n\t}\n\n\treturn value;\n};\n\nconst deserializeError = value => {\n\tif (value instanceof Error) {\n\t\treturn value;\n\t}\n\n\tif (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n\t\tconst newError = new Error();\n\t\tdestroyCircular({from: value, seen: [], to_: newError});\n\t\treturn newError;\n\t}\n\n\treturn new NonError(value);\n};\n\nmodule.exports = {\n\tserializeError,\n\tdeserializeError\n};\n","module.exports = require('./lib/tunnel');\n","'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n",null,"module.exports = require(\"assert\");","module.exports = require(\"buffer\");","module.exports = require(\"crypto\");","module.exports = require(\"domain\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"process\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(3109);\n"],"mappingspvTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzvtjrhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACfxMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACzDA;AACA;;;A;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC9EA;;;A;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;ACztflDA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACNA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;AACA;AACA;;;A;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACtBA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACdA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AChCA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACLA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACTA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACtrLA;AACA;AACA;AACA;;;A;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACNA;AACA;AACA;AACA;;;A;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACvlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACrcA;AACA;AACA;AACA;;;A;;;;;;AC58KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACfxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;ACztpvzaA;;;A;;;;;;A;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;;;;ACDA;AACA;AACA;AACA;;;;A","sourceRoot":""}